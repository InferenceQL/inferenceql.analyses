var js_program_transitions = [
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(1.964, 5.050),\n     \"Launch_Mass_kg\": gaussian(117.631, 5.675),\n     \"Apogee_km\": gaussian(712.379, 3.548),\n     \"Perigee_km\": gaussian(671.094, 2.650),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(101.543, 5.434),\n     \"Inclination_radians\": gaussian(2.692, 3.079),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.133, 2.048),\n     \"Launch_Mass_kg\": gaussian(117.820, 5.546),\n     \"Apogee_km\": gaussian(711.351, 2.753),\n     \"Perigee_km\": gaussian(670.252, 0.809),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.097, 1.590),\n     \"Inclination_radians\": gaussian(4.859, 10.726),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.780, 2.662),\n     \"Apogee_km\": gaussian(713.104, 7.845),\n     \"Perigee_km\": gaussian(671.453, 3.307),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.301, 1.732)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.514, 4.729),\n     \"Inclination_radians\": gaussian(3.468, 2.869),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Launch_Mass_kg\": gaussian(115.387, 2.037),\n     \"Apogee_km\": gaussian(711.205, 2.942),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.643, 6.860),\n     \"Inclination_radians\": gaussian(2.941, 3.046),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.737, 1.295),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(671.916, 7.643)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.616, 4.068),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(2.477, 2.318)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.499, 6.684),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(672.621, 6.753)\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(711.322, 3.395),\n     \"Period_minutes\": gaussian(101.130, 5.310)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.779, 2.867),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(98.692, 0.379),\n     \"Inclination_radians\": gaussian(2.014, 1.263),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.068, 3.441),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(711.855, 5.672),\n     \"Perigee_km\": gaussian(672.202, 4.490)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.155, 0.352),\n     \"Launch_Mass_kg\": gaussian(115.470, 0.989),\n     \"Apogee_km\": gaussian(710.197, 1.040),\n     \"Perigee_km\": gaussian(670.914, 1.531),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.075, 3.402),\n     \"Inclination_radians\": gaussian(3.830, 5.941),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(3.305, 6.069),\n     \"Launch_Mass_kg\": gaussian(116.227, 3.037),\n     \"Apogee_km\": gaussian(711.610, 5.401),\n     \"Perigee_km\": gaussian(670.235, 2.218),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.754, 4.887),\n     \"Inclination_radians\": gaussian(3.934, 21.635),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.501, 1.762),\n     \"Perigee_km\": gaussian(671.584, 5.187),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.468, 5.893),\n     \"Inclination_radians\": gaussian(4.629, 7.015),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.282, 2.701),\n     \"Apogee_km\": gaussian(710.182, 0.696)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(116.356, 2.814),\n     \"Apogee_km\": gaussian(710.656, 1.242),\n     \"Inclination_radians\": gaussian(2.504, 1.531),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.320, 1.462),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.331, 1.190),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(100.500, 4.269)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(116.124, 10.237),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.758, 1.988),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.178, 0.515),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.580, 2.838),\n     \"Inclination_radians\": gaussian(3.068, 3.758)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.897, 3.304)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.549, 4.599),\n     \"Apogee_km\": gaussian(711.556, 3.185),\n     \"Perigee_km\": gaussian(670.754, 2.062)\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(101.516, 8.481)\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.646, 3.679),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_8() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(3.931, 4.500)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7(), ...view_8()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(1.888, 13.084),\n     \"Launch_Mass_kg\": gaussian(116.575, 5.186),\n     \"Apogee_km\": gaussian(713.371, 5.686),\n     \"Perigee_km\": gaussian(671.050, 2.618),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.685, 2.405),\n     \"Inclination_radians\": gaussian(3.344, 3.912),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Period_minutes\": gaussian(99.984, 5.222),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(3.199, 5.227),\n     \"Launch_Mass_kg\": gaussian(115.927, 2.172),\n     \"Inclination_radians\": gaussian(3.429, 3.778),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(713.146, 4.761),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(672.350, 3.815),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(711.229, 1.751),\n     \"Perigee_km\": gaussian(671.396, 2.811),\n     \"Period_minutes\": gaussian(98.748, 1.750),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(1.170, 2.251),\n     \"Inclination_radians\": gaussian(2.456, 1.476)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.384, 1.024)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.106, 0.966),\n     \"Launch_Mass_kg\": gaussian(60.112, 112.855),\n     \"Apogee_km\": gaussian(734.098, 96.759),\n     \"Perigee_km\": gaussian(734.553, 176.840),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.823, 2.285),\n     \"Inclination_radians\": gaussian(1.919, 0.794),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.067, 1.116),\n     \"Launch_Mass_kg\": gaussian(115.376, 1.593),\n     \"Apogee_km\": gaussian(711.147, 5.932),\n     \"Perigee_km\": gaussian(671.649, 6.926),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.025, 1.785),\n     \"Inclination_radians\": gaussian(1.836, 1.046),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.235, 1.307),\n     \"Launch_Mass_kg\": gaussian(115.011, 1.313),\n     \"Apogee_km\": gaussian(710.556, 2.110),\n     \"Perigee_km\": gaussian(670.152, 0.760),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.259, 1.878),\n     \"Inclination_radians\": gaussian(1.904, 1.508),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.263, 1.261),\n     \"Launch_Mass_kg\": gaussian(58.968, 138.230),\n     \"Apogee_km\": gaussian(746.851, 78.244),\n     \"Perigee_km\": gaussian(694.386, 159.024),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.216, 0.919),\n     \"Inclination_radians\": gaussian(1.892, 1.261),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.997, 0.445),\n     \"Apogee_km\": gaussian(710.138, 1.779),\n     \"Perigee_km\": gaussian(670.227, 1.747),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.036, 1.234),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(70.493, 111.441),\n     \"Apogee_km\": gaussian(759.366, 87.578),\n     \"Perigee_km\": gaussian(733.504, 126.968),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.690, 2.182),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.040, 0.231),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.963, 1.119)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(2.027, 1.204)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.083, 0.307),\n     \"Launch_Mass_kg\": gaussian(69.227, 167.571),\n     \"Perigee_km\": gaussian(723.614, 133.485),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.016, 1.940),\n     \"Inclination_radians\": gaussian(1.717, 0.162),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.089, 0.290),\n     \"Launch_Mass_kg\": gaussian(115.492, 3.137),\n     \"Perigee_km\": gaussian(672.099, 5.479),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.792, 1.178),\n     \"Inclination_radians\": gaussian(1.706, 0.285),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.257, 2.571)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(750.734, 91.374)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.497, 2.290),\n     \"Apogee_km\": gaussian(710.192, 1.996),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(54.864, 162.908),\n     \"Apogee_km\": gaussian(753.033, 89.839),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(696.836, 110.312),\n     \"Inclination_radians\": gaussian(2.092, 0.987),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.238, 1.323),\n     \"Period_minutes\": gaussian(98.666, 0.324)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.274, 1.067),\n     \"Period_minutes\": gaussian(99.803, 2.072)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.008, 0.156),\n     \"Apogee_km\": gaussian(741.355, 60.977),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.591, 1.133),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.716, 0.268)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.714, 0.274)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.373, 1.184)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(706.740, 135.493)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.990, 0.536)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.371, 142.480)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.249),\n     \"Launch_Mass_kg\": gaussian(115.038, 1.532),\n     \"Apogee_km\": gaussian(710.144, 0.614),\n     \"Perigee_km\": gaussian(670.291, 1.274),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.744, 0.540),\n     \"Inclination_radians\": gaussian(1.700, 0.584),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.275),\n     \"Launch_Mass_kg\": gaussian(42.255, 133.277),\n     \"Apogee_km\": gaussian(755.714, 142.559),\n     \"Perigee_km\": gaussian(735.014, 118.650),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.856, 1.200),\n     \"Inclination_radians\": gaussian(1.702, 0.637),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.142),\n     \"Launch_Mass_kg\": gaussian(117.063, 5.550),\n     \"Apogee_km\": gaussian(711.196, 2.393),\n     \"Perigee_km\": gaussian(670.145, 2.144),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.958, 11.196),\n     \"Inclination_radians\": gaussian(1.702, 0.382),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.129),\n     \"Launch_Mass_kg\": gaussian(58.769, 192.379),\n     \"Apogee_km\": gaussian(746.729, 77.703),\n     \"Perigee_km\": gaussian(735.721, 145.492),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.471, 1.705),\n     \"Inclination_radians\": gaussian(1.680, 0.434),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.005, 0.191),\n     \"Launch_Mass_kg\": gaussian(43.305, 104.835),\n     \"Apogee_km\": gaussian(756.096, 560.580),\n     \"Perigee_km\": gaussian(729.114, 142.862),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.172),\n     \"Launch_Mass_kg\": gaussian(115.359, 1.314),\n     \"Apogee_km\": gaussian(710.112, 2.265),\n     \"Perigee_km\": gaussian(671.867, 6.950),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(99.557, 1.326),\n     \"Inclination_radians\": gaussian(2.173, 1.542)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.112, 0.730),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(721.487, 144.352),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.121, 0.506),\n     \"Launch_Mass_kg\": gaussian(115.894, 2.855),\n     \"Apogee_km\": gaussian(711.598, 6.119),\n     \"Inclination_radians\": gaussian(1.790, 0.532)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.167, 0.746),\n     \"Launch_Mass_kg\": gaussian(52.813, 147.385),\n     \"Apogee_km\": gaussian(748.243, 93.412),\n     \"Inclination_radians\": gaussian(1.905, 3.553)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.999, 0.813),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.049, 1.085),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Launch_Mass_kg\": gaussian(115.121, 0.570),\n     \"Apogee_km\": gaussian(710.077, 0.713),\n     \"Period_minutes\": gaussian(99.166, 1.597),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(74.178, 197.901),\n     \"Apogee_km\": gaussian(759.873, 99.743),\n     \"Period_minutes\": gaussian(99.863, 1.670),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.012, 0.240)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.246)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(2.892, 3.777)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(2.634, 3.575)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(734.595, 128.808),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(670.725, 2.586),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.831, 0.407),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.085, 0.278),\n     \"Launch_Mass_kg\": gaussian(115.931, 3.886),\n     \"Apogee_km\": gaussian(710.238, 1.504)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.087, 0.264),\n     \"Launch_Mass_kg\": gaussian(46.248, 162.298),\n     \"Apogee_km\": gaussian(749.256, 86.656)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(99.520, 1.777)\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.205, 2.058)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(721.397, 181.650)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.167),\n     \"Launch_Mass_kg\": gaussian(116.232, 4.456),\n     \"Perigee_km\": gaussian(672.270, 5.613),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.336, 2.226),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.151),\n     \"Launch_Mass_kg\": gaussian(49.532, 163.373),\n     \"Perigee_km\": gaussian(731.817, 137.368),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.175, 1.527),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.671, 0.746)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.698, 0.582)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(711.336, 3.767)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(750.834, 123.692)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(732.476, 62.953),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(100.387, 2.715),\n     \"Inclination_radians\": gaussian(2.505, 2.290),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(64.643, 258.109)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.189, 1.579)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(671.006, 2.928)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(725.044, 142.168)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.009, 0.250)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.003, 0.275)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.612, 1.105),\n     \"Apogee_km\": gaussian(709.996, 0.239),\n     \"Perigee_km\": gaussian(670.088, 0.636),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.475, 1.566),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(76.576, 178.981),\n     \"Apogee_km\": gaussian(742.784, 170.169),\n     \"Perigee_km\": gaussian(715.856, 115.438),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.154, 0.882),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.721, 0.233)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.714, 0.286)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.158),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.067, 0.415),\n     \"Launch_Mass_kg\": gaussian(48.965, 173.139),\n     \"Apogee_km\": gaussian(757.599, 88.090),\n     \"Perigee_km\": gaussian(726.903, 165.691),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(101.097, 1.989),\n     \"Inclination_radians\": gaussian(1.787, 1.324),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.074, 0.331),\n     \"Launch_Mass_kg\": gaussian(115.089, 2.404),\n     \"Apogee_km\": gaussian(710.821, 4.654),\n     \"Perigee_km\": gaussian(671.926, 6.167),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.290, 4.687),\n     \"Inclination_radians\": gaussian(1.839, 1.287),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.081, 0.354),\n     \"Launch_Mass_kg\": gaussian(1419.393, 3232.520),\n     \"Apogee_km\": gaussian(19455.349, 43520.305),\n     \"Perigee_km\": gaussian(18997.409, 59069.248),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(789.081, 1552.836),\n     \"Inclination_radians\": gaussian(0.831, 1.897),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.169),\n     \"Launch_Mass_kg\": gaussian(115.577, 1.904),\n     \"Apogee_km\": gaussian(710.443, 2.585),\n     \"Perigee_km\": gaussian(672.738, 7.223),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.367, 3.807),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.167),\n     \"Launch_Mass_kg\": gaussian(69.277, 143.501),\n     \"Apogee_km\": gaussian(763.559, 112.757),\n     \"Perigee_km\": gaussian(715.869, 150.073),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.529, 0.761),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.197),\n     \"Launch_Mass_kg\": gaussian(1488.441, 4866.284),\n     \"Apogee_km\": gaussian(23025.913, 42132.825),\n     \"Perigee_km\": gaussian(18275.898, 51020.553),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1021.930, 1593.206),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(2.194, 1.968)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(2.283, 1.589)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Inclination_radians\": gaussian(1.644, 4.072)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.351, 2.605),\n     \"Perigee_km\": gaussian(669.997, 1.282),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.762, 2.424),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(24367.180, 41632.068),\n     \"Perigee_km\": gaussian(15860.783, 48450.577),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1061.742, 2648.915),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(764.799, 84.541),\n     \"Perigee_km\": gaussian(702.426, 209.157),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.029, 9.946),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.478, 1.502)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.107, 0.906)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1188.506, 2610.578)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.048, 0.206)\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.095, 0.095, 0.048, 0.048, 0.048, 0.048, 0.095, 0.048, 0.048, 0.048, 0.048])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(69.072, 143.776),\n     \"Apogee_km\": gaussian(750.022, 95.623),\n     \"Perigee_km\": gaussian(706.287, 650.369),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(100.604, 2.460),\n     \"Inclination_radians\": gaussian(1.797, 0.358),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.234, 1.436),\n     \"Apogee_km\": gaussian(710.288, 1.203),\n     \"Perigee_km\": gaussian(670.819, 2.622),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(99.403, 4.188),\n     \"Inclination_radians\": gaussian(1.784, 0.504),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1267.962, 4151.162),\n     \"Apogee_km\": gaussian(24482.865, 120954.574),\n     \"Perigee_km\": gaussian(23202.659, 71498.820),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(929.195, 2201.064),\n     \"Inclination_radians\": gaussian(0.864, 3.138),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.015, 0.361),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.014, 0.209),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.333, 0.333, 0.167, 0.167])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.270),\n     \"Launch_Mass_kg\": gaussian(115.021, 0.710),\n     \"Inclination_radians\": gaussian(1.776, 0.957)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.129),\n     \"Launch_Mass_kg\": gaussian(696.471, 2305.632),\n     \"Inclination_radians\": gaussian(1.157, 1.515)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(670.340, 10.034),\n     \"Period_minutes\": gaussian(98.674, 0.637)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(702.314, 192.741),\n     \"Period_minutes\": gaussian(99.832, 2.631)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Perigee_km\": gaussian(10446.032, 52624.759),\n     \"Period_minutes\": gaussian(814.005, 4173.412)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.333, 0.333, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.113, 0.408)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(735.474, 117.605)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(17322.132, 39909.715)\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(22038.820, 64061.202),\n     \"Perigee_km\": gaussian(22045.137, 35318.174),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(476.806, 8586.672),\n     \"Inclination_radians\": gaussian(0.772, 2.290)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(752.049, 99.143),\n     \"Perigee_km\": gaussian(733.504, 113.809),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.491, 1.867),\n     \"Inclination_radians\": gaussian(1.716, 0.284)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(712.170, 7.259),\n     \"Perigee_km\": gaussian(670.082, 2.607),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.598, 3.881),\n     \"Inclination_radians\": gaussian(1.714, 0.374)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.566, 2.505),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1102.419, 2837.320),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.112)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.173)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.009, 0.229),\n     \"Launch_Mass_kg\": gaussian(115.026, 0.923),\n     \"Apogee_km\": gaussian(710.110, 2.325),\n     \"Perigee_km\": gaussian(670.359, 2.873),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.810, 3.231),\n     \"Inclination_radians\": gaussian(1.784, 0.829),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.010, 0.187),\n     \"Launch_Mass_kg\": gaussian(71.764, 189.782),\n     \"Apogee_km\": gaussian(755.959, 112.184),\n     \"Perigee_km\": gaussian(722.039, 224.080),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.481, 1.235),\n     \"Inclination_radians\": gaussian(1.790, 0.608),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.249),\n     \"Launch_Mass_kg\": gaussian(1436.566, 6718.959),\n     \"Apogee_km\": gaussian(25008.539, 44645.226),\n     \"Perigee_km\": gaussian(18450.978, 46673.859),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(665.219, 1984.721),\n     \"Inclination_radians\": gaussian(0.711, 2.487),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.200),\n     \"Launch_Mass_kg\": gaussian(117.516, 8.202),\n     \"Apogee_km\": gaussian(710.283, 2.150),\n     \"Perigee_km\": gaussian(670.248, 1.395),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.602, 1.001),\n     \"Inclination_radians\": gaussian(1.782, 1.496),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.197),\n     \"Launch_Mass_kg\": gaussian(67.627, 203.118),\n     \"Apogee_km\": gaussian(754.277, 109.404),\n     \"Perigee_km\": gaussian(696.166, 174.886),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.493, 5.595),\n     \"Inclination_radians\": gaussian(1.748, 1.431),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.008, 0.194),\n     \"Launch_Mass_kg\": gaussian(1113.106, 4479.174),\n     \"Apogee_km\": gaussian(22579.071, 37797.310),\n     \"Perigee_km\": gaussian(12493.770, 64728.424),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(734.707, 2236.290),\n     \"Inclination_radians\": gaussian(0.595, 2.325),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.052, 0.356),\n     \"Perigee_km\": gaussian(717.377, 195.444),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.585, 1.780),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.063, 0.213),\n     \"Perigee_km\": gaussian(670.282, 1.225),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.373, 2.820),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.059, 0.263),\n     \"Perigee_km\": gaussian(17389.816, 72503.712),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(906.698, 1619.363),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1566.685, 4483.941),\n     \"Apogee_km\": gaussian(24625.593, 56374.931),\n     \"Inclination_radians\": gaussian(1.138, 1.749),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.073, 0.553),\n     \"Apogee_km\": gaussian(711.617, 5.333),\n     \"Inclination_radians\": gaussian(1.707, 0.122),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(57.757, 146.634),\n     \"Apogee_km\": gaussian(764.010, 80.218),\n     \"Inclination_radians\": gaussian(1.714, 0.116),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.182),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(99.267, 2.518),\n     \"Inclination_radians\": gaussian(1.690, 0.230),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.201),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(771.865, 1947.569),\n     \"Inclination_radians\": gaussian(1.027, 3.590),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.018, 0.170),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(100.136, 2.335),\n     \"Inclination_radians\": gaussian(1.710, 0.263),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.082, 2.497),\n     \"Apogee_km\": gaussian(711.463, 7.861),\n     \"Perigee_km\": gaussian(670.119, 0.896)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1924.431, 4466.223),\n     \"Apogee_km\": gaussian(23725.444, 50238.101),\n     \"Perigee_km\": gaussian(10810.695, 129681.547)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.268, 624.635),\n     \"Apogee_km\": gaussian(758.266, 114.076),\n     \"Perigee_km\": gaussian(713.502, 206.503)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.015, 0.209),\n     \"Apogee_km\": gaussian(710.047, 1.593),\n     \"Perigee_km\": gaussian(670.055, 0.899),\n     \"Period_minutes\": gaussian(99.361, 2.806),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.013, 0.186),\n     \"Apogee_km\": gaussian(755.246, 103.138),\n     \"Perigee_km\": gaussian(730.024, 109.610),\n     \"Period_minutes\": gaussian(100.343, 1.559),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.162),\n     \"Apogee_km\": gaussian(19847.748, 56940.340),\n     \"Perigee_km\": gaussian(21859.977, 41204.172),\n     \"Period_minutes\": gaussian(740.533, 3896.526),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.673, 1.296),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.620, 1.272),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(0.892, 2.837),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.522, 1.692)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(781.528, 2357.847)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(99.501, 1.441),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(913.391, 1951.855),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.069),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Perigee_km\": gaussian(671.339, 4.309)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Perigee_km\": gaussian(727.421, 227.457)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Perigee_km\": gaussian(17590.440, 74808.941)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.613, 2.162),\n     \"Inclination_radians\": gaussian(1.722, 0.515)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(753.082, 99.062),\n     \"Inclination_radians\": gaussian(1.785, 0.433)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(18463.852, 40540.448),\n     \"Inclination_radians\": gaussian(0.799, 1.802)\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.744, 4.673)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(71.476, 132.087)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1652.613, 10170.003)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.802, 2.383),\n     \"Perigee_km\": gaussian(670.209, 1.283),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(79.691, 213.365),\n     \"Perigee_km\": gaussian(726.812, 138.353),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1381.930, 4722.923),\n     \"Perigee_km\": gaussian(21273.359, 38924.828),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.004, 0.181),\n     \"Period_minutes\": gaussian(99.437, 1.340),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.009, 0.280),\n     \"Period_minutes\": gaussian(924.338, 1604.866),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.222, 1.154),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.689, 0.594),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(13092.049, 32104.004),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.105, 1.721),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.238),\n     \"Launch_Mass_kg\": gaussian(1803.252, 3042.506),\n     \"Apogee_km\": gaussian(25059.967, 42906.461),\n     \"Perigee_km\": gaussian(18664.766, 42979.415),\n     \"Inclination_radians\": gaussian(1.094, 1.699),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(-0.000, 0.264),\n     \"Launch_Mass_kg\": gaussian(115.405, 5.044),\n     \"Apogee_km\": gaussian(711.356, 4.746),\n     \"Perigee_km\": gaussian(671.725, 6.089),\n     \"Inclination_radians\": gaussian(1.725, 0.823),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.194),\n     \"Launch_Mass_kg\": gaussian(48.377, 154.395),\n     \"Apogee_km\": gaussian(758.949, 93.067),\n     \"Perigee_km\": gaussian(732.225, 166.306),\n     \"Inclination_radians\": gaussian(1.698, 1.184),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(98.616, 0.939)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(99.929, 2.198)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Period_minutes\": gaussian(978.607, 1899.345)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Class_of_Orbit\": categorical([0.429, 0.286, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.333, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.176),\n     \"Launch_Mass_kg\": gaussian(115.408, 4.518),\n     \"Apogee_km\": gaussian(710.593, 4.477),\n     \"Perigee_km\": gaussian(670.143, 1.918),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.591, 3.172),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.006, 0.149),\n     \"Launch_Mass_kg\": gaussian(46.564, 128.705),\n     \"Apogee_km\": gaussian(756.789, 102.616),\n     \"Perigee_km\": gaussian(692.701, 212.520),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.793, 1.845),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.011, 0.189),\n     \"Launch_Mass_kg\": gaussian(1684.756, 4725.471),\n     \"Apogee_km\": gaussian(26042.087, 57075.473),\n     \"Perigee_km\": gaussian(14752.753, 65268.327),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(807.115, 1544.114),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.855, 0.465),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.263, 2.551),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.189),\n     \"Apogee_km\": gaussian(752.995, 102.313),\n     \"Perigee_km\": gaussian(734.190, 140.221),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.735, 5.288),\n     \"Inclination_radians\": gaussian(1.719, 0.364),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.201),\n     \"Apogee_km\": gaussian(709.855, 2.247),\n     \"Perigee_km\": gaussian(671.042, 4.612),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.612, 2.002),\n     \"Inclination_radians\": gaussian(1.701, 0.344),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.010, 0.134),\n     \"Apogee_km\": gaussian(24282.877, 28726.617),\n     \"Perigee_km\": gaussian(26905.408, 27527.139),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1095.958, 1004.523),\n     \"Inclination_radians\": gaussian(0.689, 1.249),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.138, 1.613)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1241.507, 1907.369)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.017, 0.337),\n     \"Apogee_km\": gaussian(709.997, 1.013),\n     \"Perigee_km\": gaussian(670.169, 2.378),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.252),\n     \"Apogee_km\": gaussian(757.927, 85.431),\n     \"Perigee_km\": gaussian(733.927, 169.373),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.120),\n     \"Apogee_km\": gaussian(29407.631, 23751.803),\n     \"Perigee_km\": gaussian(25069.327, 41848.444),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.250, 0.250, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.867, 1.200)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.832, 1.086)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Inclination_radians\": gaussian(1.070, 3.464)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Inclination_radians\": gaussian(0.879, 2.670)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(98.565, 0.860)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(99.593, 2.372)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Period_minutes\": gaussian(932.462, 1270.285)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.071, 0.888)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(44.699, 144.634)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1647.429, 1996.911)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(114.900, 2.870),\n     \"Apogee_km\": gaussian(710.359, 2.469),\n     \"Perigee_km\": gaussian(670.100, 1.497),\n     \"Period_minutes\": gaussian(99.714, 2.956),\n     \"Inclination_radians\": gaussian(1.900, 1.595)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1700.281, 1842.405),\n     \"Apogee_km\": gaussian(21251.943, 30447.083),\n     \"Perigee_km\": gaussian(24627.179, 29348.133),\n     \"Period_minutes\": gaussian(832.596, 1477.248),\n     \"Inclination_radians\": gaussian(1.040, 2.104)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(45.682, 151.528),\n     \"Apogee_km\": gaussian(752.972, 145.486),\n     \"Perigee_km\": gaussian(721.972, 125.743),\n     \"Period_minutes\": gaussian(100.427, 1.714),\n     \"Inclination_radians\": gaussian(1.953, 1.352)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.093, 0.347),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.044, 0.209),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.071, 0.036])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.091, 0.136, 0.045, 0.045, 0.045, 0.045, 0.091, 0.045, 0.045, 0.045, 0.045])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(80.981, 671.569),\n     \"Apogee_km\": gaussian(761.561, 145.640),\n     \"Perigee_km\": gaussian(721.398, 131.277),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.660, 2.025),\n     \"Inclination_radians\": gaussian(1.806, 0.602),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.122, 1.855),\n     \"Apogee_km\": gaussian(710.022, 1.592),\n     \"Perigee_km\": gaussian(670.109, 1.265),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.032, 1.763),\n     \"Inclination_radians\": gaussian(1.791, 0.617),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1497.147, 2176.549),\n     \"Apogee_km\": gaussian(25182.053, 31351.252),\n     \"Perigee_km\": gaussian(26687.851, 23846.926),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(851.152, 1406.348),\n     \"Inclination_radians\": gaussian(0.718, 1.857),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.059),\n     \"Class_of_Orbit\": categorical([0.375, 0.375, 0.125, 0.125])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.143, 0.048, 0.048, 0.048, 0.048, 0.095, 0.048, 0.048, 0.048, 0.048])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(710.074, 1.590),\n     \"Period_minutes\": gaussian(98.907, 1.398)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(760.537, 138.162),\n     \"Period_minutes\": gaussian(100.076, 1.584)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(27568.193, 28617.021),\n     \"Period_minutes\": gaussian(1122.496, 1000.799)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.375, 0.375, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.009, 0.426),\n     \"Perigee_km\": gaussian(670.242, 0.928),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(954.567, 2061.996),\n     \"Perigee_km\": gaussian(18411.545, 27485.247),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.006, 0.173)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.001, 0.108)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(-0.000, 0.166)\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.061, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\nfunction view_8() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_9() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Inclination_radians\": gaussian(1.775, 1.526)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Inclination_radians\": gaussian(1.797, 1.474)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Inclination_radians\": gaussian(0.377, 1.447)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7(), ...view_8(), ...view_9()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.250, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(28410.043, 23073.436),\n     \"Perigee_km\": gaussian(27144.943, 26780.570),\n     \"Period_minutes\": gaussian(965.034, 1355.644),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(762.570, 97.269),\n     \"Perigee_km\": gaussian(743.204, 137.410),\n     \"Period_minutes\": gaussian(99.171, 3.228),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(711.042, 4.337),\n     \"Perigee_km\": gaussian(670.287, 1.849),\n     \"Period_minutes\": gaussian(98.597, 0.395),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.071, 0.036])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.090),\n     \"Launch_Mass_kg\": gaussian(73.028, 104.703),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.784, 0.738),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.085),\n     \"Launch_Mass_kg\": gaussian(1568.725, 2102.599),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(0.912, 1.906),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.147),\n     \"Launch_Mass_kg\": gaussian(115.585, 2.692),\n     \"Apogee_km\": gaussian(710.552, 1.842),\n     \"Perigee_km\": gaussian(671.117, 4.891),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.184, 1.991),\n     \"Inclination_radians\": gaussian(1.711, 0.547),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.147),\n     \"Launch_Mass_kg\": gaussian(36.238, 118.548),\n     \"Apogee_km\": gaussian(754.346, 126.965),\n     \"Perigee_km\": gaussian(730.626, 119.127),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.204, 1.340),\n     \"Inclination_radians\": gaussian(1.720, 0.496),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.105),\n     \"Launch_Mass_kg\": gaussian(1859.548, 1850.074),\n     \"Apogee_km\": gaussian(27109.383, 26331.392),\n     \"Perigee_km\": gaussian(29618.882, 24953.339),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1051.290, 1179.240),\n     \"Inclination_radians\": gaussian(0.776, 1.559),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.157),\n     \"Launch_Mass_kg\": gaussian(114.969, 2.313),\n     \"Apogee_km\": gaussian(710.470, 3.675),\n     \"Perigee_km\": gaussian(670.670, 3.876),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.588, 0.935),\n     \"Inclination_radians\": gaussian(1.789, 0.481),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.158),\n     \"Launch_Mass_kg\": gaussian(50.604, 151.624),\n     \"Apogee_km\": gaussian(761.013, 107.698),\n     \"Perigee_km\": gaussian(734.291, 128.709),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.449, 5.907),\n     \"Inclination_radians\": gaussian(1.802, 0.564),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.086),\n     \"Launch_Mass_kg\": gaussian(1753.614, 1819.068),\n     \"Apogee_km\": gaussian(29432.015, 27644.311),\n     \"Perigee_km\": gaussian(27846.374, 26505.882),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(815.517, 1270.976),\n     \"Inclination_radians\": gaussian(0.569, 1.380),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(739.532, 118.021),\n     \"Perigee_km\": gaussian(721.884, 149.624),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.109, 1.448),\n     \"Inclination_radians\": gaussian(1.809, 1.377),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.229, 2.195),\n     \"Perigee_km\": gaussian(670.005, 1.568),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.078, 1.570),\n     \"Inclination_radians\": gaussian(1.814, 1.243),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(17395.727, 34223.390),\n     \"Perigee_km\": gaussian(25058.203, 31585.403),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1089.834, 1006.841),\n     \"Inclination_radians\": gaussian(0.678, 1.492),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.066),\n     \"Launch_Mass_kg\": gaussian(1042.708, 1849.287),\n     \"Class_of_Orbit\": categorical([0.286, 0.429, 0.143, 0.143])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.004, 0.106),\n     \"Launch_Mass_kg\": gaussian(115.150, 0.672),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(709.971, 78.925),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(100.010, 1.790)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(25383.563, 27896.235),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(958.748, 1181.149)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.168),\n     \"Launch_Mass_kg\": gaussian(115.040, 0.872),\n     \"Apogee_km\": gaussian(710.253, 2.743),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.942, 1.718),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.105),\n     \"Launch_Mass_kg\": gaussian(1714.967, 1857.655),\n     \"Apogee_km\": gaussian(28580.056, 27804.167),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(0.610, 1.605),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.150),\n     \"Launch_Mass_kg\": gaussian(39.908, 145.535),\n     \"Apogee_km\": gaussian(760.740, 99.151),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.925, 1.035),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.333, 0.333, 0.167, 0.167])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Apogee_km\": gaussian(710.078, 1.723),\n     \"Perigee_km\": gaussian(670.770, 3.526),\n     \"Period_minutes\": gaussian(99.008, 2.265),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(743.518, 115.033),\n     \"Perigee_km\": gaussian(708.993, 138.806),\n     \"Period_minutes\": gaussian(99.846, 2.329),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(19118.262, 32283.536),\n     \"Perigee_km\": gaussian(22028.345, 31298.258),\n     \"Period_minutes\": gaussian(912.588, 1211.854),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.105),\n     \"Launch_Mass_kg\": gaussian(71.144, 93.855),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.752, 0.157),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.107),\n     \"Launch_Mass_kg\": gaussian(1752.362, 2109.139),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(0.377, 1.380),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.071, 0.036])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(709.890, 1.282),\n     \"Period_minutes\": gaussian(99.511, 4.244),\n     \"Inclination_radians\": gaussian(1.703, 0.150),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(28612.235, 26763.177),\n     \"Period_minutes\": gaussian(1101.616, 969.115),\n     \"Inclination_radians\": gaussian(0.564, 1.139),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(757.848, 100.634),\n     \"Period_minutes\": gaussian(100.482, 1.310),\n     \"Inclination_radians\": gaussian(1.718, 0.129),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.250, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.063)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Perigee_km\": gaussian(669.980, 2.203),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Perigee_km\": gaussian(772.350, 1176.891),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Perigee_km\": gaussian(28027.632, 44378.857),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.467, 1.419)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1032.296, 1866.551)\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.500, 0.250, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.178),\n     \"Launch_Mass_kg\": gaussian(115.716, 4.432),\n     \"Perigee_km\": gaussian(669.970, 1.396),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.078),\n     \"Launch_Mass_kg\": gaussian(1081.626, 1856.187),\n     \"Perigee_km\": gaussian(18115.323, 27828.812),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.061, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(752.740, 195.424),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Inclination_radians\": gaussian(1.710, 0.386),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(26678.019, 25589.516),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Inclination_radians\": gaussian(0.877, 1.479),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(710.250, 1.987),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Inclination_radians\": gaussian(1.702, 0.310),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.250, 0.500, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(98.822, 0.712)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(1074.872, 968.737)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Period_minutes\": gaussian(99.877, 1.646)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.500, 0.250, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Launch_Mass_kg\": gaussian(1424.653, 2359.039),\n     \"Apogee_km\": gaussian(28455.058, 26536.655),\n     \"Perigee_km\": gaussian(21541.368, 31564.986),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1111.640, 914.178),\n     \"Inclination_radians\": gaussian(0.359, 1.115),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.813, 2.953),\n     \"Apogee_km\": gaussian(710.554, 2.315),\n     \"Perigee_km\": gaussian(670.363, 2.126),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.169, 2.400),\n     \"Inclination_radians\": gaussian(1.706, 0.234),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(66.014, 239.626),\n     \"Apogee_km\": gaussian(756.983, 137.663),\n     \"Perigee_km\": gaussian(717.578, 123.713),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.377, 0.447),\n     \"Inclination_radians\": gaussian(1.734, 0.662),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.051),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.091, 0.136, 0.045, 0.045, 0.045, 0.045, 0.091, 0.045, 0.045, 0.045, 0.045])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Class_of_Orbit\": categorical([0.286, 0.429, 0.143, 0.143])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.250, 0.250, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.024, 0.880),\n     \"Apogee_km\": gaussian(710.802, 3.394),\n     \"Perigee_km\": gaussian(671.107, 7.646),\n     \"Period_minutes\": gaussian(98.838, 2.245),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(47.105, 129.118),\n     \"Apogee_km\": gaussian(742.724, 113.770),\n     \"Perigee_km\": gaussian(725.731, 300.120),\n     \"Period_minutes\": gaussian(99.995, 3.495),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1678.957, 2221.813),\n     \"Apogee_km\": gaussian(22425.192, 30901.289),\n     \"Perigee_km\": gaussian(27505.150, 25576.169),\n     \"Period_minutes\": gaussian(1155.092, 992.004),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.109),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(0.685, 2.251)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.002, 0.117),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.849, 0.708)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.123),\n     \"Apogee_km\": gaussian(737.316, 154.902),\n     \"Perigee_km\": gaussian(714.915, 169.674),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.460, 1.823),\n     \"Inclination_radians\": gaussian(1.893, 1.176),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.112),\n     \"Apogee_km\": gaussian(710.075, 1.623),\n     \"Perigee_km\": gaussian(670.622, 2.003),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.251, 4.439),\n     \"Inclination_radians\": gaussian(1.872, 1.192),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.067),\n     \"Apogee_km\": gaussian(22020.516, 28499.595),\n     \"Perigee_km\": gaussian(25039.052, 25268.105),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1246.906, 650.167),\n     \"Inclination_radians\": gaussian(0.331, 1.246),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.977, 0.616)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1603.497, 2150.328)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.216),\n     \"Launch_Mass_kg\": gaussian(116.690, 7.517),\n     \"Apogee_km\": gaussian(710.252, 1.600),\n     \"Perigee_km\": gaussian(670.511, 2.458),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.981, 2.375),\n     \"Inclination_radians\": gaussian(1.749, 0.949),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.038, 0.789),\n     \"Launch_Mass_kg\": gaussian(49.079, 159.439),\n     \"Apogee_km\": gaussian(758.744, 117.853),\n     \"Perigee_km\": gaussian(719.250, 180.948),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.953, 3.475),\n     \"Inclination_radians\": gaussian(1.730, 0.980),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.070),\n     \"Launch_Mass_kg\": gaussian(2293.864, 2071.597),\n     \"Apogee_km\": gaussian(30950.208, 17256.763),\n     \"Perigee_km\": gaussian(24930.727, 26565.938),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1092.760, 925.363),\n     \"Inclination_radians\": gaussian(0.467, 1.222),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.600, 0.400]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.600, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.395, 2.146),\n     \"Apogee_km\": gaussian(711.813, 5.409),\n     \"Perigee_km\": gaussian(670.991, 8.575),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(98.793, 1.578),\n     \"Inclination_radians\": gaussian(1.705, 0.309),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2355.662, 1975.509),\n     \"Apogee_km\": gaussian(29393.682, 17831.391),\n     \"Perigee_km\": gaussian(30063.419, 20443.928),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(997.862, 1029.032),\n     \"Inclination_radians\": gaussian(0.331, 0.864),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(59.202, 191.334),\n     \"Apogee_km\": gaussian(761.921, 99.549),\n     \"Perigee_km\": gaussian(734.849, 134.807),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(99.461, 2.945),\n     \"Inclination_radians\": gaussian(1.695, 0.439),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.068),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.078, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.200, 0.200, 0.200, 0.200, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.152),\n     \"Launch_Mass_kg\": gaussian(48.008, 170.361),\n     \"Apogee_km\": gaussian(765.255, 163.281),\n     \"Perigee_km\": gaussian(734.511, 152.435),\n     \"Period_minutes\": gaussian(100.347, 0.771),\n     \"Inclination_radians\": gaussian(1.718, 0.210),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.120),\n     \"Launch_Mass_kg\": gaussian(116.765, 6.240),\n     \"Apogee_km\": gaussian(710.858, 3.777),\n     \"Perigee_km\": gaussian(670.548, 4.427),\n     \"Period_minutes\": gaussian(99.147, 2.181),\n     \"Inclination_radians\": gaussian(1.711, 0.316),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.077),\n     \"Launch_Mass_kg\": gaussian(2419.992, 2042.408),\n     \"Apogee_km\": gaussian(31529.410, 19007.541),\n     \"Perigee_km\": gaussian(28992.671, 22447.235),\n     \"Period_minutes\": gaussian(1184.884, 758.762),\n     \"Inclination_radians\": gaussian(0.510, 1.170),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.800, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.080, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.069, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.400, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.400, 0.400, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(98.871, 2.996)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(99.985, 2.847)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Period_minutes\": gaussian(1214.314, 708.726)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.800, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.006, 0.086),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.078, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.333, 0.444, 0.111, 0.111])\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.987, 1.016),\n     \"Apogee_km\": gaussian(710.072, 1.980),\n     \"Perigee_km\": gaussian(670.044, 0.879),\n     \"Inclination_radians\": gaussian(1.832, 2.441)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1888.825, 2126.244),\n     \"Apogee_km\": gaussian(24918.933, 22619.973),\n     \"Perigee_km\": gaussian(22452.603, 24220.533),\n     \"Inclination_radians\": gaussian(0.648, 1.325)\n    };\n  }\n}\n\nfunction view_6() {\n  let cluster_id = categorical([0.200, 0.600, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_7() {\n  let cluster_id = categorical([0.200, 0.400, 0.200, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5(), ...view_6(), ...view_7()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.600, 0.200, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Launch_Mass_kg\": gaussian(2402.447, 2204.746),\n     \"Apogee_km\": gaussian(31441.428, 17446.535),\n     \"Perigee_km\": gaussian(27160.374, 20576.604),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(42.554, 140.945),\n     \"Apogee_km\": gaussian(760.557, 83.647),\n     \"Perigee_km\": gaussian(730.171, 188.940),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(116.761, 4.382),\n     \"Apogee_km\": gaussian(710.202, 1.540),\n     \"Perigee_km\": gaussian(670.142, 1.871),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.600, 0.400]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(927.366, 1083.026),\n     \"Inclination_radians\": gaussian(0.398, 1.127),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.886, 2.361),\n     \"Inclination_radians\": gaussian(1.820, 0.496),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.200, 0.600, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.113)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.063)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(-0.001, 0.120)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.242),\n     \"Launch_Mass_kg\": gaussian(114.948, 1.546),\n     \"Apogee_km\": gaussian(710.714, 3.303),\n     \"Perigee_km\": gaussian(671.216, 4.023),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.667, 1.537),\n     \"Inclination_radians\": gaussian(1.859, 0.889),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.165),\n     \"Launch_Mass_kg\": gaussian(51.345, 382.673),\n     \"Apogee_km\": gaussian(757.016, 110.642),\n     \"Perigee_km\": gaussian(730.996, 111.131),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.900, 2.398),\n     \"Inclination_radians\": gaussian(1.861, 0.430),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.072),\n     \"Launch_Mass_kg\": gaussian(2212.533, 2292.264),\n     \"Apogee_km\": gaussian(30787.310, 20115.739),\n     \"Perigee_km\": gaussian(30632.562, 18261.951),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1237.766, 682.766),\n     \"Inclination_radians\": gaussian(0.372, 1.033),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.127),\n     \"Launch_Mass_kg\": gaussian(115.422, 2.335),\n     \"Apogee_km\": gaussian(710.458, 1.926),\n     \"Perigee_km\": gaussian(670.059, 2.020),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.129, 2.571),\n     \"Inclination_radians\": gaussian(1.809, 1.505),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.151),\n     \"Launch_Mass_kg\": gaussian(43.647, 127.261),\n     \"Apogee_km\": gaussian(762.585, 99.958),\n     \"Perigee_km\": gaussian(728.605, 219.324),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.231, 1.538),\n     \"Inclination_radians\": gaussian(1.772, 1.767),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.069),\n     \"Launch_Mass_kg\": gaussian(2388.568, 2160.464),\n     \"Apogee_km\": gaussian(30822.310, 17468.096),\n     \"Perigee_km\": gaussian(29122.385, 20416.489),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1193.918, 698.019),\n     \"Inclination_radians\": gaussian(0.648, 1.437),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.228),\n     \"Perigee_km\": gaussian(731.347, 115.793),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.926, 2.277),\n     \"Inclination_radians\": gaussian(1.894, 1.000),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.011, 0.236),\n     \"Perigee_km\": gaussian(670.439, 2.057),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.752, 1.414),\n     \"Inclination_radians\": gaussian(1.909, 1.150),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(-0.001, 0.103),\n     \"Perigee_km\": gaussian(30002.925, 17094.158),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1205.206, 732.409),\n     \"Inclination_radians\": gaussian(0.348, 1.210),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.800, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1723.213, 2139.124),\n     \"Apogee_km\": gaussian(24934.378, 21536.337)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.004, 0.207),\n     \"Apogee_km\": gaussian(710.329, 1.171)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.600, 0.400]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.074),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1271.704, 744.065),\n     \"Inclination_radians\": gaussian(0.320, 0.820),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.089),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.498, 1.423),\n     \"Inclination_radians\": gaussian(1.714, 0.389),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.270, 2.987),\n     \"Apogee_km\": gaussian(710.383, 2.489),\n     \"Perigee_km\": gaussian(670.703, 2.656),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1886.712, 2103.795),\n     \"Apogee_km\": gaussian(22913.945, 22665.924),\n     \"Perigee_km\": gaussian(22268.526, 22744.488),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.153),\n     \"Apogee_km\": gaussian(710.085, 2.051),\n     \"Perigee_km\": gaussian(670.001, 1.543),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.417, 3.039),\n     \"Inclination_radians\": gaussian(1.798, 0.987),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.004, 0.227),\n     \"Apogee_km\": gaussian(756.232, 140.236),\n     \"Perigee_km\": gaussian(734.049, 153.061),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.419, 1.317),\n     \"Inclination_radians\": gaussian(1.750, 1.043),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.079),\n     \"Apogee_km\": gaussian(30354.963, 17821.846),\n     \"Perigee_km\": gaussian(28718.771, 18541.080),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1152.454, 814.770),\n     \"Inclination_radians\": gaussian(0.234, 0.939),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.800, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(1509.523, 2281.184),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.182, 0.045, 0.045, 0.045, 0.045, 0.091, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.250, 0.500, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.706, 2.163),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.400, 0.200, 0.200, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.600, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.867, 4.914),\n     \"Perigee_km\": gaussian(670.194, 1.730),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.671, 4.050),\n     \"Inclination_radians\": gaussian(1.709, 0.162)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Apogee_km\": gaussian(30629.684, 17812.321),\n     \"Perigee_km\": gaussian(25080.637, 28779.368),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1105.581, 856.279),\n     \"Inclination_radians\": gaussian(0.496, 1.098)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(760.049, 123.745),\n     \"Perigee_km\": gaussian(706.912, 177.375),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.463, 2.660),\n     \"Inclination_radians\": gaussian(1.715, 0.158)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.104, 1.108)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1780.993, 2025.135)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.800, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.055),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.069, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.001, 0.121),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.182, 0.045, 0.045, 0.045, 0.045, 0.091, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.250, 0.500, 0.125, 0.125])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.140),\n     \"Launch_Mass_kg\": gaussian(115.074, 3.081),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.000, 0.063),\n     \"Launch_Mass_kg\": gaussian(1617.821, 2156.820),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.080, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.250, 0.500, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.069, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.200, 0.600, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(755.837, 102.703),\n     \"Perigee_km\": gaussian(697.696, 184.737),\n     \"Period_minutes\": gaussian(100.230, 1.870),\n     \"Inclination_radians\": gaussian(1.714, 0.289),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(27360.512, 22565.498),\n     \"Perigee_km\": gaussian(21363.131, 28573.104),\n     \"Period_minutes\": gaussian(1185.450, 834.639),\n     \"Inclination_radians\": gaussian(0.533, 1.201),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.258, 1.838),\n     \"Perigee_km\": gaussian(670.313, 2.403),\n     \"Period_minutes\": gaussian(99.254, 3.105),\n     \"Inclination_radians\": gaussian(1.707, 0.167),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.600, 0.200, 0.200]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Launch_Mass_kg\": gaussian(2027.693, 2362.188),\n     \"Apogee_km\": gaussian(29626.799, 18914.507),\n     \"Perigee_km\": gaussian(25968.272, 26162.727),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1222.078, 684.392),\n     \"Inclination_radians\": gaussian(0.297, 1.164),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(116.341, 4.502),\n     \"Apogee_km\": gaussian(710.450, 2.696),\n     \"Perigee_km\": gaussian(670.410, 2.005),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.909, 2.674),\n     \"Inclination_radians\": gaussian(1.798, 0.431),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(66.968, 165.577),\n     \"Apogee_km\": gaussian(765.812, 121.328),\n     \"Perigee_km\": gaussian(711.597, 140.175),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.174, 2.624),\n     \"Inclination_radians\": gaussian(1.849, 0.531),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.051),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.087, 0.174, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.200, 0.600]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.143),\n     \"Launch_Mass_kg\": gaussian(116.401, 29.482),\n     \"Apogee_km\": gaussian(710.222, 2.312),\n     \"Perigee_km\": gaussian(670.131, 2.002),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.790, 2.216),\n     \"Inclination_radians\": gaussian(1.712, 0.960),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.136),\n     \"Launch_Mass_kg\": gaussian(37.474, 120.571),\n     \"Apogee_km\": gaussian(749.571, 137.021),\n     \"Perigee_km\": gaussian(724.379, 143.317),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.501, 3.513),\n     \"Inclination_radians\": gaussian(1.735, 0.804),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.079),\n     \"Launch_Mass_kg\": gaussian(2327.523, 2150.479),\n     \"Apogee_km\": gaussian(28724.162, 22030.685),\n     \"Perigee_km\": gaussian(28919.862, 23824.801),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(911.448, 1075.823),\n     \"Inclination_radians\": gaussian(0.512, 1.185),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.190, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.571, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(58.174, 179.879),\n     \"Apogee_km\": gaussian(752.544, 106.801),\n     \"Perigee_km\": gaussian(734.594, 152.550),\n     \"Period_minutes\": gaussian(99.889, 1.522),\n     \"Inclination_radians\": gaussian(1.817, 0.340),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.043, 0.699),\n     \"Apogee_km\": gaussian(710.146, 2.773),\n     \"Perigee_km\": gaussian(670.147, 1.206),\n     \"Period_minutes\": gaussian(98.874, 1.445),\n     \"Inclination_radians\": gaussian(1.793, 0.332),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2495.264, 1911.477),\n     \"Apogee_km\": gaussian(29652.153, 17160.752),\n     \"Perigee_km\": gaussian(31492.684, 15507.853),\n     \"Period_minutes\": gaussian(1246.665, 551.222),\n     \"Inclination_radians\": gaussian(0.307, 0.899),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.167, 0.833]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.010, 0.156),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.055),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.067, 0.033])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.138),\n     \"Launch_Mass_kg\": gaussian(115.750, 2.439),\n     \"Apogee_km\": gaussian(710.006, 0.601),\n     \"Perigee_km\": gaussian(670.433, 4.261),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.086, 2.223),\n     \"Inclination_radians\": gaussian(1.699, 0.155),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.139),\n     \"Launch_Mass_kg\": gaussian(73.682, 164.112),\n     \"Apogee_km\": gaussian(764.187, 111.801),\n     \"Perigee_km\": gaussian(731.260, 124.773),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.225, 1.171),\n     \"Inclination_radians\": gaussian(1.716, 0.152),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.062),\n     \"Launch_Mass_kg\": gaussian(2125.703, 2304.728),\n     \"Apogee_km\": gaussian(32200.123, 14753.034),\n     \"Perigee_km\": gaussian(31157.088, 15779.453),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1287.690, 664.084),\n     \"Inclination_radians\": gaussian(0.488, 0.960),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.667, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.473, 1.715),\n     \"Apogee_km\": gaussian(711.944, 6.561),\n     \"Perigee_km\": gaussian(671.966, 4.877),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.813, 2.753),\n     \"Inclination_radians\": gaussian(1.696, 0.244),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2497.820, 1832.412),\n     \"Apogee_km\": gaussian(28942.808, 19275.442),\n     \"Perigee_km\": gaussian(29022.554, 19989.495),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1102.562, 815.516),\n     \"Inclination_radians\": gaussian(0.324, 0.834),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(44.466, 138.677),\n     \"Apogee_km\": gaussian(756.937, 108.084),\n     \"Perigee_km\": gaussian(720.488, 163.570),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.758, 3.315),\n     \"Inclination_radians\": gaussian(1.714, 0.319),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.000, 0.057),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(45.771, 149.694),\n     \"Apogee_km\": gaussian(753.452, 271.832),\n     \"Perigee_km\": gaussian(715.157, 210.265),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.041, 2.200),\n     \"Inclination_radians\": gaussian(1.811, 1.019),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.105, 6.014),\n     \"Apogee_km\": gaussian(709.994, 0.218),\n     \"Perigee_km\": gaussian(670.100, 0.594),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.149, 2.122),\n     \"Inclination_radians\": gaussian(1.792, 1.152),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2478.116, 2070.328),\n     \"Apogee_km\": gaussian(29270.079, 18690.518),\n     \"Perigee_km\": gaussian(29457.558, 19616.194),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1160.951, 704.914),\n     \"Inclination_radians\": gaussian(0.288, 0.945),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.833, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.054)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.150)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.333, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(99.156, 1.634),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(1142.954, 813.090),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.833, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.002, 0.054),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.167, 0.833]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.225, 2.944),\n     \"Apogee_km\": gaussian(709.960, 1.336),\n     \"Perigee_km\": gaussian(670.236, 2.443),\n     \"Inclination_radians\": gaussian(1.683, 0.874)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1886.936, 2205.890),\n     \"Apogee_km\": gaussian(22972.443, 23333.092),\n     \"Perigee_km\": gaussian(20068.675, 24253.814),\n     \"Inclination_radians\": gaussian(0.650, 1.074)\n    };\n  }\n}\n\nfunction view_5() {\n  let cluster_id = categorical([0.500, 0.500]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4(), ...view_5()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.167, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2517.910, 1889.985),\n     \"Apogee_km\": gaussian(25600.057, 26220.308),\n     \"Perigee_km\": gaussian(31645.257, 15737.012),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1182.840, 739.875),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(57.598, 144.368),\n     \"Apogee_km\": gaussian(732.565, 140.167),\n     \"Perigee_km\": gaussian(738.904, 172.544),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.730, 2.230),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.250, 5.550),\n     \"Apogee_km\": gaussian(710.042, 0.610),\n     \"Perigee_km\": gaussian(670.144, 1.860),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.891, 1.332),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.001, 0.058),\n     \"Inclination_radians\": gaussian(0.331, 0.983),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.084),\n     \"Inclination_radians\": gaussian(1.812, 0.392),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.154),\n     \"Launch_Mass_kg\": gaussian(116.837, 7.468),\n     \"Apogee_km\": gaussian(711.147, 4.526),\n     \"Perigee_km\": gaussian(670.179, 1.554),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.119, 2.748),\n     \"Inclination_radians\": gaussian(1.693, 0.435),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.171),\n     \"Launch_Mass_kg\": gaussian(41.693, 157.344),\n     \"Apogee_km\": gaussian(767.876, 191.393),\n     \"Perigee_km\": gaussian(722.958, 209.561),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.393, 1.936),\n     \"Inclination_radians\": gaussian(1.720, 0.451),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.070),\n     \"Launch_Mass_kg\": gaussian(2718.060, 1828.612),\n     \"Apogee_km\": gaussian(32604.594, 14729.276),\n     \"Perigee_km\": gaussian(30593.332, 17881.123),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1325.290, 576.625),\n     \"Inclination_radians\": gaussian(0.182, 0.671),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.155),\n     \"Launch_Mass_kg\": gaussian(115.048, 1.291),\n     \"Apogee_km\": gaussian(711.241, 3.902),\n     \"Perigee_km\": gaussian(671.213, 3.528),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.007, 2.343),\n     \"Inclination_radians\": gaussian(1.739, 0.859),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.112),\n     \"Launch_Mass_kg\": gaussian(52.525, 159.594),\n     \"Apogee_km\": gaussian(760.078, 111.184),\n     \"Perigee_km\": gaussian(736.657, 132.282),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.933, 2.081),\n     \"Inclination_radians\": gaussian(1.828, 0.656),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.062),\n     \"Launch_Mass_kg\": gaussian(2511.980, 2032.555),\n     \"Apogee_km\": gaussian(30128.282, 17611.328),\n     \"Perigee_km\": gaussian(31729.199, 14768.337),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1200.242, 696.058),\n     \"Inclination_radians\": gaussian(0.230, 0.854),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.013, 0.246),\n     \"Apogee_km\": gaussian(760.404, 88.323),\n     \"Perigee_km\": gaussian(700.722, 136.438),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Inclination_radians\": gaussian(1.795, 0.818),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.201),\n     \"Apogee_km\": gaussian(710.366, 2.019),\n     \"Perigee_km\": gaussian(670.355, 1.814),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Inclination_radians\": gaussian(1.768, 0.650),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.090),\n     \"Apogee_km\": gaussian(31924.658, 14267.077),\n     \"Perigee_km\": gaussian(24845.651, 25735.588),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Inclination_radians\": gaussian(0.389, 1.163),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.667, 0.167, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2489.272, 1972.581),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1214.988, 664.948),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.994, 0.590),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.601, 0.441),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.163, 149.834),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.755, 3.555),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.167, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2321.958, 2140.963),\n     \"Apogee_km\": gaussian(27573.690, 19907.393),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(1200.346, 634.250),\n     \"Inclination_radians\": gaussian(0.218, 0.992),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Launch_Mass_kg\": gaussian(115.206, 1.020),\n     \"Apogee_km\": gaussian(711.269, 3.738),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(98.803, 0.942),\n     \"Inclination_radians\": gaussian(1.713, 1.054),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(71.213, 183.340),\n     \"Apogee_km\": gaussian(746.864, 103.099),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(99.846, 1.547),\n     \"Inclination_radians\": gaussian(1.833, 1.345),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.167, 0.667, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.005, 0.168),\n     \"Perigee_km\": gaussian(670.154, 1.108),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.066),\n     \"Perigee_km\": gaussian(28059.475, 22505.332),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.147),\n     \"Perigee_km\": gaussian(721.709, 129.432),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.620, 3.518),\n     \"Perigee_km\": gaussian(671.359, 6.409),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.904, 1.291),\n     \"Inclination_radians\": gaussian(1.696, 0.759),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(759.871, 112.649),\n     \"Perigee_km\": gaussian(738.287, 154.471),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.952, 2.743),\n     \"Inclination_radians\": gaussian(1.686, 0.961),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(31237.298, 15141.615),\n     \"Perigee_km\": gaussian(31537.817, 14330.660),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1157.256, 710.623),\n     \"Inclination_radians\": gaussian(0.521, 1.142),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.833, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.000, 0.060),\n     \"Launch_Mass_kg\": gaussian(1904.459, 2124.922),\n     \"Class_of_Orbit\": categorical([0.222, 0.556, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.067, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.008, 0.154),\n     \"Launch_Mass_kg\": gaussian(115.015, 1.630),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.667, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(710.223, 1.935),\n     \"Perigee_km\": gaussian(671.540, 7.523),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.432, 2.758),\n     \"Inclination_radians\": gaussian(1.788, 0.445),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(30657.076, 16272.768),\n     \"Perigee_km\": gaussian(31314.239, 14444.026),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1105.069, 806.896),\n     \"Inclination_radians\": gaussian(0.337, 0.964),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Apogee_km\": gaussian(752.997, 131.408),\n     \"Perigee_km\": gaussian(738.971, 126.751),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.167, 1.765),\n     \"Inclination_radians\": gaussian(1.814, 0.392),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.167, 0.833]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.376, 1.017),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2049.936, 2058.782),\n     \"Class_of_Orbit\": categorical([0.222, 0.556, 0.111, 0.111])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.050),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.667, 0.333]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.833]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.172),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.066),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.222, 0.556, 0.111, 0.111])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.167, 0.667, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(54.770, 168.235),\n     \"Apogee_km\": gaussian(755.306, 130.276),\n     \"Perigee_km\": gaussian(728.857, 169.940),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.489, 2.487),\n     \"Inclination_radians\": gaussian(1.722, 0.831),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2438.484, 1930.208),\n     \"Apogee_km\": gaussian(29741.038, 19804.126),\n     \"Perigee_km\": gaussian(30260.478, 16757.618),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1104.742, 810.065),\n     \"Inclination_radians\": gaussian(0.221, 0.761),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.073, 1.481),\n     \"Apogee_km\": gaussian(710.930, 2.729),\n     \"Perigee_km\": gaussian(671.168, 3.971),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.700, 1.185),\n     \"Inclination_radians\": gaussian(1.652, 0.989),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.167, 0.167]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.075),\n     \"Launch_Mass_kg\": gaussian(2623.229, 1749.678),\n     \"Apogee_km\": gaussian(31335.450, 16089.045),\n     \"Perigee_km\": gaussian(31844.920, 15124.545),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1106.212, 790.654),\n     \"Inclination_radians\": gaussian(0.196, 0.690),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.159),\n     \"Launch_Mass_kg\": gaussian(114.988, 0.550),\n     \"Apogee_km\": gaussian(711.103, 4.094),\n     \"Perigee_km\": gaussian(670.346, 1.839),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.438, 2.958),\n     \"Inclination_radians\": gaussian(1.713, 0.277),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.012, 0.202),\n     \"Launch_Mass_kg\": gaussian(41.862, 139.471),\n     \"Apogee_km\": gaussian(757.782, 95.145),\n     \"Perigee_km\": gaussian(731.365, 122.314),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.339, 1.352),\n     \"Inclination_radians\": gaussian(1.699, 0.351),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.167, 0.167, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.130),\n     \"Launch_Mass_kg\": gaussian(116.000, 5.438),\n     \"Apogee_km\": gaussian(710.314, 1.274),\n     \"Perigee_km\": gaussian(670.668, 3.409),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.349, 2.597),\n     \"Inclination_radians\": gaussian(1.729, 0.322),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.112),\n     \"Launch_Mass_kg\": gaussian(69.619, 166.435),\n     \"Apogee_km\": gaussian(737.806, 128.848),\n     \"Perigee_km\": gaussian(731.464, 187.547),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.363, 1.420),\n     \"Inclination_radians\": gaussian(1.712, 0.297),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.003, 0.053),\n     \"Launch_Mass_kg\": gaussian(2188.899, 2196.426),\n     \"Apogee_km\": gaussian(24922.922, 25011.206),\n     \"Perigee_km\": gaussian(30082.863, 18415.367),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(1285.892, 617.266),\n     \"Inclination_radians\": gaussian(0.424, 0.952),\n     \"Users\": categorical([0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.125, 0.625, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(47.401, 173.788),\n     \"Apogee_km\": gaussian(744.746, 114.973),\n     \"Perigee_km\": gaussian(727.499, 151.378),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.833, 2.234),\n     \"Inclination_radians\": gaussian(1.735, 0.452),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.241, 1.880),\n     \"Apogee_km\": gaussian(712.919, 6.865),\n     \"Perigee_km\": gaussian(670.092, 2.642),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.062, 4.776),\n     \"Inclination_radians\": gaussian(1.720, 0.445),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2875.733, 1797.401),\n     \"Apogee_km\": gaussian(28847.210, 20369.835),\n     \"Perigee_km\": gaussian(32067.570, 16165.361),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1232.873, 640.019),\n     \"Inclination_radians\": gaussian(0.228, 0.662),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.041),\n     \"Class_of_Orbit\": categorical([0.273, 0.545, 0.091, 0.091])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.190),\n     \"Launch_Mass_kg\": gaussian(115.038, 1.167),\n     \"Apogee_km\": gaussian(710.260, 2.268),\n     \"Perigee_km\": gaussian(670.748, 2.357),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.747, 0.923),\n     \"Inclination_radians\": gaussian(1.708, 0.258),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.006, 0.165),\n     \"Launch_Mass_kg\": gaussian(50.600, 243.181),\n     \"Apogee_km\": gaussian(758.055, 89.293),\n     \"Perigee_km\": gaussian(713.860, 133.675),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.908, 2.118),\n     \"Inclination_radians\": gaussian(1.717, 0.323),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.054),\n     \"Launch_Mass_kg\": gaussian(2793.507, 1860.652),\n     \"Apogee_km\": gaussian(31303.196, 14096.699),\n     \"Perigee_km\": gaussian(29796.035, 17861.891),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1238.784, 586.885),\n     \"Inclination_radians\": gaussian(0.241, 0.672),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.714, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.124),\n     \"Launch_Mass_kg\": gaussian(115.544, 2.244),\n     \"Apogee_km\": gaussian(711.577, 9.455),\n     \"Perigee_km\": gaussian(669.955, 1.732),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.296, 2.399),\n     \"Inclination_radians\": gaussian(1.712, 0.495),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.052),\n     \"Launch_Mass_kg\": gaussian(2940.458, 1889.489),\n     \"Apogee_km\": gaussian(30112.438, 15895.430),\n     \"Perigee_km\": gaussian(31906.200, 13754.050),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1272.308, 551.090),\n     \"Inclination_radians\": gaussian(0.173, 0.688),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.000, 0.145),\n     \"Launch_Mass_kg\": gaussian(41.974, 182.467),\n     \"Apogee_km\": gaussian(748.778, 84.878),\n     \"Perigee_km\": gaussian(729.449, 138.717),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.396, 1.260),\n     \"Inclination_radians\": gaussian(1.719, 0.429),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(42.064, 119.178),\n     \"Apogee_km\": gaussian(764.700, 76.981),\n     \"Perigee_km\": gaussian(730.712, 133.365),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.385, 1.619),\n     \"Inclination_radians\": gaussian(1.777, 0.428),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.032, 1.279),\n     \"Apogee_km\": gaussian(711.051, 4.146),\n     \"Perigee_km\": gaussian(670.368, 1.967),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.376, 2.849),\n     \"Inclination_radians\": gaussian(1.771, 0.400),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(3021.163, 1673.065),\n     \"Apogee_km\": gaussian(32678.942, 12906.285),\n     \"Perigee_km\": gaussian(32170.530, 13787.056),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1296.003, 602.205),\n     \"Inclination_radians\": gaussian(0.236, 0.657),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.041),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.063, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.125, 0.031, 0.031, 0.063, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.286, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.099),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.053),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.143, 0.714, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.121, 0.979),\n     \"Apogee_km\": gaussian(709.983, 1.410),\n     \"Perigee_km\": gaussian(670.639, 1.665),\n     \"Period_minutes\": gaussian(98.617, 1.377),\n     \"Inclination_radians\": gaussian(1.705, 0.300),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2910.586, 1941.657),\n     \"Apogee_km\": gaussian(28898.923, 17566.276),\n     \"Perigee_km\": gaussian(29681.602, 17253.598),\n     \"Period_minutes\": gaussian(1133.314, 751.108),\n     \"Inclination_radians\": gaussian(0.227, 0.645),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(59.589, 149.685),\n     \"Apogee_km\": gaussian(743.423, 86.227),\n     \"Perigee_km\": gaussian(726.236, 266.219),\n     \"Period_minutes\": gaussian(99.368, 2.624),\n     \"Inclination_radians\": gaussian(1.730, 0.300),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.857, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.714, 0.143, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(2959.980, 1961.468),\n     \"Apogee_km\": gaussian(31774.901, 13527.296),\n     \"Perigee_km\": gaussian(30655.850, 15428.340),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1251.684, 576.324),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(59.218, 167.479),\n     \"Apogee_km\": gaussian(762.290, 133.976),\n     \"Perigee_km\": gaussian(722.038, 140.795),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.649, 2.421),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.361, 4.010),\n     \"Apogee_km\": gaussian(711.449, 4.571),\n     \"Perigee_km\": gaussian(670.807, 3.908),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.674, 0.487),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.714, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.072),\n     \"Inclination_radians\": gaussian(0.166, 0.680),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.129),\n     \"Inclination_radians\": gaussian(1.757, 0.220),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.003, 0.115),\n     \"Launch_Mass_kg\": gaussian(115.465, 2.524),\n     \"Apogee_km\": gaussian(710.155, 1.218),\n     \"Perigee_km\": gaussian(670.600, 2.655),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.299, 10.767),\n     \"Inclination_radians\": gaussian(1.754, 0.322),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.150),\n     \"Launch_Mass_kg\": gaussian(44.505, 189.215),\n     \"Apogee_km\": gaussian(757.147, 131.127),\n     \"Perigee_km\": gaussian(735.199, 156.618),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.025, 2.818),\n     \"Inclination_radians\": gaussian(1.773, 0.336),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.055),\n     \"Launch_Mass_kg\": gaussian(3001.206, 1827.491),\n     \"Apogee_km\": gaussian(31637.074, 14881.556),\n     \"Perigee_km\": gaussian(31203.888, 14032.218),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1257.896, 615.745),\n     \"Inclination_radians\": gaussian(0.240, 0.634),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.117),\n     \"Launch_Mass_kg\": gaussian(114.999, 0.648),\n     \"Apogee_km\": gaussian(711.693, 10.650),\n     \"Perigee_km\": gaussian(670.387, 1.947),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.370, 2.442),\n     \"Inclination_radians\": gaussian(1.740, 0.388),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.141),\n     \"Launch_Mass_kg\": gaussian(51.868, 126.621),\n     \"Apogee_km\": gaussian(760.292, 103.534),\n     \"Perigee_km\": gaussian(731.173, 425.791),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.374, 1.015),\n     \"Inclination_radians\": gaussian(1.771, 0.441),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.051),\n     \"Launch_Mass_kg\": gaussian(3030.588, 1694.613),\n     \"Apogee_km\": gaussian(31807.897, 12676.456),\n     \"Perigee_km\": gaussian(27460.968, 19382.749),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1283.702, 536.369),\n     \"Inclination_radians\": gaussian(0.234, 0.640),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.138),\n     \"Launch_Mass_kg\": gaussian(33.058, 281.469),\n     \"Apogee_km\": gaussian(754.442, 118.801),\n     \"Perigee_km\": gaussian(727.807, 103.084),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.711, 0.389),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.171),\n     \"Launch_Mass_kg\": gaussian(115.326, 1.967),\n     \"Apogee_km\": gaussian(710.110, 2.801),\n     \"Perigee_km\": gaussian(670.941, 3.145),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Inclination_radians\": gaussian(1.700, 0.442),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.052),\n     \"Launch_Mass_kg\": gaussian(2768.571, 1941.517),\n     \"Apogee_km\": gaussian(31671.116, 14503.257),\n     \"Perigee_km\": gaussian(30773.735, 14761.874),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Inclination_radians\": gaussian(0.211, 0.604),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.714, 0.143, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Period_minutes\": gaussian(1275.994, 521.608)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Period_minutes\": gaussian(99.054, 2.425)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Period_minutes\": gaussian(100.399, 1.526)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.714, 0.143, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.061),\n     \"Launch_Mass_kg\": gaussian(3021.081, 1738.379),\n     \"Apogee_km\": gaussian(31916.865, 12824.742),\n     \"Perigee_km\": gaussian(32542.248, 13567.838),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1271.592, 539.663),\n     \"Inclination_radians\": gaussian(0.238, 0.835),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.183),\n     \"Launch_Mass_kg\": gaussian(115.470, 2.066),\n     \"Apogee_km\": gaussian(709.980, 1.248),\n     \"Perigee_km\": gaussian(670.278, 1.486),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.618, 1.754),\n     \"Inclination_radians\": gaussian(1.749, 1.165),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.007, 0.247),\n     \"Launch_Mass_kg\": gaussian(38.625, 168.772),\n     \"Apogee_km\": gaussian(765.057, 150.662),\n     \"Perigee_km\": gaussian(735.047, 117.922),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.930, 3.509),\n     \"Inclination_radians\": gaussian(1.805, 1.138),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Apogee_km\": gaussian(711.270, 6.282),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.967, 1.081)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Apogee_km\": gaussian(759.310, 128.062),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.079, 1.092)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Apogee_km\": gaussian(33038.356, 12970.348),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1319.251, 512.707)\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.857, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.044),\n     \"Launch_Mass_kg\": gaussian(2490.379, 1976.668),\n     \"Perigee_km\": gaussian(26497.960, 17625.988),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Inclination_radians\": gaussian(0.421, 0.888),\n     \"Users\": categorical([0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.200, 0.600, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.124),\n     \"Launch_Mass_kg\": gaussian(115.010, 1.306),\n     \"Perigee_km\": gaussian(670.071, 0.924),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Inclination_radians\": gaussian(1.749, 0.609),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.714, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.157),\n     \"Launch_Mass_kg\": gaussian(115.322, 2.636),\n     \"Apogee_km\": gaussian(710.256, 1.367),\n     \"Perigee_km\": gaussian(670.080, 0.489),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(98.634, 1.720),\n     \"Inclination_radians\": gaussian(1.705, 0.166),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.054),\n     \"Launch_Mass_kg\": gaussian(3036.448, 1709.208),\n     \"Apogee_km\": gaussian(32185.645, 13191.072),\n     \"Perigee_km\": gaussian(30857.631, 15950.857),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(1215.785, 589.456),\n     \"Inclination_radians\": gaussian(0.290, 0.721),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.153),\n     \"Launch_Mass_kg\": gaussian(47.495, 140.998),\n     \"Apogee_km\": gaussian(763.921, 88.539),\n     \"Perigee_km\": gaussian(723.088, 160.688),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(99.689, 3.272),\n     \"Inclination_radians\": gaussian(1.709, 0.216),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.063, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.125, 0.031, 0.031, 0.063, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.143, 0.714, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.010, 0.162),\n     \"Launch_Mass_kg\": gaussian(33.591, 168.112),\n     \"Apogee_km\": gaussian(756.039, 74.875),\n     \"Perigee_km\": gaussian(725.033, 212.489),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(100.578, 0.467),\n     \"Inclination_radians\": gaussian(1.707, 0.130),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.062),\n     \"Launch_Mass_kg\": gaussian(2962.269, 1796.319),\n     \"Apogee_km\": gaussian(31478.773, 14322.163),\n     \"Perigee_km\": gaussian(32040.211, 13700.048),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Period_minutes\": gaussian(1155.813, 743.603),\n     \"Inclination_radians\": gaussian(0.181, 0.602),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.002, 0.169),\n     \"Launch_Mass_kg\": gaussian(115.038, 1.558),\n     \"Apogee_km\": gaussian(710.303, 1.548),\n     \"Perigee_km\": gaussian(670.294, 1.488),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Period_minutes\": gaussian(99.718, 3.119),\n     \"Inclination_radians\": gaussian(1.707, 0.154),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.714, 0.143, 0.143]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.023, 0.092),\n     \"Launch_Mass_kg\": gaussian(2783.830, 1960.970),\n     \"Apogee_km\": gaussian(31465.069, 15575.657),\n     \"Perigee_km\": gaussian(32953.281, 13782.632),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1128.889, 729.298),\n     \"Inclination_radians\": gaussian(0.451, 0.917),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.081, 0.263),\n     \"Launch_Mass_kg\": gaussian(116.332, 3.881),\n     \"Apogee_km\": gaussian(710.134, 1.358),\n     \"Perigee_km\": gaussian(670.131, 1.775),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.423, 5.629),\n     \"Inclination_radians\": gaussian(1.794, 0.370),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.076, 0.274),\n     \"Launch_Mass_kg\": gaussian(56.750, 173.175),\n     \"Apogee_km\": gaussian(749.925, 125.617),\n     \"Perigee_km\": gaussian(732.143, 153.239),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(101.385, 2.157),\n     \"Inclination_radians\": gaussian(1.809, 0.459),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.143, 0.143, 0.714]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.051, 1.163),\n     \"Launch_Mass_kg\": gaussian(116.217, 4.488),\n     \"Apogee_km\": gaussian(710.368, 2.518),\n     \"Perigee_km\": gaussian(670.252, 2.035),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.833, 3.705),\n     \"Inclination_radians\": gaussian(1.709, 0.180),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.017, 0.831),\n     \"Launch_Mass_kg\": gaussian(47.798, 150.736),\n     \"Apogee_km\": gaussian(762.887, 168.514),\n     \"Perigee_km\": gaussian(732.336, 151.421),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.327, 1.376),\n     \"Inclination_radians\": gaussian(1.715, 0.223),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.003, 0.235),\n     \"Launch_Mass_kg\": gaussian(2835.672, 1861.626),\n     \"Apogee_km\": gaussian(32749.244, 12973.351),\n     \"Perigee_km\": gaussian(32280.291, 12724.281),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020]),\n     \"Period_minutes\": gaussian(1156.125, 711.910),\n     \"Inclination_radians\": gaussian(0.313, 0.834),\n     \"Users\": categorical([0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.667, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.497, 155.019),\n     \"Apogee_km\": gaussian(763.213, 107.464),\n     \"Perigee_km\": gaussian(731.976, 245.143),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.234, 0.616),\n     \"Inclination_radians\": gaussian(1.896, 0.883),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.235, 5.836),\n     \"Apogee_km\": gaussian(710.234, 1.845),\n     \"Perigee_km\": gaussian(670.114, 1.383),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.163, 1.631),\n     \"Inclination_radians\": gaussian(1.869, 0.728),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3197.000, 1739.133),\n     \"Apogee_km\": gaussian(32448.012, 12711.868),\n     \"Perigee_km\": gaussian(31225.134, 14442.184),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1294.740, 524.172),\n     \"Inclination_radians\": gaussian(0.258, 0.794),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.044)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.124),\n     \"Launch_Mass_kg\": gaussian(117.156, 7.669),\n     \"Apogee_km\": gaussian(710.022, 1.255),\n     \"Perigee_km\": gaussian(670.111, 2.096),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.173, 2.781),\n     \"Inclination_radians\": gaussian(1.751, 0.322),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.127),\n     \"Launch_Mass_kg\": gaussian(74.150, 215.371),\n     \"Apogee_km\": gaussian(755.402, 120.495),\n     \"Perigee_km\": gaussian(715.822, 149.747),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.955, 1.174),\n     \"Inclination_radians\": gaussian(1.756, 0.519),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.003, 0.044),\n     \"Launch_Mass_kg\": gaussian(2902.892, 2149.212),\n     \"Apogee_km\": gaussian(31129.292, 14599.764),\n     \"Perigee_km\": gaussian(30820.379, 15036.934),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1124.226, 669.782),\n     \"Inclination_radians\": gaussian(0.217, 0.601),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.750, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.268),\n     \"Launch_Mass_kg\": gaussian(115.293, 1.250),\n     \"Apogee_km\": gaussian(710.741, 3.247),\n     \"Perigee_km\": gaussian(670.031, 1.256),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.328, 21.286),\n     \"Inclination_radians\": gaussian(1.713, 0.509),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.001, 0.052),\n     \"Launch_Mass_kg\": gaussian(3257.611, 1758.316),\n     \"Apogee_km\": gaussian(32306.648, 14650.515),\n     \"Perigee_km\": gaussian(30297.547, 14912.022),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1311.625, 473.775),\n     \"Inclination_radians\": gaussian(0.274, 0.654),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.243),\n     \"Launch_Mass_kg\": gaussian(49.756, 132.424),\n     \"Apogee_km\": gaussian(755.249, 117.184),\n     \"Perigee_km\": gaussian(714.428, 139.447),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.860, 2.668),\n     \"Inclination_radians\": gaussian(1.703, 0.530),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(43.289, 146.997),\n     \"Apogee_km\": gaussian(757.629, 96.087),\n     \"Perigee_km\": gaussian(733.951, 112.780),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.889, 3.992),\n     \"Inclination_radians\": gaussian(1.800, 0.359),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.265, 2.102),\n     \"Apogee_km\": gaussian(710.993, 8.382),\n     \"Perigee_km\": gaussian(671.243, 5.745),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.543, 1.788),\n     \"Inclination_radians\": gaussian(1.783, 0.345),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3125.838, 1819.690),\n     \"Apogee_km\": gaussian(32545.137, 13767.615),\n     \"Perigee_km\": gaussian(33011.361, 11889.106),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1305.483, 461.450),\n     \"Inclination_radians\": gaussian(0.175, 0.584),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.039)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.125, 0.750, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.154),\n     \"Launch_Mass_kg\": gaussian(115.304, 1.117),\n     \"Apogee_km\": gaussian(710.032, 1.115),\n     \"Perigee_km\": gaussian(671.164, 4.499),\n     \"Period_minutes\": gaussian(99.131, 1.773),\n     \"Inclination_radians\": gaussian(1.693, 0.295),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.002, 0.046),\n     \"Launch_Mass_kg\": gaussian(2942.295, 1978.599),\n     \"Apogee_km\": gaussian(33359.300, 12321.185),\n     \"Perigee_km\": gaussian(32400.033, 12412.249),\n     \"Period_minutes\": gaussian(1334.077, 436.240),\n     \"Inclination_radians\": gaussian(0.183, 0.627),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.158),\n     \"Launch_Mass_kg\": gaussian(67.560, 180.230),\n     \"Apogee_km\": gaussian(762.309, 114.604),\n     \"Perigee_km\": gaussian(727.369, 139.828),\n     \"Period_minutes\": gaussian(100.300, 0.733),\n     \"Inclination_radians\": gaussian(1.713, 0.285),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.875, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.019])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.750, 0.125, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Launch_Mass_kg\": gaussian(2948.102, 1993.456),\n     \"Apogee_km\": gaussian(32539.198, 12730.754),\n     \"Perigee_km\": gaussian(32406.137, 11804.891),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1112.390, 740.542),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(65.973, 192.473),\n     \"Apogee_km\": gaussian(751.836, 202.034),\n     \"Perigee_km\": gaussian(731.124, 182.993),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.244, 2.898),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.176, 1.990),\n     \"Apogee_km\": gaussian(710.897, 4.156),\n     \"Perigee_km\": gaussian(670.276, 3.573),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.617, 1.153),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.750, 0.250]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.000, 0.049),\n     \"Inclination_radians\": gaussian(0.188, 0.560)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.011, 0.100),\n     \"Inclination_radians\": gaussian(1.716, 0.099)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.107),\n     \"Launch_Mass_kg\": gaussian(115.554, 3.000),\n     \"Apogee_km\": gaussian(710.635, 2.100),\n     \"Perigee_km\": gaussian(670.076, 1.701),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.402, 3.550),\n     \"Inclination_radians\": gaussian(1.757, 0.268),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.116),\n     \"Launch_Mass_kg\": gaussian(68.353, 171.626),\n     \"Apogee_km\": gaussian(747.257, 93.854),\n     \"Perigee_km\": gaussian(732.673, 152.800),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.438, 0.873),\n     \"Inclination_radians\": gaussian(1.788, 0.245),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.005, 0.042),\n     \"Launch_Mass_kg\": gaussian(2941.834, 1850.068),\n     \"Apogee_km\": gaussian(30633.206, 16494.506),\n     \"Perigee_km\": gaussian(33306.998, 11949.753),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1267.448, 594.413),\n     \"Inclination_radians\": gaussian(0.166, 0.545),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(-0.006, 0.210),\n     \"Launch_Mass_kg\": gaussian(115.201, 1.917),\n     \"Apogee_km\": gaussian(710.130, 1.023),\n     \"Perigee_km\": gaussian(670.251, 1.394),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.910, 3.532),\n     \"Inclination_radians\": gaussian(1.706, 0.141),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(-0.008, 0.241),\n     \"Launch_Mass_kg\": gaussian(36.047, 239.264),\n     \"Apogee_km\": gaussian(762.841, 80.555),\n     \"Perigee_km\": gaussian(731.516, 121.880),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.942, 2.038),\n     \"Inclination_radians\": gaussian(1.719, 0.129),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.047),\n     \"Launch_Mass_kg\": gaussian(3250.699, 1632.833),\n     \"Apogee_km\": gaussian(32947.817, 11881.338),\n     \"Perigee_km\": gaussian(31998.292, 12833.413),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1325.145, 441.100),\n     \"Inclination_radians\": gaussian(0.193, 0.519),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.127),\n     \"Launch_Mass_kg\": gaussian(65.421, 167.894),\n     \"Apogee_km\": gaussian(760.968, 175.025),\n     \"Perigee_km\": gaussian(732.744, 160.595),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.305, 1.575),\n     \"Inclination_radians\": gaussian(1.715, 0.325),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.001, 0.130),\n     \"Launch_Mass_kg\": gaussian(116.400, 6.003),\n     \"Apogee_km\": gaussian(710.565, 1.584),\n     \"Perigee_km\": gaussian(670.238, 2.686),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.452, 4.062),\n     \"Inclination_radians\": gaussian(1.694, 0.338),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.003, 0.046),\n     \"Launch_Mass_kg\": gaussian(3011.926, 2052.158),\n     \"Apogee_km\": gaussian(32857.421, 12041.611),\n     \"Perigee_km\": gaussian(33063.164, 11604.318),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1244.759, 526.472),\n     \"Inclination_radians\": gaussian(0.236, 0.648),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.750, 0.125, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.004, 0.055),\n     \"Launch_Mass_kg\": gaussian(2703.507, 2168.973),\n     \"Apogee_km\": gaussian(32893.028, 11749.597),\n     \"Perigee_km\": gaussian(33014.188, 11779.225),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1294.097, 467.853),\n     \"Inclination_radians\": gaussian(0.185, 0.560),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.156),\n     \"Launch_Mass_kg\": gaussian(115.563, 1.932),\n     \"Apogee_km\": gaussian(710.230, 3.165),\n     \"Perigee_km\": gaussian(670.239, 2.301),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.757, 2.939),\n     \"Inclination_radians\": gaussian(1.702, 0.286),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.182),\n     \"Launch_Mass_kg\": gaussian(73.186, 272.039),\n     \"Apogee_km\": gaussian(758.352, 102.643),\n     \"Perigee_km\": gaussian(742.540, 195.926),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.003, 1.939),\n     \"Inclination_radians\": gaussian(1.699, 0.264),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.750, 0.125, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.002, 0.048),\n     \"Launch_Mass_kg\": gaussian(3206.113, 1607.465),\n     \"Apogee_km\": gaussian(29822.733, 16653.851),\n     \"Perigee_km\": gaussian(32487.120, 13330.676),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1325.010, 469.348),\n     \"Inclination_radians\": gaussian(0.317, 0.767),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.140),\n     \"Launch_Mass_kg\": gaussian(115.060, 0.388),\n     \"Apogee_km\": gaussian(710.140, 1.148),\n     \"Perigee_km\": gaussian(671.398, 4.517),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.683, 1.301),\n     \"Inclination_radians\": gaussian(1.710, 0.410),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.115),\n     \"Launch_Mass_kg\": gaussian(33.373, 195.982),\n     \"Apogee_km\": gaussian(709.718, 1008.387),\n     \"Perigee_km\": gaussian(729.137, 168.920),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.798, 2.328),\n     \"Inclination_radians\": gaussian(1.703, 0.433),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.750, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.197, 2.389),\n     \"Apogee_km\": gaussian(710.445, 3.329),\n     \"Perigee_km\": gaussian(670.799, 4.789),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.218, 7.477),\n     \"Inclination_radians\": gaussian(1.692, 0.279),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Launch_Mass_kg\": gaussian(3212.701, 1679.378),\n     \"Apogee_km\": gaussian(32889.890, 12120.177),\n     \"Perigee_km\": gaussian(33179.081, 12975.085),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1330.964, 457.415),\n     \"Inclination_radians\": gaussian(0.222, 0.589),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(42.549, 144.845),\n     \"Apogee_km\": gaussian(761.030, 206.940),\n     \"Perigee_km\": gaussian(732.643, 137.058),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(101.500, 4.351),\n     \"Inclination_radians\": gaussian(1.716, 0.194),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.750, 0.125, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.048)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.153)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.158)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.750, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.178),\n     \"Launch_Mass_kg\": gaussian(40.362, 284.208),\n     \"Apogee_km\": gaussian(763.557, 112.067),\n     \"Perigee_km\": gaussian(736.713, 114.834),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.039, 1.121),\n     \"Inclination_radians\": gaussian(1.687, 0.716),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.005, 0.050),\n     \"Launch_Mass_kg\": gaussian(3110.294, 1822.609),\n     \"Apogee_km\": gaussian(33116.521, 12319.663),\n     \"Perigee_km\": gaussian(33668.141, 11402.919),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1196.403, 616.567),\n     \"Inclination_radians\": gaussian(0.204, 0.610),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.218),\n     \"Launch_Mass_kg\": gaussian(116.506, 4.947),\n     \"Apogee_km\": gaussian(709.986, 0.457),\n     \"Perigee_km\": gaussian(671.505, 6.723),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.055, 1.400),\n     \"Inclination_radians\": gaussian(1.695, 0.680),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.750, 0.125, 0.125]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(-0.000, 0.052),\n     \"Launch_Mass_kg\": gaussian(2956.622, 1966.859),\n     \"Apogee_km\": gaussian(32749.936, 12457.951),\n     \"Perigee_km\": gaussian(32553.292, 13128.859),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1233.242, 578.526),\n     \"Inclination_radians\": gaussian(0.179, 0.532),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.193),\n     \"Launch_Mass_kg\": gaussian(115.445, 1.435),\n     \"Apogee_km\": gaussian(710.373, 1.727),\n     \"Perigee_km\": gaussian(669.990, 2.151),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.978, 1.182),\n     \"Inclination_radians\": gaussian(1.702, 0.159),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.006, 0.239),\n     \"Launch_Mass_kg\": gaussian(64.032, 227.303),\n     \"Apogee_km\": gaussian(753.815, 86.883),\n     \"Perigee_km\": gaussian(723.370, 118.294),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.828, 1.897),\n     \"Inclination_radians\": gaussian(1.721, 0.212),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.125, 0.125, 0.750]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.038, 1.453),\n     \"Launch_Mass_kg\": gaussian(114.992, 1.601),\n     \"Apogee_km\": gaussian(710.734, 17.314),\n     \"Perigee_km\": gaussian(669.987, 0.545),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.387, 3.884),\n     \"Inclination_radians\": gaussian(1.710, 0.150),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.189),\n     \"Launch_Mass_kg\": gaussian(42.758, 146.365),\n     \"Apogee_km\": gaussian(763.346, 138.194),\n     \"Perigee_km\": gaussian(732.048, 184.806),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.110, 9.681),\n     \"Inclination_radians\": gaussian(1.723, 0.176),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.004, 0.055),\n     \"Launch_Mass_kg\": gaussian(3214.781, 1677.282),\n     \"Apogee_km\": gaussian(32934.252, 12031.584),\n     \"Perigee_km\": gaussian(30676.296, 14602.347),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019]),\n     \"Period_minutes\": gaussian(1297.137, 532.856),\n     \"Inclination_radians\": gaussian(0.256, 0.724),\n     \"Users\": categorical([0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.700, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(60.395, 168.992),\n     \"Apogee_km\": gaussian(752.579, 117.966),\n     \"Perigee_km\": gaussian(731.651, 141.331),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.437, 0.478),\n     \"Inclination_radians\": gaussian(1.690, 0.354),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.537, 2.855),\n     \"Apogee_km\": gaussian(710.515, 3.382),\n     \"Perigee_km\": gaussian(670.503, 1.795),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.340, 2.509),\n     \"Inclination_radians\": gaussian(1.700, 0.425),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3327.744, 1924.608),\n     \"Apogee_km\": gaussian(32491.048, 11554.617),\n     \"Perigee_km\": gaussian(32458.050, 11729.576),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1362.593, 422.292),\n     \"Inclination_radians\": gaussian(0.182, 0.536),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.003, 0.040),\n     \"Class_of_Orbit\": categorical([0.231, 0.615, 0.077, 0.077])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.015, 0.198),\n     \"Launch_Mass_kg\": gaussian(115.009, 0.334),\n     \"Apogee_km\": gaussian(710.894, 4.017),\n     \"Perigee_km\": gaussian(670.129, 1.425),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.547, 3.422),\n     \"Inclination_radians\": gaussian(1.706, 0.335),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.002, 0.204),\n     \"Launch_Mass_kg\": gaussian(51.526, 139.989),\n     \"Apogee_km\": gaussian(767.695, 83.830),\n     \"Perigee_km\": gaussian(724.474, 185.991),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.497, 0.717),\n     \"Inclination_radians\": gaussian(1.718, 0.405),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.060),\n     \"Launch_Mass_kg\": gaussian(3153.314, 1984.953),\n     \"Apogee_km\": gaussian(33398.812, 10204.430),\n     \"Perigee_km\": gaussian(32616.332, 10996.519),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1317.228, 437.344),\n     \"Inclination_radians\": gaussian(0.178, 0.509),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.778, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.153),\n     \"Launch_Mass_kg\": gaussian(115.936, 3.083),\n     \"Apogee_km\": gaussian(710.243, 2.036),\n     \"Perigee_km\": gaussian(670.192, 1.497),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.340, 3.664),\n     \"Inclination_radians\": gaussian(1.697, 0.490),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.050),\n     \"Launch_Mass_kg\": gaussian(3299.853, 1790.179),\n     \"Apogee_km\": gaussian(33289.036, 10461.273),\n     \"Perigee_km\": gaussian(33453.706, 10228.330),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1351.742, 407.472),\n     \"Inclination_radians\": gaussian(0.365, 0.805),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.158),\n     \"Launch_Mass_kg\": gaussian(57.142, 179.707),\n     \"Apogee_km\": gaussian(757.397, 122.429),\n     \"Perigee_km\": gaussian(737.598, 99.559),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.487, 1.009),\n     \"Inclination_radians\": gaussian(1.697, 0.429),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(77.686, 263.970),\n     \"Apogee_km\": gaussian(764.648, 169.966),\n     \"Perigee_km\": gaussian(740.807, 126.372),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.406, 1.143),\n     \"Inclination_radians\": gaussian(1.759, 0.701),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(116.648, 13.933),\n     \"Apogee_km\": gaussian(710.011, 1.736),\n     \"Perigee_km\": gaussian(670.269, 2.048),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.403, 2.538),\n     \"Inclination_radians\": gaussian(1.790, 0.457),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(3124.624, 2095.147),\n     \"Apogee_km\": gaussian(33336.523, 10782.363),\n     \"Perigee_km\": gaussian(33258.835, 11024.696),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1310.815, 519.470),\n     \"Inclination_radians\": gaussian(0.248, 0.653),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.037)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.778, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.435, 1.435),\n     \"Apogee_km\": gaussian(710.932, 6.503),\n     \"Perigee_km\": gaussian(670.140, 0.603),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.037, 2.240),\n     \"Inclination_radians\": gaussian(1.706, 0.381),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3269.866, 1847.645),\n     \"Apogee_km\": gaussian(32439.886, 13356.482),\n     \"Perigee_km\": gaussian(32158.829, 12360.991),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1293.245, 492.050),\n     \"Inclination_radians\": gaussian(0.172, 0.527),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(55.830, 200.149),\n     \"Apogee_km\": gaussian(753.787, 109.725),\n     \"Perigee_km\": gaussian(729.507, 176.002),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.019, 1.943),\n     \"Inclination_radians\": gaussian(1.733, 0.385),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.046)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.778, 0.111, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.049),\n     \"Launch_Mass_kg\": gaussian(3146.636, 1882.521),\n     \"Apogee_km\": gaussian(32960.311, 10832.874),\n     \"Perigee_km\": gaussian(33106.158, 11544.963),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1337.456, 390.208),\n     \"Inclination_radians\": gaussian(0.335, 0.752),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.147),\n     \"Launch_Mass_kg\": gaussian(61.231, 139.894),\n     \"Apogee_km\": gaussian(761.211, 92.523),\n     \"Perigee_km\": gaussian(726.168, 183.787),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.047, 2.089),\n     \"Inclination_radians\": gaussian(1.718, 0.211),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.005, 0.170),\n     \"Launch_Mass_kg\": gaussian(115.490, 7.643),\n     \"Apogee_km\": gaussian(711.172, 2.946),\n     \"Perigee_km\": gaussian(671.276, 26.775),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.811, 1.480),\n     \"Inclination_radians\": gaussian(1.701, 0.213),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.778, 0.222]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.017, 0.223),\n     \"Launch_Mass_kg\": gaussian(115.208, 2.766),\n     \"Apogee_km\": gaussian(711.128, 4.983),\n     \"Perigee_km\": gaussian(669.982, 0.696),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.727, 0.470),\n     \"Inclination_radians\": gaussian(1.709, 0.369),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.135),\n     \"Launch_Mass_kg\": gaussian(43.133, 146.790),\n     \"Apogee_km\": gaussian(755.179, 96.196),\n     \"Perigee_km\": gaussian(733.173, 106.235),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.454, 2.975),\n     \"Inclination_radians\": gaussian(1.704, 0.356),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.039),\n     \"Launch_Mass_kg\": gaussian(3356.977, 1786.669),\n     \"Apogee_km\": gaussian(32687.566, 11423.950),\n     \"Perigee_km\": gaussian(33259.299, 10336.046),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1217.492, 645.033),\n     \"Inclination_radians\": gaussian(0.206, 0.577),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.124),\n     \"Launch_Mass_kg\": gaussian(115.088, 2.195),\n     \"Apogee_km\": gaussian(711.029, 4.490),\n     \"Perigee_km\": gaussian(670.209, 1.876),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.687, 1.361),\n     \"Inclination_radians\": gaussian(1.784, 0.492),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.138),\n     \"Launch_Mass_kg\": gaussian(36.622, 209.456),\n     \"Apogee_km\": gaussian(763.706, 142.778),\n     \"Perigee_km\": gaussian(733.162, 154.418),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.879, 2.140),\n     \"Inclination_radians\": gaussian(1.768, 0.428),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.044),\n     \"Launch_Mass_kg\": gaussian(3426.366, 1699.089),\n     \"Apogee_km\": gaussian(33098.495, 11295.899),\n     \"Perigee_km\": gaussian(32977.025, 11687.596),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1335.128, 407.953),\n     \"Inclination_radians\": gaussian(0.178, 0.543),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.196),\n     \"Launch_Mass_kg\": gaussian(44.855, 182.027),\n     \"Apogee_km\": gaussian(762.510, 117.838),\n     \"Perigee_km\": gaussian(730.734, 107.796),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.044, 2.525),\n     \"Inclination_radians\": gaussian(1.730, 0.258),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.009, 0.208),\n     \"Launch_Mass_kg\": gaussian(115.601, 2.422),\n     \"Apogee_km\": gaussian(710.063, 1.792),\n     \"Perigee_km\": gaussian(670.041, 1.110),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.153, 10.855),\n     \"Inclination_radians\": gaussian(1.696, 0.202),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.046),\n     \"Launch_Mass_kg\": gaussian(3385.233, 1694.661),\n     \"Apogee_km\": gaussian(33095.091, 11584.512),\n     \"Perigee_km\": gaussian(33577.824, 10831.140),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1330.085, 414.761),\n     \"Inclination_radians\": gaussian(0.171, 0.533),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.778, 0.111, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.044),\n     \"Launch_Mass_kg\": gaussian(3282.697, 1887.060),\n     \"Apogee_km\": gaussian(33283.980, 10815.904),\n     \"Perigee_km\": gaussian(33214.805, 10667.487),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1354.779, 403.989),\n     \"Inclination_radians\": gaussian(0.164, 0.502),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.126),\n     \"Launch_Mass_kg\": gaussian(115.231, 0.876),\n     \"Apogee_km\": gaussian(710.275, 1.679),\n     \"Perigee_km\": gaussian(670.361, 1.987),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.786, 1.444),\n     \"Inclination_radians\": gaussian(1.700, 0.322),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.137),\n     \"Launch_Mass_kg\": gaussian(48.539, 192.433),\n     \"Apogee_km\": gaussian(757.180, 86.420),\n     \"Perigee_km\": gaussian(743.679, 102.585),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.067, 2.124),\n     \"Inclination_radians\": gaussian(1.720, 0.329),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.778, 0.111, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.047),\n     \"Launch_Mass_kg\": gaussian(3226.599, 1760.571),\n     \"Apogee_km\": gaussian(33420.268, 11247.687),\n     \"Perigee_km\": gaussian(32628.798, 11680.140),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1314.500, 414.498),\n     \"Inclination_radians\": gaussian(0.167, 0.480),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.011, 0.196),\n     \"Launch_Mass_kg\": gaussian(115.210, 1.494),\n     \"Apogee_km\": gaussian(710.351, 2.810),\n     \"Perigee_km\": gaussian(670.406, 3.203),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.032, 4.449),\n     \"Inclination_radians\": gaussian(1.705, 0.109),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.013, 0.141),\n     \"Launch_Mass_kg\": gaussian(46.879, 190.945),\n     \"Apogee_km\": gaussian(758.317, 113.685),\n     \"Perigee_km\": gaussian(726.487, 129.602),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(101.136, 2.307),\n     \"Inclination_radians\": gaussian(1.713, 0.116),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.778, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.121),\n     \"Launch_Mass_kg\": gaussian(116.767, 6.431),\n     \"Apogee_km\": gaussian(710.332, 2.145),\n     \"Perigee_km\": gaussian(670.908, 4.228),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.541, 3.218),\n     \"Inclination_radians\": gaussian(1.879, 0.656),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Eccentricity\": gaussian(0.001, 0.045),\n     \"Launch_Mass_kg\": gaussian(3345.782, 1760.413),\n     \"Apogee_km\": gaussian(33164.854, 10950.347),\n     \"Perigee_km\": gaussian(33270.380, 10944.281),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1348.034, 397.264),\n     \"Inclination_radians\": gaussian(0.187, 0.652),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.124),\n     \"Launch_Mass_kg\": gaussian(60.146, 196.903),\n     \"Apogee_km\": gaussian(762.266, 99.116),\n     \"Perigee_km\": gaussian(738.303, 106.925),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.778, 2.314),\n     \"Inclination_radians\": gaussian(1.919, 0.683),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.778, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.128),\n     \"Launch_Mass_kg\": gaussian(38.955, 194.767),\n     \"Apogee_km\": gaussian(760.397, 90.285),\n     \"Perigee_km\": gaussian(734.026, 126.991),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.548, 0.433),\n     \"Inclination_radians\": gaussian(1.703, 0.369),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.044),\n     \"Launch_Mass_kg\": gaussian(3442.292, 1720.191),\n     \"Apogee_km\": gaussian(33003.433, 11405.438),\n     \"Perigee_km\": gaussian(33413.098, 10670.401),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1283.685, 464.558),\n     \"Inclination_radians\": gaussian(0.171, 0.569),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.149),\n     \"Launch_Mass_kg\": gaussian(115.108, 1.426),\n     \"Apogee_km\": gaussian(709.996, 1.315),\n     \"Perigee_km\": gaussian(670.314, 1.917),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.447, 2.324),\n     \"Inclination_radians\": gaussian(1.716, 0.314),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.778, 0.111, 0.111]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.048),\n     \"Launch_Mass_kg\": gaussian(3285.997, 1932.206),\n     \"Apogee_km\": gaussian(32380.521, 11717.433),\n     \"Perigee_km\": gaussian(32817.359, 11916.023),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1323.490, 399.232),\n     \"Inclination_radians\": gaussian(0.187, 0.500),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.129),\n     \"Launch_Mass_kg\": gaussian(115.659, 1.863),\n     \"Apogee_km\": gaussian(710.958, 3.374),\n     \"Perigee_km\": gaussian(670.464, 2.889),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.387, 3.172),\n     \"Inclination_radians\": gaussian(1.719, 0.291),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.009, 0.170),\n     \"Launch_Mass_kg\": gaussian(55.923, 175.243),\n     \"Apogee_km\": gaussian(758.543, 88.187),\n     \"Perigee_km\": gaussian(728.753, 138.925),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.429, 1.821),\n     \"Inclination_radians\": gaussian(1.711, 0.230),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.111, 0.778]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.130),\n     \"Launch_Mass_kg\": gaussian(115.134, 1.814),\n     \"Apogee_km\": gaussian(710.800, 3.885),\n     \"Perigee_km\": gaussian(670.506, 2.682),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.046, 2.166),\n     \"Inclination_radians\": gaussian(1.718, 0.177),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.172),\n     \"Launch_Mass_kg\": gaussian(50.618, 180.998),\n     \"Apogee_km\": gaussian(756.876, 119.806),\n     \"Perigee_km\": gaussian(728.083, 169.169),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.280, 1.870),\n     \"Inclination_radians\": gaussian(1.716, 0.145),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.041),\n     \"Launch_Mass_kg\": gaussian(3286.972, 1856.080),\n     \"Apogee_km\": gaussian(33573.212, 10512.144),\n     \"Perigee_km\": gaussian(32081.402, 13304.662),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019]),\n     \"Period_minutes\": gaussian(1331.712, 390.072),\n     \"Inclination_radians\": gaussian(0.220, 0.542),\n     \"Users\": categorical([0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.727, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(38.227, 176.939),\n     \"Apogee_km\": gaussian(758.173, 85.340),\n     \"Perigee_km\": gaussian(742.062, 264.472),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.993, 2.678),\n     \"Inclination_radians\": gaussian(1.712, 0.275),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.720, 6.176),\n     \"Apogee_km\": gaussian(709.908, 2.617),\n     \"Perigee_km\": gaussian(670.183, 2.719),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.062, 3.779),\n     \"Inclination_radians\": gaussian(1.697, 0.216),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Launch_Mass_kg\": gaussian(3666.539, 1554.855),\n     \"Apogee_km\": gaussian(33631.117, 9727.916),\n     \"Perigee_km\": gaussian(33518.898, 9934.827),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1315.869, 484.972),\n     \"Inclination_radians\": gaussian(0.206, 0.637),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.035)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.194),\n     \"Launch_Mass_kg\": gaussian(115.169, 1.185),\n     \"Apogee_km\": gaussian(711.232, 5.643),\n     \"Perigee_km\": gaussian(670.735, 4.064),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.067, 1.743),\n     \"Inclination_radians\": gaussian(1.758, 0.449),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.189),\n     \"Launch_Mass_kg\": gaussian(34.980, 178.101),\n     \"Apogee_km\": gaussian(766.884, 76.577),\n     \"Perigee_km\": gaussian(732.539, 122.342),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.232, 1.219),\n     \"Inclination_radians\": gaussian(1.797, 0.408),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.000, 0.038),\n     \"Launch_Mass_kg\": gaussian(3623.579, 1641.848),\n     \"Apogee_km\": gaussian(33689.819, 9515.253),\n     \"Perigee_km\": gaussian(33148.715, 9947.952),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1317.668, 431.395),\n     \"Inclination_radians\": gaussian(0.118, 0.521),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.800, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.014, 0.197),\n     \"Launch_Mass_kg\": gaussian(115.133, 1.657),\n     \"Apogee_km\": gaussian(710.510, 2.605),\n     \"Perigee_km\": gaussian(671.124, 2.904),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.249, 8.714),\n     \"Inclination_radians\": gaussian(1.709, 0.429),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(-0.000, 0.039),\n     \"Launch_Mass_kg\": gaussian(3371.438, 1948.637),\n     \"Apogee_km\": gaussian(33253.160, 9871.925),\n     \"Perigee_km\": gaussian(30268.809, 14099.982),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1337.985, 412.394),\n     \"Inclination_radians\": gaussian(0.224, 0.613),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.000, 0.143),\n     \"Launch_Mass_kg\": gaussian(64.820, 142.514),\n     \"Apogee_km\": gaussian(763.634, 126.566),\n     \"Perigee_km\": gaussian(708.327, 186.749),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.063, 1.928),\n     \"Inclination_radians\": gaussian(1.711, 0.418),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.225),\n     \"Launch_Mass_kg\": gaussian(59.301, 179.307),\n     \"Apogee_km\": gaussian(761.736, 90.399),\n     \"Perigee_km\": gaussian(746.672, 182.823),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.359, 0.885),\n     \"Inclination_radians\": gaussian(1.715, 0.153),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.287),\n     \"Launch_Mass_kg\": gaussian(115.155, 4.386),\n     \"Apogee_km\": gaussian(710.587, 4.322),\n     \"Perigee_km\": gaussian(670.289, 5.003),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.539, 3.016),\n     \"Inclination_radians\": gaussian(1.707, 0.157),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.048),\n     \"Launch_Mass_kg\": gaussian(3426.962, 2021.860),\n     \"Apogee_km\": gaussian(33691.992, 9815.278),\n     \"Perigee_km\": gaussian(33768.861, 10191.506),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1260.010, 551.718),\n     \"Inclination_radians\": gaussian(0.146, 0.429),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.800, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.130),\n     \"Launch_Mass_kg\": gaussian(115.308, 2.407),\n     \"Apogee_km\": gaussian(710.064, 2.230),\n     \"Perigee_km\": gaussian(671.240, 7.054),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.617, 2.737),\n     \"Inclination_radians\": gaussian(1.751, 0.327),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.040),\n     \"Launch_Mass_kg\": gaussian(3597.132, 1813.541),\n     \"Apogee_km\": gaussian(34019.589, 9536.556),\n     \"Perigee_km\": gaussian(33929.171, 9438.808),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1264.631, 531.568),\n     \"Inclination_radians\": gaussian(0.168, 0.529),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.123),\n     \"Launch_Mass_kg\": gaussian(42.717, 215.751),\n     \"Apogee_km\": gaussian(758.991, 97.387),\n     \"Perigee_km\": gaussian(736.853, 116.288),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.532, 1.148),\n     \"Inclination_radians\": gaussian(1.791, 0.308),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.800, 0.100, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Launch_Mass_kg\": gaussian(3475.358, 1816.781),\n     \"Apogee_km\": gaussian(33150.676, 11362.911),\n     \"Perigee_km\": gaussian(32955.498, 10659.190),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1361.784, 427.814),\n     \"Inclination_radians\": gaussian(0.181, 0.585),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(37.458, 363.219),\n     \"Apogee_km\": gaussian(752.512, 96.386),\n     \"Perigee_km\": gaussian(735.563, 193.520),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.937, 3.211),\n     \"Inclination_radians\": gaussian(1.663, 0.672),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(114.969, 2.120),\n     \"Apogee_km\": gaussian(710.071, 1.386),\n     \"Perigee_km\": gaussian(670.505, 7.914),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.892, 4.963),\n     \"Inclination_radians\": gaussian(1.725, 0.690),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.900, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.038),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.206, 0.029, 0.029, 0.059, 0.029])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.303),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.110),\n     \"Launch_Mass_kg\": gaussian(116.089, 4.800),\n     \"Apogee_km\": gaussian(710.215, 2.215),\n     \"Perigee_km\": gaussian(670.166, 4.360),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.228, 2.664),\n     \"Inclination_radians\": gaussian(1.682, 1.047),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(-0.001, 0.117),\n     \"Launch_Mass_kg\": gaussian(37.309, 166.257),\n     \"Apogee_km\": gaussian(761.399, 149.963),\n     \"Perigee_km\": gaussian(739.508, 248.899),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.400, 0.511),\n     \"Inclination_radians\": gaussian(1.721, 0.410),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.004, 0.039),\n     \"Launch_Mass_kg\": gaussian(3624.503, 1679.481),\n     \"Apogee_km\": gaussian(33451.240, 9556.397),\n     \"Perigee_km\": gaussian(33892.294, 10826.071),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1335.520, 431.603),\n     \"Inclination_radians\": gaussian(0.159, 0.532),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(-0.001, 0.123),\n     \"Launch_Mass_kg\": gaussian(115.062, 1.266),\n     \"Apogee_km\": gaussian(710.189, 2.090),\n     \"Perigee_km\": gaussian(670.274, 2.871),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.612, 0.714),\n     \"Inclination_radians\": gaussian(1.714, 0.342),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.003, 0.150),\n     \"Launch_Mass_kg\": gaussian(60.081, 225.455),\n     \"Apogee_km\": gaussian(763.092, 206.933),\n     \"Perigee_km\": gaussian(740.060, 139.910),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.778, 2.271),\n     \"Inclination_radians\": gaussian(1.714, 0.390),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.003, 0.040),\n     \"Launch_Mass_kg\": gaussian(3388.754, 1930.177),\n     \"Apogee_km\": gaussian(32882.487, 10218.789),\n     \"Perigee_km\": gaussian(33620.496, 9618.370),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1327.575, 428.034),\n     \"Inclination_radians\": gaussian(0.127, 0.485),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.165),\n     \"Launch_Mass_kg\": gaussian(31.959, 149.675),\n     \"Apogee_km\": gaussian(760.295, 106.667),\n     \"Perigee_km\": gaussian(733.435, 161.901),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.567, 0.914),\n     \"Inclination_radians\": gaussian(1.781, 0.403),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.143),\n     \"Launch_Mass_kg\": gaussian(115.013, 1.843),\n     \"Apogee_km\": gaussian(710.086, 0.913),\n     \"Perigee_km\": gaussian(669.963, 1.201),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.431, 2.747),\n     \"Inclination_radians\": gaussian(1.767, 0.393),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.042),\n     \"Launch_Mass_kg\": gaussian(3630.913, 1679.063),\n     \"Apogee_km\": gaussian(33956.701, 9810.488),\n     \"Perigee_km\": gaussian(33231.367, 9941.206),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1339.214, 383.207),\n     \"Inclination_radians\": gaussian(0.134, 0.532),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.800, 0.100, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.039),\n     \"Launch_Mass_kg\": gaussian(3571.194, 1689.341),\n     \"Apogee_km\": gaussian(28076.364, 17367.593),\n     \"Perigee_km\": gaussian(33602.814, 9124.228),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1311.226, 443.584),\n     \"Inclination_radians\": gaussian(0.145, 0.500),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.147),\n     \"Launch_Mass_kg\": gaussian(115.848, 3.312),\n     \"Apogee_km\": gaussian(710.075, 1.157),\n     \"Perigee_km\": gaussian(670.394, 2.060),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.078, 1.827),\n     \"Inclination_radians\": gaussian(1.704, 0.122),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(-0.001, 0.150),\n     \"Launch_Mass_kg\": gaussian(52.286, 183.084),\n     \"Apogee_km\": gaussian(742.114, 110.032),\n     \"Perigee_km\": gaussian(734.547, 121.677),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.145, 1.282),\n     \"Inclination_radians\": gaussian(1.712, 0.128),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.800, 0.100, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.042),\n     \"Launch_Mass_kg\": gaussian(3638.607, 1775.052),\n     \"Apogee_km\": gaussian(33598.022, 9601.238),\n     \"Perigee_km\": gaussian(32797.489, 10351.269),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1359.976, 397.856),\n     \"Inclination_radians\": gaussian(0.202, 0.513),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.005, 0.187),\n     \"Launch_Mass_kg\": gaussian(115.168, 2.239),\n     \"Apogee_km\": gaussian(710.540, 3.000),\n     \"Perigee_km\": gaussian(670.150, 0.837),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.689, 2.240),\n     \"Inclination_radians\": gaussian(1.699, 0.276),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.004, 0.211),\n     \"Launch_Mass_kg\": gaussian(50.008, 243.888),\n     \"Apogee_km\": gaussian(766.195, 322.630),\n     \"Perigee_km\": gaussian(735.897, 141.004),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.021, 3.145),\n     \"Inclination_radians\": gaussian(1.717, 0.301),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.100, 0.100, 0.200, 0.100, 0.400, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.800, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.001, 0.134),\n     \"Launch_Mass_kg\": gaussian(115.123, 1.067),\n     \"Apogee_km\": gaussian(711.074, 3.010),\n     \"Perigee_km\": gaussian(671.074, 3.816),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.684, 1.083),\n     \"Inclination_radians\": gaussian(1.717, 0.261),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.003, 0.040),\n     \"Launch_Mass_kg\": gaussian(3242.512, 2314.028),\n     \"Apogee_km\": gaussian(30239.172, 15086.364),\n     \"Perigee_km\": gaussian(33382.030, 9556.700),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1332.299, 405.715),\n     \"Inclination_radians\": gaussian(0.165, 0.456),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.128),\n     \"Launch_Mass_kg\": gaussian(79.421, 225.414),\n     \"Apogee_km\": gaussian(747.561, 98.997),\n     \"Perigee_km\": gaussian(741.187, 164.837),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.802, 2.484),\n     \"Inclination_radians\": gaussian(1.716, 0.371),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.800, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.007, 0.122),\n     \"Launch_Mass_kg\": gaussian(41.532, 135.967),\n     \"Apogee_km\": gaussian(764.041, 133.256),\n     \"Perigee_km\": gaussian(743.456, 161.347),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.641, 1.465),\n     \"Inclination_radians\": gaussian(1.726, 0.206),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.003, 0.038),\n     \"Launch_Mass_kg\": gaussian(3723.581, 1591.790),\n     \"Apogee_km\": gaussian(33430.089, 9546.935),\n     \"Perigee_km\": gaussian(33170.131, 9512.711),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1349.345, 427.034),\n     \"Inclination_radians\": gaussian(0.115, 0.432),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.139),\n     \"Launch_Mass_kg\": gaussian(115.014, 0.295),\n     \"Apogee_km\": gaussian(710.341, 1.604),\n     \"Perigee_km\": gaussian(670.093, 2.137),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.458, 2.975),\n     \"Inclination_radians\": gaussian(1.708, 0.193),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.800, 0.100, 0.100]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.003, 0.040),\n     \"Launch_Mass_kg\": gaussian(3647.892, 1785.326),\n     \"Apogee_km\": gaussian(32214.337, 12422.861),\n     \"Perigee_km\": gaussian(33635.822, 8631.887),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1291.098, 452.427),\n     \"Inclination_radians\": gaussian(0.129, 0.475),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.012, 0.190),\n     \"Launch_Mass_kg\": gaussian(115.037, 7.706),\n     \"Apogee_km\": gaussian(710.132, 2.058),\n     \"Perigee_km\": gaussian(670.338, 1.272),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.584, 5.799),\n     \"Inclination_radians\": gaussian(1.699, 0.194),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.010, 0.116),\n     \"Launch_Mass_kg\": gaussian(47.999, 228.316),\n     \"Apogee_km\": gaussian(751.582, 110.395),\n     \"Perigee_km\": gaussian(740.610, 121.934),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.637, 2.400),\n     \"Inclination_radians\": gaussian(1.709, 0.279),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.100, 0.800]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.147),\n     \"Launch_Mass_kg\": gaussian(115.040, 0.853),\n     \"Apogee_km\": gaussian(709.997, 1.556),\n     \"Perigee_km\": gaussian(669.782, 3.887),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.111, 2.098),\n     \"Inclination_radians\": gaussian(1.679, 0.495),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.135),\n     \"Launch_Mass_kg\": gaussian(48.490, 159.529),\n     \"Apogee_km\": gaussian(752.194, 102.894),\n     \"Perigee_km\": gaussian(730.817, 277.834),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.211, 0.735),\n     \"Inclination_radians\": gaussian(1.712, 0.569),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.039),\n     \"Launch_Mass_kg\": gaussian(3641.620, 1632.313),\n     \"Apogee_km\": gaussian(33520.867, 9736.140),\n     \"Perigee_km\": gaussian(32329.314, 11130.655),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019]),\n     \"Period_minutes\": gaussian(1315.122, 479.806),\n     \"Inclination_radians\": gaussian(0.286, 0.771),\n     \"Users\": categorical([0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.192, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.083, 0.750, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(51.426, 124.095),\n     \"Apogee_km\": gaussian(759.202, 109.422),\n     \"Perigee_km\": gaussian(726.144, 128.691),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.593, 4.629),\n     \"Inclination_radians\": gaussian(1.725, 1.827),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Launch_Mass_kg\": gaussian(115.043, 1.053),\n     \"Apogee_km\": gaussian(710.136, 2.084),\n     \"Perigee_km\": gaussian(671.434, 9.107),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.546, 4.000),\n     \"Inclination_radians\": gaussian(1.698, 1.210),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Launch_Mass_kg\": gaussian(3772.397, 1662.812),\n     \"Apogee_km\": gaussian(34015.333, 8860.394),\n     \"Perigee_km\": gaussian(32611.399, 10533.309),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1176.996, 623.908),\n     \"Inclination_radians\": gaussian(0.129, 0.477),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.032)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.008, 0.275),\n     \"Launch_Mass_kg\": gaussian(115.473, 2.512),\n     \"Apogee_km\": gaussian(710.191, 0.952),\n     \"Perigee_km\": gaussian(670.145, 1.075),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.346, 3.059),\n     \"Inclination_radians\": gaussian(1.691, 0.321),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.269),\n     \"Launch_Mass_kg\": gaussian(52.379, 146.098),\n     \"Apogee_km\": gaussian(757.126, 84.711),\n     \"Perigee_km\": gaussian(732.777, 112.045),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.309, 0.874),\n     \"Inclination_radians\": gaussian(1.714, 0.319),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.001, 0.062),\n     \"Launch_Mass_kg\": gaussian(3790.286, 1703.071),\n     \"Apogee_km\": gaussian(33547.481, 9124.080),\n     \"Perigee_km\": gaussian(34108.980, 8727.227),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1176.735, 678.949),\n     \"Inclination_radians\": gaussian(0.122, 0.417),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.818, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.153),\n     \"Launch_Mass_kg\": gaussian(115.021, 1.228),\n     \"Apogee_km\": gaussian(710.006, 1.716),\n     \"Perigee_km\": gaussian(670.752, 2.637),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.043, 1.578),\n     \"Inclination_radians\": gaussian(1.692, 0.899),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.036),\n     \"Launch_Mass_kg\": gaussian(3754.318, 1601.312),\n     \"Apogee_km\": gaussian(34122.301, 8654.924),\n     \"Perigee_km\": gaussian(33642.368, 9714.725),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1152.193, 598.586),\n     \"Inclination_radians\": gaussian(0.107, 0.479),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.132),\n     \"Launch_Mass_kg\": gaussian(42.215, 107.386),\n     \"Apogee_km\": gaussian(763.933, 114.431),\n     \"Perigee_km\": gaussian(733.395, 176.092),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.268, 1.254),\n     \"Inclination_radians\": gaussian(1.735, 0.784),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.132),\n     \"Launch_Mass_kg\": gaussian(57.181, 179.969),\n     \"Apogee_km\": gaussian(759.573, 112.891),\n     \"Perigee_km\": gaussian(739.787, 124.454),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.695, 0.861),\n     \"Inclination_radians\": gaussian(1.725, 0.354),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.125),\n     \"Launch_Mass_kg\": gaussian(115.455, 3.034),\n     \"Apogee_km\": gaussian(711.332, 6.901),\n     \"Perigee_km\": gaussian(670.745, 3.516),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.810, 3.664),\n     \"Inclination_radians\": gaussian(1.703, 0.380),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.000, 0.037),\n     \"Launch_Mass_kg\": gaussian(3736.466, 1637.543),\n     \"Apogee_km\": gaussian(33988.989, 9182.109),\n     \"Perigee_km\": gaussian(33403.607, 9743.350),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1117.038, 644.497),\n     \"Inclination_radians\": gaussian(0.142, 0.478),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.818, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.011, 0.185),\n     \"Launch_Mass_kg\": gaussian(115.315, 2.347),\n     \"Apogee_km\": gaussian(710.032, 1.786),\n     \"Perigee_km\": gaussian(670.226, 1.372),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.979, 1.735),\n     \"Inclination_radians\": gaussian(1.653, 1.108),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.001, 0.037),\n     \"Launch_Mass_kg\": gaussian(3739.093, 1606.364),\n     \"Apogee_km\": gaussian(33549.637, 8971.349),\n     \"Perigee_km\": gaussian(32467.157, 11911.492),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1190.538, 587.327),\n     \"Inclination_radians\": gaussian(0.145, 0.511),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.006, 0.219),\n     \"Launch_Mass_kg\": gaussian(44.314, 196.007),\n     \"Apogee_km\": gaussian(774.285, 670.160),\n     \"Perigee_km\": gaussian(719.952, 170.465),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.191, 2.589),\n     \"Inclination_radians\": gaussian(1.674, 1.372),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.818, 0.091, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Launch_Mass_kg\": gaussian(3776.780, 1617.391),\n     \"Apogee_km\": gaussian(33177.205, 10483.894),\n     \"Perigee_km\": gaussian(33130.859, 10063.769),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1201.061, 610.301),\n     \"Inclination_radians\": gaussian(0.172, 0.594),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Launch_Mass_kg\": gaussian(45.672, 195.125),\n     \"Apogee_km\": gaussian(756.749, 89.774),\n     \"Perigee_km\": gaussian(734.118, 146.580),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.068, 1.529),\n     \"Inclination_radians\": gaussian(1.755, 1.052),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.261, 2.172),\n     \"Apogee_km\": gaussian(710.157, 1.112),\n     \"Perigee_km\": gaussian(670.751, 2.891),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.876, 1.105),\n     \"Inclination_radians\": gaussian(1.695, 1.011),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.033)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(115.028, 1.188),\n     \"Apogee_km\": gaussian(710.005, 1.029),\n     \"Perigee_km\": gaussian(670.127, 0.395),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.167, 2.357),\n     \"Inclination_radians\": gaussian(1.717, 0.265),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Launch_Mass_kg\": gaussian(42.832, 144.439),\n     \"Apogee_km\": gaussian(758.515, 92.277),\n     \"Perigee_km\": gaussian(729.272, 107.122),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.973, 1.896),\n     \"Inclination_radians\": gaussian(1.705, 0.291),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Launch_Mass_kg\": gaussian(3785.742, 1598.131),\n     \"Apogee_km\": gaussian(34163.661, 9004.141),\n     \"Perigee_km\": gaussian(34048.353, 9130.539),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1163.837, 672.717),\n     \"Inclination_radians\": gaussian(0.112, 0.440),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.032)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.117),\n     \"Launch_Mass_kg\": gaussian(114.982, 0.803),\n     \"Apogee_km\": gaussian(710.121, 1.337),\n     \"Perigee_km\": gaussian(669.986, 2.023),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.560, 0.978),\n     \"Inclination_radians\": gaussian(1.710, 0.226),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.004, 0.121),\n     \"Launch_Mass_kg\": gaussian(34.391, 119.344),\n     \"Apogee_km\": gaussian(762.974, 125.356),\n     \"Perigee_km\": gaussian(731.998, 177.485),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.270, 3.120),\n     \"Inclination_radians\": gaussian(1.708, 0.304),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.036),\n     \"Launch_Mass_kg\": gaussian(3701.217, 1567.821),\n     \"Apogee_km\": gaussian(33846.191, 10070.944),\n     \"Perigee_km\": gaussian(34244.315, 9583.234),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1011.815, 795.576),\n     \"Inclination_radians\": gaussian(0.208, 0.630),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.003, 0.146),\n     \"Launch_Mass_kg\": gaussian(36.092, 102.689),\n     \"Apogee_km\": gaussian(761.264, 82.790),\n     \"Perigee_km\": gaussian(735.524, 166.635),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.156, 0.983),\n     \"Inclination_radians\": gaussian(1.707, 0.384),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.009, 0.148),\n     \"Launch_Mass_kg\": gaussian(115.332, 1.438),\n     \"Apogee_km\": gaussian(710.356, 2.377),\n     \"Perigee_km\": gaussian(669.915, 2.091),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.952, 1.633),\n     \"Inclination_radians\": gaussian(1.698, 0.468),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.043),\n     \"Launch_Mass_kg\": gaussian(3701.384, 1550.749),\n     \"Apogee_km\": gaussian(34310.444, 9066.104),\n     \"Perigee_km\": gaussian(33833.011, 9325.063),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1214.143, 642.678),\n     \"Inclination_radians\": gaussian(0.156, 0.578),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.818, 0.091, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3714.013, 1658.352),\n     \"Apogee_km\": gaussian(33782.923, 9038.544),\n     \"Perigee_km\": gaussian(32928.870, 9417.827),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1192.405, 630.321),\n     \"Inclination_radians\": gaussian(0.126, 0.480),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.860, 3.266),\n     \"Apogee_km\": gaussian(710.029, 0.843),\n     \"Perigee_km\": gaussian(671.409, 4.754),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.960, 2.525),\n     \"Inclination_radians\": gaussian(1.775, 0.428),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(39.359, 124.075),\n     \"Apogee_km\": gaussian(769.766, 255.881),\n     \"Perigee_km\": gaussian(734.618, 128.124),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.264, 1.346),\n     \"Inclination_radians\": gaussian(1.787, 0.376),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.078, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.001, 0.040)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.818, 0.091, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(-0.000, 0.037),\n     \"Launch_Mass_kg\": gaussian(3910.518, 1719.196),\n     \"Apogee_km\": gaussian(30552.440, 14271.552),\n     \"Perigee_km\": gaussian(33553.064, 9050.764),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1164.937, 662.744),\n     \"Inclination_radians\": gaussian(0.157, 0.444),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(-0.003, 0.140),\n     \"Launch_Mass_kg\": gaussian(115.177, 1.024),\n     \"Apogee_km\": gaussian(710.268, 1.615),\n     \"Perigee_km\": gaussian(670.651, 3.213),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.413, 3.200),\n     \"Inclination_radians\": gaussian(1.704, 0.289),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.000, 0.154),\n     \"Launch_Mass_kg\": gaussian(39.984, 123.474),\n     \"Apogee_km\": gaussian(740.819, 104.216),\n     \"Perigee_km\": gaussian(739.302, 165.305),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.442, 1.708),\n     \"Inclination_radians\": gaussian(1.718, 0.355),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.818, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.008, 0.234),\n     \"Launch_Mass_kg\": gaussian(115.514, 4.867),\n     \"Apogee_km\": gaussian(710.331, 2.043),\n     \"Perigee_km\": gaussian(670.040, 0.577),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.462, 3.160),\n     \"Inclination_radians\": gaussian(1.762, 0.343),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.001, 0.036),\n     \"Launch_Mass_kg\": gaussian(3828.233, 1613.433),\n     \"Apogee_km\": gaussian(33621.801, 10354.659),\n     \"Perigee_km\": gaussian(33199.765, 9707.431),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1111.624, 658.048),\n     \"Inclination_radians\": gaussian(0.120, 0.464),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.244),\n     \"Launch_Mass_kg\": gaussian(47.690, 236.386),\n     \"Apogee_km\": gaussian(756.117, 98.300),\n     \"Perigee_km\": gaussian(730.308, 193.429),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.435, 1.203),\n     \"Inclination_radians\": gaussian(1.746, 1.185),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.818, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(57.798, 168.731),\n     \"Apogee_km\": gaussian(756.020, 110.141),\n     \"Perigee_km\": gaussian(733.845, 151.207),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.552, 1.537),\n     \"Inclination_radians\": gaussian(1.721, 0.173),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3583.680, 1871.931),\n     \"Apogee_km\": gaussian(33872.475, 9296.294),\n     \"Perigee_km\": gaussian(33695.492, 9736.886),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1178.215, 581.463),\n     \"Inclination_radians\": gaussian(0.186, 0.499),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.132, 3.403),\n     \"Apogee_km\": gaussian(710.201, 3.925),\n     \"Perigee_km\": gaussian(670.605, 2.661),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.410, 3.263),\n     \"Inclination_radians\": gaussian(1.705, 0.153),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.078, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.000, 0.035)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.818, 0.091, 0.091]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(0.002, 0.036),\n     \"Launch_Mass_kg\": gaussian(3534.595, 1900.410),\n     \"Apogee_km\": gaussian(33636.863, 9758.006),\n     \"Perigee_km\": gaussian(33550.362, 9176.768),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1084.331, 713.402),\n     \"Inclination_radians\": gaussian(0.134, 0.449),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.006, 0.110),\n     \"Launch_Mass_kg\": gaussian(115.464, 2.348),\n     \"Apogee_km\": gaussian(710.328, 1.948),\n     \"Perigee_km\": gaussian(670.173, 2.028),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.648, 2.383),\n     \"Inclination_radians\": gaussian(1.701, 0.231),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.111),\n     \"Launch_Mass_kg\": gaussian(57.626, 205.119),\n     \"Apogee_km\": gaussian(762.666, 95.109),\n     \"Perigee_km\": gaussian(734.761, 132.563),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.292, 2.884),\n     \"Inclination_radians\": gaussian(1.710, 0.244),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.091, 0.091, 0.818]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(-0.003, 0.194),\n     \"Launch_Mass_kg\": gaussian(116.756, 5.832),\n     \"Apogee_km\": gaussian(710.652, 7.707),\n     \"Perigee_km\": gaussian(671.266, 3.975),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.489, 7.208),\n     \"Inclination_radians\": gaussian(1.697, 0.518),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.010, 0.145),\n     \"Launch_Mass_kg\": gaussian(41.269, 154.174),\n     \"Apogee_km\": gaussian(753.655, 100.795),\n     \"Perigee_km\": gaussian(737.018, 310.037),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.559, 1.502),\n     \"Inclination_radians\": gaussian(1.725, 0.637),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.068, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Eccentricity\": gaussian(-0.000, 0.038),\n     \"Launch_Mass_kg\": gaussian(3680.831, 1673.077),\n     \"Apogee_km\": gaussian(34224.322, 9463.272),\n     \"Perigee_km\": gaussian(33850.652, 10652.763),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018]),\n     \"Period_minutes\": gaussian(1080.451, 688.764),\n     \"Inclination_radians\": gaussian(0.149, 0.476),\n     \"Users\": categorical([0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.185, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.769, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.235, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.286, 0.048, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.839, 37.922),\n     \"Apogee_km\": gaussian(812.588, 65.161),\n     \"Perigee_km\": gaussian(530.244, 133.423),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.363, 1.516),\n     \"Inclination_radians\": gaussian(1.380, 0.841),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.029, 1.394),\n     \"Apogee_km\": gaussian(710.847, 4.171),\n     \"Perigee_km\": gaussian(670.164, 0.720),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.445, 2.821),\n     \"Inclination_radians\": gaussian(1.748, 0.996),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3989.144, 1804.473),\n     \"Apogee_km\": gaussian(34647.297, 7620.273),\n     \"Perigee_km\": gaussian(34406.221, 6844.919),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1249.892, 479.857),\n     \"Inclination_radians\": gaussian(0.132, 0.384),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.006, 0.025),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026]),\n     \"Launch_Site\": categorical([0.043, 0.022, 0.022, 0.152, 0.022, 0.022, 0.087, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.239, 0.022, 0.022, 0.043, 0.022])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.286, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.139, 0.999),\n     \"Apogee_km\": gaussian(710.144, 1.721),\n     \"Perigee_km\": gaussian(672.069, 8.124),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.801, 1.557),\n     \"Inclination_radians\": gaussian(1.706, 0.255),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.018, 42.582),\n     \"Apogee_km\": gaussian(809.258, 67.127),\n     \"Perigee_km\": gaussian(528.940, 145.896),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.302, 1.383),\n     \"Inclination_radians\": gaussian(1.414, 0.782),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4101.076, 1883.385),\n     \"Apogee_km\": gaussian(33940.007, 8106.530),\n     \"Perigee_km\": gaussian(34235.947, 7174.940),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1282.836, 490.911),\n     \"Inclination_radians\": gaussian(0.169, 0.403),\n     \"Users\": categorical([0.031, 0.031, 0.281, 0.031, 0.031, 0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.008, 0.025)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.667, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.285, 6.936),\n     \"Apogee_km\": gaussian(710.704, 2.601),\n     \"Perigee_km\": gaussian(670.626, 4.407),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.587, 0.543),\n     \"Inclination_radians\": gaussian(1.911, 0.951),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4129.792, 1805.232),\n     \"Apogee_km\": gaussian(35002.531, 6921.150),\n     \"Perigee_km\": gaussian(34247.450, 7536.878),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1241.882, 534.212),\n     \"Inclination_radians\": gaussian(0.172, 0.483),\n     \"Users\": categorical([0.031, 0.031, 0.281, 0.031, 0.031, 0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13.707, 36.622),\n     \"Apogee_km\": gaussian(813.125, 65.106),\n     \"Perigee_km\": gaussian(536.854, 146.301),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.226, 1.240),\n     \"Inclination_radians\": gaussian(1.398, 0.986),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.952, 0.048]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.141, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.007, 0.025)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.002, 0.164)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.286, 0.048, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.468, 41.633),\n     \"Apogee_km\": gaussian(811.921, 59.612),\n     \"Perigee_km\": gaussian(533.458, 139.992),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.176, 1.321),\n     \"Inclination_radians\": gaussian(1.381, 0.940),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.729, 2.444),\n     \"Apogee_km\": gaussian(710.202, 1.527),\n     \"Perigee_km\": gaussian(670.024, 1.221),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.758, 2.623),\n     \"Inclination_radians\": gaussian(1.703, 1.180),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4083.792, 1835.336),\n     \"Apogee_km\": gaussian(35133.531, 7045.905),\n     \"Perigee_km\": gaussian(34533.406, 7303.093),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1262.004, 483.912),\n     \"Inclination_radians\": gaussian(0.131, 0.387),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.025)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.952, 0.048]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.152, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Users\": categorical([0.026, 0.026, 0.237, 0.026, 0.026, 0.026, 0.026, 0.079, 0.289, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.667, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.988, 4.058),\n     \"Apogee_km\": gaussian(709.946, 1.668),\n     \"Perigee_km\": gaussian(670.139, 1.070),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.803, 1.509),\n     \"Inclination_radians\": gaussian(1.815, 0.618),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4188.749, 1856.422),\n     \"Apogee_km\": gaussian(34450.320, 7453.401),\n     \"Perigee_km\": gaussian(34831.033, 7550.282),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1256.955, 480.577),\n     \"Inclination_radians\": gaussian(0.137, 0.382),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13.598, 40.376),\n     \"Apogee_km\": gaussian(813.824, 64.831),\n     \"Perigee_km\": gaussian(537.018, 135.502),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.280, 1.317),\n     \"Inclination_radians\": gaussian(1.380, 0.841),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.006, 0.025),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.286, 0.048]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4051.310, 1794.838),\n     \"Apogee_km\": gaussian(34360.890, 7111.383),\n     \"Perigee_km\": gaussian(34332.613, 7127.676),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1288.474, 544.207),\n     \"Inclination_radians\": gaussian(0.127, 0.373),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12.419, 38.342),\n     \"Apogee_km\": gaussian(812.224, 62.296),\n     \"Perigee_km\": gaussian(530.420, 137.155),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.384, 1.458),\n     \"Inclination_radians\": gaussian(1.423, 0.906),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.627, 3.573),\n     \"Apogee_km\": gaussian(710.109, 2.705),\n     \"Perigee_km\": gaussian(670.271, 4.789),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.069, 2.142),\n     \"Inclination_radians\": gaussian(1.662, 1.006),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.006, 0.026),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.286, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.008, 1.587),\n     \"Apogee_km\": gaussian(709.988, 0.228),\n     \"Perigee_km\": gaussian(670.155, 1.218),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.889, 1.936),\n     \"Inclination_radians\": gaussian(1.697, 0.708),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(20.925, 51.885),\n     \"Apogee_km\": gaussian(811.749, 65.878),\n     \"Perigee_km\": gaussian(533.445, 144.371),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.271, 1.326),\n     \"Inclination_radians\": gaussian(1.460, 0.892),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3902.208, 1997.148),\n     \"Apogee_km\": gaussian(34468.272, 7927.480),\n     \"Perigee_km\": gaussian(33816.525, 8367.460),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1270.326, 491.903),\n     \"Inclination_radians\": gaussian(0.131, 0.399),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.008, 0.026)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.286, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.006, 1.736),\n     \"Apogee_km\": gaussian(709.999, 0.341),\n     \"Perigee_km\": gaussian(670.072, 1.839),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.598, 1.289),\n     \"Inclination_radians\": gaussian(1.636, 0.921),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(17.028, 42.277),\n     \"Apogee_km\": gaussian(815.922, 63.970),\n     \"Perigee_km\": gaussian(536.436, 142.725),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.268, 1.284),\n     \"Inclination_radians\": gaussian(1.427, 0.840),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4023.629, 1893.291),\n     \"Apogee_km\": gaussian(34177.838, 6773.113),\n     \"Perigee_km\": gaussian(34390.167, 7413.138),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1181.598, 569.027),\n     \"Inclination_radians\": gaussian(0.165, 0.433),\n     \"Users\": categorical([0.031, 0.031, 0.281, 0.031, 0.031, 0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.008, 0.027)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.286, 0.048, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12.226, 37.340),\n     \"Apogee_km\": gaussian(814.155, 62.825),\n     \"Perigee_km\": gaussian(534.336, 144.627),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.122, 1.208),\n     \"Inclination_radians\": gaussian(1.404, 0.839),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.176, 2.718),\n     \"Apogee_km\": gaussian(710.330, 1.752),\n     \"Perigee_km\": gaussian(670.873, 4.837),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.584, 1.157),\n     \"Inclination_radians\": gaussian(1.741, 0.693),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4027.710, 1819.400),\n     \"Apogee_km\": gaussian(34508.994, 6803.541),\n     \"Perigee_km\": gaussian(34364.104, 7300.696),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1252.099, 467.190),\n     \"Inclination_radians\": gaussian(0.161, 0.430),\n     \"Users\": categorical([0.031, 0.031, 0.281, 0.031, 0.031, 0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.006, 0.025)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.048, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3777.018, 2030.489),\n     \"Apogee_km\": gaussian(34763.961, 7061.651),\n     \"Perigee_km\": gaussian(34632.469, 6936.296),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1211.117, 556.322),\n     \"Inclination_radians\": gaussian(0.151, 0.384),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.075, 1.756),\n     \"Apogee_km\": gaussian(710.164, 1.529),\n     \"Perigee_km\": gaussian(670.077, 1.946),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.788, 1.520),\n     \"Inclination_radians\": gaussian(1.690, 0.453),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(19.878, 50.513),\n     \"Apogee_km\": gaussian(817.916, 62.864),\n     \"Perigee_km\": gaussian(539.740, 141.619),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.292, 1.314),\n     \"Inclination_radians\": gaussian(1.435, 0.837),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.006, 0.025)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([0.905, 0.095]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.027, 0.027, 0.243, 0.027, 0.027, 0.027, 0.027, 0.081, 0.270, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.048, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4031.519, 1850.135),\n     \"Apogee_km\": gaussian(34675.646, 7045.028),\n     \"Perigee_km\": gaussian(34601.904, 6629.055),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1231.102, 510.246),\n     \"Inclination_radians\": gaussian(0.169, 0.457),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.309, 2.128),\n     \"Apogee_km\": gaussian(710.951, 4.750),\n     \"Perigee_km\": gaussian(670.211, 1.523),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.902, 1.355),\n     \"Inclination_radians\": gaussian(1.675, 1.131),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(16.571, 44.148),\n     \"Apogee_km\": gaussian(812.578, 66.662),\n     \"Perigee_km\": gaussian(530.820, 139.282),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.245, 1.287),\n     \"Inclination_radians\": gaussian(1.431, 0.890),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.007, 0.025),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.667, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.483, 4.378),\n     \"Apogee_km\": gaussian(710.339, 2.511),\n     \"Perigee_km\": gaussian(670.634, 2.977),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.574, 0.684),\n     \"Inclination_radians\": gaussian(1.704, 0.358),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4053.463, 1917.198),\n     \"Apogee_km\": gaussian(34390.331, 7947.593),\n     \"Perigee_km\": gaussian(34571.803, 7345.028),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1235.066, 520.796),\n     \"Inclination_radians\": gaussian(0.133, 0.345),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.908, 43.999),\n     \"Apogee_km\": gaussian(811.314, 65.153),\n     \"Perigee_km\": gaussian(537.374, 139.931),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.202, 1.224),\n     \"Inclination_radians\": gaussian(1.364, 0.876),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026]),\n     \"Launch_Site\": categorical([0.043, 0.022, 0.022, 0.152, 0.022, 0.022, 0.087, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.239, 0.022, 0.022, 0.043, 0.022])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.025)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.286, 0.667, 0.048]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12.003, 35.053),\n     \"Apogee_km\": gaussian(814.157, 64.794),\n     \"Perigee_km\": gaussian(536.408, 135.592),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.303, 1.388),\n     \"Inclination_radians\": gaussian(1.416, 0.893),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4216.416, 1853.742),\n     \"Apogee_km\": gaussian(34288.503, 7153.494),\n     \"Perigee_km\": gaussian(34352.874, 7173.785),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1247.083, 549.012),\n     \"Inclination_radians\": gaussian(0.134, 0.366),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.580, 3.110),\n     \"Apogee_km\": gaussian(709.940, 1.208),\n     \"Perigee_km\": gaussian(672.212, 16.020),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.877, 1.497),\n     \"Inclination_radians\": gaussian(1.704, 0.240),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.008, 0.025)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.667, 0.048, 0.286]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4115.717, 1809.951),\n     \"Apogee_km\": gaussian(34183.284, 7374.965),\n     \"Perigee_km\": gaussian(34581.284, 7273.180),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1205.286, 490.147),\n     \"Inclination_radians\": gaussian(0.135, 0.359),\n     \"Users\": categorical([0.031, 0.031, 0.281, 0.031, 0.031, 0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.287, 1.468),\n     \"Apogee_km\": gaussian(710.006, 3.252),\n     \"Perigee_km\": gaussian(670.594, 2.624),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(100.081, 4.467),\n     \"Inclination_radians\": gaussian(1.710, 0.248),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12.990, 38.350),\n     \"Apogee_km\": gaussian(808.423, 64.938),\n     \"Perigee_km\": gaussian(532.035, 133.362),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.468, 1.882),\n     \"Inclination_radians\": gaussian(1.393, 0.860),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.208, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Eccentricity\": gaussian(0.007, 0.027)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.952, 0.048]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.048, 0.286, 0.667]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.467, 3.967),\n     \"Apogee_km\": gaussian(710.618, 2.335),\n     \"Perigee_km\": gaussian(670.184, 2.368),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.679, 0.956),\n     \"Inclination_radians\": gaussian(1.702, 0.817),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(11.391, 34.985),\n     \"Apogee_km\": gaussian(813.318, 63.489),\n     \"Perigee_km\": gaussian(540.059, 139.831),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.135, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.172, 1.243),\n     \"Inclination_radians\": gaussian(1.377, 0.851),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4027.084, 1795.270),\n     \"Apogee_km\": gaussian(35297.956, 7030.575),\n     \"Perigee_km\": gaussian(33410.570, 9313.938),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.167, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.100, 0.017]),\n     \"Period_minutes\": gaussian(1262.036, 460.387),\n     \"Inclination_radians\": gaussian(0.134, 0.406),\n     \"Class_of_Orbit\": categorical([0.056, 0.833, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.026, 0.026, 0.231, 0.026, 0.026, 0.026, 0.026, 0.077, 0.282, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.025)\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.150, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.387, 0.032, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(56.676, 114.586),\n     \"Apogee_km\": gaussian(728.951, 137.358),\n     \"Perigee_km\": gaussian(540.915, 100.989),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.487, 1.421),\n     \"Inclination_radians\": gaussian(1.368, 0.732),\n     \"Users\": categorical([0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.167, 0.167, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.052, 0.819),\n     \"Apogee_km\": gaussian(710.223, 2.524),\n     \"Perigee_km\": gaussian(670.487, 2.892),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.816, 3.241),\n     \"Inclination_radians\": gaussian(1.708, 0.378),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4147.184, 1827.683),\n     \"Apogee_km\": gaussian(34690.524, 6415.429),\n     \"Perigee_km\": gaussian(34575.352, 6217.619),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1280.129, 441.894),\n     \"Inclination_radians\": gaussian(0.120, 0.321),\n     \"Users\": categorical([0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.694, 15.293),\n     \"Apogee_km\": gaussian(3749.011, 5647.067),\n     \"Perigee_km\": gaussian(402.630, 498.450),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(130.645, 66.991),\n     \"Inclination_radians\": gaussian(1.429, 0.448),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.007, 0.022),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.093, 0.300),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.387, 0.548, 0.032, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(56.273, 111.235),\n     \"Apogee_km\": gaussian(729.097, 128.639),\n     \"Perigee_km\": gaussian(537.558, 107.897),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.566, 1.573),\n     \"Inclination_radians\": gaussian(1.340, 0.772),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4061.769, 1882.190),\n     \"Apogee_km\": gaussian(34736.749, 7070.891),\n     \"Perigee_km\": gaussian(34697.274, 6954.083),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1286.987, 422.281),\n     \"Inclination_radians\": gaussian(0.134, 0.364),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.210, 8.412),\n     \"Apogee_km\": gaussian(4694.407, 17111.801),\n     \"Perigee_km\": gaussian(423.111, 499.728),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(134.033, 78.515),\n     \"Inclination_radians\": gaussian(1.413, 1.114),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.125, 1.868),\n     \"Apogee_km\": gaussian(710.368, 2.523),\n     \"Perigee_km\": gaussian(670.969, 3.753),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.305, 3.760),\n     \"Inclination_radians\": gaussian(1.731, 0.914),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.005, 0.021),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.144, 0.324),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.548, 0.387, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.437, 1.984),\n     \"Apogee_km\": gaussian(710.032, 1.997),\n     \"Perigee_km\": gaussian(669.977, 2.319),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.665, 2.188),\n     \"Inclination_radians\": gaussian(1.719, 0.453),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4233.138, 1877.061),\n     \"Apogee_km\": gaussian(34764.297, 6784.264),\n     \"Perigee_km\": gaussian(34212.065, 6460.188),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1315.283, 420.379),\n     \"Inclination_radians\": gaussian(0.118, 0.321),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(52.788, 113.250),\n     \"Apogee_km\": gaussian(734.089, 136.525),\n     \"Perigee_km\": gaussian(542.794, 99.807),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.396, 1.452),\n     \"Inclination_radians\": gaussian(1.427, 0.749),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(131.235, 507.735),\n     \"Apogee_km\": gaussian(3809.044, 6186.541),\n     \"Perigee_km\": gaussian(378.902, 496.125),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(130.267, 96.879),\n     \"Inclination_radians\": gaussian(1.457, 0.606),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.007, 0.022)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.191, 0.313)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Users\": categorical([0.020, 0.020, 0.204, 0.020, 0.020, 0.020, 0.020, 0.122, 0.265, 0.020, 0.020, 0.020, 0.020, 0.102, 0.020, 0.020, 0.041, 0.020])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.387, 0.032, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(56.381, 112.700),\n     \"Apogee_km\": gaussian(727.256, 133.673),\n     \"Perigee_km\": gaussian(538.668, 101.035),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.544, 1.612),\n     \"Inclination_radians\": gaussian(1.358, 0.726),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.153, 0.625),\n     \"Apogee_km\": gaussian(710.173, 1.659),\n     \"Perigee_km\": gaussian(670.155, 0.763),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.530, 5.432),\n     \"Inclination_radians\": gaussian(1.687, 0.837),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4114.784, 1895.861),\n     \"Apogee_km\": gaussian(34885.873, 6930.264),\n     \"Perigee_km\": gaussian(34642.671, 5994.472),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1275.471, 437.151),\n     \"Inclination_radians\": gaussian(0.110, 0.330),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.939, 9.421),\n     \"Apogee_km\": gaussian(3820.640, 5694.276),\n     \"Perigee_km\": gaussian(425.452, 451.530),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(129.019, 78.568),\n     \"Inclination_radians\": gaussian(1.418, 0.942),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.005, 0.020)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.093, 0.333)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.164, 0.009, 0.009, 0.018, 0.009, 0.045, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Users\": categorical([0.020, 0.020, 0.204, 0.020, 0.020, 0.020, 0.020, 0.122, 0.265, 0.020, 0.020, 0.020, 0.020, 0.102, 0.020, 0.020, 0.041, 0.020])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.548, 0.387, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.124, 3.952),\n     \"Apogee_km\": gaussian(711.355, 6.327),\n     \"Perigee_km\": gaussian(670.556, 2.140),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.811, 2.227),\n     \"Inclination_radians\": gaussian(1.732, 1.262),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4010.757, 1964.306),\n     \"Apogee_km\": gaussian(34529.597, 6365.827),\n     \"Perigee_km\": gaussian(34826.645, 6480.705),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1277.858, 433.429),\n     \"Inclination_radians\": gaussian(0.132, 0.402),\n     \"Users\": categorical([0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(63.453, 115.636),\n     \"Apogee_km\": gaussian(729.495, 135.531),\n     \"Perigee_km\": gaussian(545.775, 106.528),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.425, 1.543),\n     \"Inclination_radians\": gaussian(1.335, 0.777),\n     \"Users\": categorical([0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.167, 0.167, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.896, 25.141),\n     \"Apogee_km\": gaussian(3620.667, 7219.413),\n     \"Perigee_km\": gaussian(438.222, 594.004),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(127.360, 73.871),\n     \"Inclination_radians\": gaussian(1.555, 1.821),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.007, 0.021),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.101, 0.288),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.548, 0.387, 0.032, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4110.935, 1725.034),\n     \"Apogee_km\": gaussian(34453.932, 7506.857),\n     \"Perigee_km\": gaussian(35087.651, 6539.945),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1285.786, 433.156),\n     \"Inclination_radians\": gaussian(0.086, 0.357),\n     \"Users\": categorical([0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(53.767, 111.772),\n     \"Apogee_km\": gaussian(737.781, 132.348),\n     \"Perigee_km\": gaussian(543.536, 102.035),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.395, 1.481),\n     \"Inclination_radians\": gaussian(1.352, 0.763),\n     \"Users\": categorical([0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.167, 0.167, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.482, 5.354),\n     \"Apogee_km\": gaussian(710.626, 2.704),\n     \"Perigee_km\": gaussian(670.004, 3.130),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.938, 2.383),\n     \"Inclination_radians\": gaussian(1.685, 0.736),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.075, 15.006),\n     \"Apogee_km\": gaussian(3333.907, 7975.957),\n     \"Perigee_km\": gaussian(397.653, 421.323),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(135.409, 62.163),\n     \"Inclination_radians\": gaussian(1.443, 0.772),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.032, 0.968]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.121, 0.296)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.023)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.387, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.533, 3.022),\n     \"Apogee_km\": gaussian(709.885, 3.743),\n     \"Perigee_km\": gaussian(670.232, 2.467),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.601, 13.827),\n     \"Inclination_radians\": gaussian(1.709, 0.748),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(63.809, 113.847),\n     \"Apogee_km\": gaussian(730.408, 138.439),\n     \"Perigee_km\": gaussian(538.759, 106.821),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.468, 1.552),\n     \"Inclination_radians\": gaussian(1.386, 0.722),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3945.842, 1966.995),\n     \"Apogee_km\": gaussian(34598.311, 6800.658),\n     \"Perigee_km\": gaussian(34400.379, 6575.049),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1276.761, 476.803),\n     \"Inclination_radians\": gaussian(0.104, 0.347),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.597, 52.462),\n     \"Apogee_km\": gaussian(3992.643, 6443.005),\n     \"Perigee_km\": gaussian(409.412, 461.258),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(125.139, 73.486),\n     \"Inclination_radians\": gaussian(1.442, 0.753),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.005, 0.024),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.194, 0.401),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.387, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.351, 8.004),\n     \"Apogee_km\": gaussian(710.461, 2.702),\n     \"Perigee_km\": gaussian(670.866, 3.101),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.573, 1.041),\n     \"Inclination_radians\": gaussian(1.660, 0.918),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(57.550, 117.871),\n     \"Apogee_km\": gaussian(717.015, 136.453),\n     \"Perigee_km\": gaussian(537.259, 98.460),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.446, 1.419),\n     \"Inclination_radians\": gaussian(1.363, 0.741),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4120.075, 1836.681),\n     \"Apogee_km\": gaussian(34885.849, 6038.940),\n     \"Perigee_km\": gaussian(34856.897, 6305.915),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1252.218, 431.631),\n     \"Inclination_radians\": gaussian(0.116, 0.352),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(113.885, 31.081),\n     \"Apogee_km\": gaussian(4314.264, 7083.533),\n     \"Perigee_km\": gaussian(440.550, 557.796),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(128.817, 61.807),\n     \"Inclination_radians\": gaussian(1.467, 0.489),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.021)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.189, 0.268)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.020, 0.020, 0.204, 0.020, 0.020, 0.020, 0.020, 0.122, 0.265, 0.020, 0.020, 0.020, 0.020, 0.102, 0.020, 0.020, 0.041, 0.020])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.387, 0.032, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.650, 112.373),\n     \"Apogee_km\": gaussian(736.567, 139.763),\n     \"Perigee_km\": gaussian(538.563, 101.451),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.483, 1.539),\n     \"Inclination_radians\": gaussian(1.397, 0.738),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.513, 2.058),\n     \"Apogee_km\": gaussian(710.173, 3.535),\n     \"Perigee_km\": gaussian(669.989, 2.028),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.170, 2.361),\n     \"Inclination_radians\": gaussian(1.710, 0.461),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4152.225, 1862.210),\n     \"Apogee_km\": gaussian(34182.226, 7478.117),\n     \"Perigee_km\": gaussian(34790.486, 6251.595),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1312.115, 436.329),\n     \"Inclination_radians\": gaussian(0.118, 0.324),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.932, 15.569),\n     \"Apogee_km\": gaussian(3077.781, 10299.664),\n     \"Perigee_km\": gaussian(397.032, 427.961),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(124.767, 142.676),\n     \"Inclination_radians\": gaussian(1.442, 0.471),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.022),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.148, 0.339),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.548, 0.032, 0.387]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.315, 41.264),\n     \"Apogee_km\": gaussian(4025.030, 6358.798),\n     \"Perigee_km\": gaussian(384.345, 714.163),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(132.928, 82.296),\n     \"Inclination_radians\": gaussian(1.402, 1.229),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4128.438, 1811.255),\n     \"Apogee_km\": gaussian(34607.791, 7311.883),\n     \"Perigee_km\": gaussian(34634.624, 6026.154),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1288.255, 442.327),\n     \"Inclination_radians\": gaussian(0.098, 0.341),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.189, 2.808),\n     \"Apogee_km\": gaussian(711.861, 23.302),\n     \"Perigee_km\": gaussian(670.306, 2.119),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.675, 2.377),\n     \"Inclination_radians\": gaussian(1.716, 1.467),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.115, 112.067),\n     \"Apogee_km\": gaussian(729.011, 128.600),\n     \"Perigee_km\": gaussian(536.668, 100.976),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.394, 1.450),\n     \"Inclination_radians\": gaussian(1.360, 0.781),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.022),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021]),\n     \"Launch_Site\": categorical([0.055, 0.018, 0.018, 0.164, 0.018, 0.018, 0.109, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.200, 0.036, 0.018, 0.055, 0.018])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.130, 0.274),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.548, 0.032, 0.387]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.571, 4.078),\n     \"Apogee_km\": gaussian(4391.530, 5386.665),\n     \"Perigee_km\": gaussian(406.001, 775.672),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(131.525, 75.886),\n     \"Inclination_radians\": gaussian(1.469, 0.453),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4057.544, 1789.869),\n     \"Apogee_km\": gaussian(34697.229, 6485.740),\n     \"Perigee_km\": gaussian(34349.459, 6415.720),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1294.324, 419.924),\n     \"Inclination_radians\": gaussian(0.127, 0.346),\n     \"Users\": categorical([0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.199, 0.841),\n     \"Apogee_km\": gaussian(710.298, 1.809),\n     \"Perigee_km\": gaussian(670.021, 1.092),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.629, 0.999),\n     \"Inclination_radians\": gaussian(1.712, 0.426),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(57.703, 120.592),\n     \"Apogee_km\": gaussian(731.928, 138.945),\n     \"Perigee_km\": gaussian(537.776, 109.001),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.396, 1.393),\n     \"Inclination_radians\": gaussian(1.352, 0.731),\n     \"Users\": categorical([0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.167, 0.167, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.022),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.138, 0.418),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.548, 0.387, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.122, 1.963),\n     \"Apogee_km\": gaussian(710.205, 1.860),\n     \"Perigee_km\": gaussian(670.380, 3.055),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.750, 10.671),\n     \"Inclination_radians\": gaussian(1.660, 0.874),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4215.147, 1855.819),\n     \"Apogee_km\": gaussian(34549.273, 6312.077),\n     \"Perigee_km\": gaussian(34159.277, 7762.730),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1280.169, 422.699),\n     \"Inclination_radians\": gaussian(0.145, 0.404),\n     \"Users\": categorical([0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.257, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(56.116, 109.253),\n     \"Apogee_km\": gaussian(735.457, 138.539),\n     \"Perigee_km\": gaussian(543.803, 107.078),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.581, 1.529),\n     \"Inclination_radians\": gaussian(1.412, 0.740),\n     \"Users\": categorical([0.033, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.167, 0.167, 0.033, 0.033, 0.033, 0.033, 0.133, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.879, 35.117),\n     \"Apogee_km\": gaussian(3952.359, 7426.030),\n     \"Perigee_km\": gaussian(425.841, 844.694),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(131.766, 68.879),\n     \"Inclination_radians\": gaussian(1.529, 0.996),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.023)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.148, 0.292)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.387, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.436, 53.039),\n     \"Apogee_km\": gaussian(3288.409, 9640.579),\n     \"Perigee_km\": gaussian(408.997, 895.158),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(124.853, 188.933),\n     \"Inclination_radians\": gaussian(1.496, 0.687),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(62.919, 114.526),\n     \"Apogee_km\": gaussian(730.562, 138.994),\n     \"Perigee_km\": gaussian(541.744, 102.860),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.503, 1.460),\n     \"Inclination_radians\": gaussian(1.361, 0.783),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4158.334, 1813.637),\n     \"Apogee_km\": gaussian(33568.953, 9734.953),\n     \"Perigee_km\": gaussian(34922.694, 6396.406),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1259.365, 458.383),\n     \"Inclination_radians\": gaussian(0.129, 0.338),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.974, 3.241),\n     \"Apogee_km\": gaussian(710.230, 1.328),\n     \"Perigee_km\": gaussian(670.391, 2.395),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.751, 0.856),\n     \"Inclination_radians\": gaussian(1.724, 0.530),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.006, 0.022),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.150, 0.336),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.548, 0.032, 0.387, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4032.488, 1891.231),\n     \"Apogee_km\": gaussian(35040.497, 6446.034),\n     \"Perigee_km\": gaussian(34927.829, 6457.417),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1296.665, 443.886),\n     \"Inclination_radians\": gaussian(0.110, 0.371),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.021, 2.110),\n     \"Apogee_km\": gaussian(710.103, 2.611),\n     \"Perigee_km\": gaussian(670.113, 1.026),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.957, 1.638),\n     \"Inclination_radians\": gaussian(1.690, 0.702),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(58.040, 115.573),\n     \"Apogee_km\": gaussian(729.919, 138.165),\n     \"Perigee_km\": gaussian(538.119, 105.027),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.359, 1.403),\n     \"Inclination_radians\": gaussian(1.374, 0.742),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(112.682, 34.245),\n     \"Apogee_km\": gaussian(4207.935, 6799.108),\n     \"Perigee_km\": gaussian(433.646, 534.947),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(137.920, 59.081),\n     \"Inclination_radians\": gaussian(1.408, 0.851),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.006, 0.021)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.190, 0.257)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.020, 0.020, 0.204, 0.020, 0.020, 0.020, 0.020, 0.122, 0.265, 0.020, 0.020, 0.020, 0.020, 0.102, 0.020, 0.020, 0.041, 0.020])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.164, 0.009, 0.009, 0.018, 0.009, 0.045, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.387, 0.548, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.715, 1.628),\n     \"Apogee_km\": gaussian(710.334, 2.165),\n     \"Perigee_km\": gaussian(670.002, 2.233),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.597, 1.753),\n     \"Inclination_radians\": gaussian(1.704, 0.899),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(63.641, 115.758),\n     \"Apogee_km\": gaussian(730.204, 136.026),\n     \"Perigee_km\": gaussian(541.720, 103.343),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.423, 1.327),\n     \"Inclination_radians\": gaussian(1.342, 0.787),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3822.985, 2137.168),\n     \"Apogee_km\": gaussian(34785.115, 6371.009),\n     \"Perigee_km\": gaussian(34826.458, 6417.310),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.190, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016]),\n     \"Period_minutes\": gaussian(1284.748, 476.411),\n     \"Inclination_radians\": gaussian(0.125, 0.393),\n     \"Class_of_Orbit\": categorical([0.048, 0.857, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.262, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.727, 8.045),\n     \"Apogee_km\": gaussian(4315.836, 7393.089),\n     \"Perigee_km\": gaussian(415.417, 533.165),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(125.124, 77.211),\n     \"Inclination_radians\": gaussian(1.429, 1.001),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.968, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.165, 0.009, 0.009, 0.018, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Eccentricity\": gaussian(0.007, 0.021),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Users\": categorical([0.021, 0.021, 0.208, 0.021, 0.021, 0.021, 0.021, 0.125, 0.271, 0.021, 0.021, 0.021, 0.021, 0.083, 0.021, 0.021, 0.042, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.159, 0.277),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.317, 0.024, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.375, 111.332),\n     \"Apogee_km\": gaussian(725.177, 129.776),\n     \"Perigee_km\": gaussian(548.378, 102.365),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.433, 1.342),\n     \"Inclination_radians\": gaussian(1.390, 0.775),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.980, 4.231),\n     \"Apogee_km\": gaussian(709.992, 1.665),\n     \"Perigee_km\": gaussian(670.996, 4.357),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.682, 1.302),\n     \"Inclination_radians\": gaussian(1.668, 0.892),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3805.100, 1765.532),\n     \"Apogee_km\": gaussian(35070.345, 5144.959),\n     \"Perigee_km\": gaussian(35071.420, 5114.690),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1370.789, 331.113),\n     \"Inclination_radians\": gaussian(0.082, 0.287),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(111.531, 207.144),\n     \"Apogee_km\": gaussian(4051.096, 6306.633),\n     \"Perigee_km\": gaussian(414.766, 474.228),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(134.601, 60.359),\n     \"Inclination_radians\": gaussian(1.439, 0.855),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.004, 0.019)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.178, 0.346)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.317, 0.634, 0.024, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.860, 111.144),\n     \"Apogee_km\": gaussian(733.246, 131.331),\n     \"Perigee_km\": gaussian(554.700, 105.243),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.455, 1.321),\n     \"Inclination_radians\": gaussian(1.385, 0.714),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3945.964, 1793.040),\n     \"Apogee_km\": gaussian(35042.566, 4917.169),\n     \"Perigee_km\": gaussian(35037.878, 5115.252),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1347.411, 346.693),\n     \"Inclination_radians\": gaussian(0.075, 0.251),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.555, 39.137),\n     \"Apogee_km\": gaussian(3968.152, 7477.871),\n     \"Perigee_km\": gaussian(401.750, 482.542),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(132.016, 69.099),\n     \"Inclination_radians\": gaussian(1.452, 0.509),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.276, 3.155),\n     \"Apogee_km\": gaussian(709.941, 2.384),\n     \"Perigee_km\": gaussian(671.531, 4.671),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.752, 2.472),\n     \"Inclination_radians\": gaussian(1.681, 0.395),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.005, 0.018),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.157, 0.425),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.634, 0.317, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.242, 2.933),\n     \"Apogee_km\": gaussian(710.192, 3.443),\n     \"Perigee_km\": gaussian(670.490, 3.883),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.703, 2.291),\n     \"Inclination_radians\": gaussian(1.680, 1.110),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3980.078, 1673.177),\n     \"Apogee_km\": gaussian(35163.104, 5142.017),\n     \"Perigee_km\": gaussian(34948.989, 4967.112),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1319.102, 364.434),\n     \"Inclination_radians\": gaussian(0.077, 0.268),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(70.357, 107.354),\n     \"Apogee_km\": gaussian(725.405, 128.056),\n     \"Perigee_km\": gaussian(549.941, 103.231),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.461, 1.401),\n     \"Inclination_radians\": gaussian(1.367, 0.727),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.236, 217.594),\n     \"Apogee_km\": gaussian(3970.145, 5620.674),\n     \"Perigee_km\": gaussian(387.265, 665.411),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(124.994, 75.324),\n     \"Inclination_radians\": gaussian(1.451, 0.942),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.006, 0.019),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.175, 0.312),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.317, 0.024, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.868, 110.389),\n     \"Apogee_km\": gaussian(725.268, 131.481),\n     \"Perigee_km\": gaussian(548.690, 103.486),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.502, 1.364),\n     \"Inclination_radians\": gaussian(1.389, 0.729),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.158, 2.810),\n     \"Apogee_km\": gaussian(711.078, 4.260),\n     \"Perigee_km\": gaussian(670.339, 3.487),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.793, 1.600),\n     \"Inclination_radians\": gaussian(1.749, 0.996),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4085.607, 1670.451),\n     \"Apogee_km\": gaussian(35190.046, 4796.910),\n     \"Perigee_km\": gaussian(35044.017, 5161.126),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1366.265, 357.964),\n     \"Inclination_radians\": gaussian(0.066, 0.275),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.909, 14.680),\n     \"Apogee_km\": gaussian(4143.492, 5403.244),\n     \"Perigee_km\": gaussian(394.367, 452.198),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(130.550, 67.369),\n     \"Inclination_radians\": gaussian(1.398, 1.103),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.005, 0.018),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.151, 0.294),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.634, 0.317, 0.024, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4027.570, 1817.170),\n     \"Apogee_km\": gaussian(35251.382, 4938.217),\n     \"Perigee_km\": gaussian(35233.802, 5127.081),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1304.902, 370.296),\n     \"Inclination_radians\": gaussian(0.083, 0.257),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(63.088, 111.721),\n     \"Apogee_km\": gaussian(729.067, 130.241),\n     \"Perigee_km\": gaussian(557.130, 106.610),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.501, 1.359),\n     \"Inclination_radians\": gaussian(1.371, 0.713),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.197, 26.384),\n     \"Apogee_km\": gaussian(4202.321, 7431.398),\n     \"Perigee_km\": gaussian(416.796, 825.234),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(131.330, 95.070),\n     \"Inclination_radians\": gaussian(1.446, 0.518),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.413, 2.421),\n     \"Apogee_km\": gaussian(710.349, 3.303),\n     \"Perigee_km\": gaussian(670.292, 2.562),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.573, 0.487),\n     \"Inclination_radians\": gaussian(1.713, 0.265),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.005, 0.019)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.113, 0.322)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.634, 0.317, 0.024, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3905.488, 1837.446),\n     \"Apogee_km\": gaussian(34863.157, 5479.026),\n     \"Perigee_km\": gaussian(35207.711, 4939.913),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1336.631, 350.516),\n     \"Inclination_radians\": gaussian(0.090, 0.291),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(60.156, 111.685),\n     \"Apogee_km\": gaussian(731.142, 125.886),\n     \"Perigee_km\": gaussian(546.512, 99.386),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.577, 1.484),\n     \"Inclination_radians\": gaussian(1.418, 0.730),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.161, 0.921),\n     \"Apogee_km\": gaussian(710.026, 1.515),\n     \"Perigee_km\": gaussian(670.196, 1.586),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.945, 1.610),\n     \"Inclination_radians\": gaussian(1.716, 1.224),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(113.748, 41.124),\n     \"Apogee_km\": gaussian(3519.991, 8820.086),\n     \"Perigee_km\": gaussian(411.889, 592.076),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(129.508, 61.021),\n     \"Inclination_radians\": gaussian(1.428, 1.208),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.024, 0.976]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.188, 0.242),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.004, 0.021),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.317, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.379, 8.372),\n     \"Apogee_km\": gaussian(710.330, 4.700),\n     \"Perigee_km\": gaussian(670.486, 4.359),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.902, 2.981),\n     \"Inclination_radians\": gaussian(1.706, 0.412),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(72.560, 114.719),\n     \"Apogee_km\": gaussian(721.448, 133.600),\n     \"Perigee_km\": gaussian(553.381, 107.023),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.524, 1.459),\n     \"Inclination_radians\": gaussian(1.405, 0.733),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4070.620, 1749.749),\n     \"Apogee_km\": gaussian(35470.240, 4899.014),\n     \"Perigee_km\": gaussian(35099.398, 5132.377),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1349.336, 337.867),\n     \"Inclination_radians\": gaussian(0.076, 0.259),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(118.604, 28.474),\n     \"Apogee_km\": gaussian(4229.701, 7480.438),\n     \"Perigee_km\": gaussian(440.462, 1532.402),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(131.915, 68.559),\n     \"Inclination_radians\": gaussian(1.451, 0.491),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.004, 0.018)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.108, 0.279)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.317, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.870, 3.286),\n     \"Apogee_km\": gaussian(710.648, 1.867),\n     \"Perigee_km\": gaussian(670.457, 2.120),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.821, 1.437),\n     \"Inclination_radians\": gaussian(1.710, 0.892),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.035, 113.946),\n     \"Apogee_km\": gaussian(724.644, 130.945),\n     \"Perigee_km\": gaussian(549.695, 107.917),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.486, 1.362),\n     \"Inclination_radians\": gaussian(1.369, 0.733),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3993.717, 1659.379),\n     \"Apogee_km\": gaussian(35081.483, 5397.636),\n     \"Perigee_km\": gaussian(34859.315, 5791.817),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1345.128, 328.791),\n     \"Inclination_radians\": gaussian(0.084, 0.276),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(118.217, 25.551),\n     \"Apogee_km\": gaussian(3580.061, 9674.128),\n     \"Perigee_km\": gaussian(402.075, 515.946),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(135.226, 83.158),\n     \"Inclination_radians\": gaussian(1.410, 0.889),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.006, 0.018),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.139, 0.306),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.317, 0.610, 0.024, 0.024, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.317, 0.024, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.788, 110.593),\n     \"Apogee_km\": gaussian(724.542, 128.842),\n     \"Perigee_km\": gaussian(550.823, 104.853),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.509, 1.390),\n     \"Inclination_radians\": gaussian(1.402, 0.735),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.291, 1.595),\n     \"Apogee_km\": gaussian(710.898, 4.718),\n     \"Perigee_km\": gaussian(670.254, 2.385),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.749, 1.836),\n     \"Inclination_radians\": gaussian(1.722, 0.956),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3980.938, 1639.141),\n     \"Apogee_km\": gaussian(35019.241, 5671.378),\n     \"Perigee_km\": gaussian(34888.741, 4928.979),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1338.879, 353.457),\n     \"Inclination_radians\": gaussian(0.107, 0.351),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.839, 49.149),\n     \"Apogee_km\": gaussian(3954.095, 7380.026),\n     \"Perigee_km\": gaussian(386.152, 660.839),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(126.906, 74.476),\n     \"Inclination_radians\": gaussian(1.574, 1.302),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.006, 0.019),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.174, 0.283),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.634, 0.024, 0.317]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.453, 38.883),\n     \"Apogee_km\": gaussian(3776.959, 8118.332),\n     \"Perigee_km\": gaussian(437.631, 1014.329),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(137.588, 115.334),\n     \"Inclination_radians\": gaussian(1.496, 0.654),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3799.679, 1849.362),\n     \"Apogee_km\": gaussian(34759.838, 5186.399),\n     \"Perigee_km\": gaussian(34797.513, 4952.822),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1346.353, 347.451),\n     \"Inclination_radians\": gaussian(0.088, 0.306),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.527, 4.152),\n     \"Apogee_km\": gaussian(710.240, 1.450),\n     \"Perigee_km\": gaussian(670.801, 4.508),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.066, 5.268),\n     \"Inclination_radians\": gaussian(1.741, 0.519),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.112, 109.795),\n     \"Apogee_km\": gaussian(721.526, 134.172),\n     \"Perigee_km\": gaussian(550.210, 103.903),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.556, 1.538),\n     \"Inclination_radians\": gaussian(1.381, 0.716),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.004, 0.019)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.112, 0.281)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.119, 0.373, 0.017, 0.017, 0.017, 0.017, 0.085, 0.017, 0.017, 0.034, 0.017])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.634, 0.024, 0.317]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.008, 6.312),\n     \"Apogee_km\": gaussian(4061.100, 6137.144),\n     \"Perigee_km\": gaussian(397.339, 857.103),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(137.627, 63.211),\n     \"Inclination_radians\": gaussian(1.478, 0.758),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3840.629, 1789.715),\n     \"Apogee_km\": gaussian(35061.957, 4952.097),\n     \"Perigee_km\": gaussian(35052.109, 5163.732),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1332.556, 361.396),\n     \"Inclination_radians\": gaussian(0.059, 0.267),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.056, 0.985),\n     \"Apogee_km\": gaussian(710.125, 2.041),\n     \"Perigee_km\": gaussian(670.389, 5.814),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.909, 2.070),\n     \"Inclination_radians\": gaussian(1.710, 0.630),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.373, 109.959),\n     \"Apogee_km\": gaussian(733.091, 132.629),\n     \"Perigee_km\": gaussian(554.775, 104.210),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.578, 1.414),\n     \"Inclination_radians\": gaussian(1.374, 0.737),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.004, 0.019)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.154, 0.294)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.634, 0.317, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.684, 3.082),\n     \"Apogee_km\": gaussian(710.077, 2.358),\n     \"Perigee_km\": gaussian(670.504, 4.133),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.345, 6.049),\n     \"Inclination_radians\": gaussian(1.695, 0.250),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4037.080, 1651.107),\n     \"Apogee_km\": gaussian(35471.213, 5139.626),\n     \"Perigee_km\": gaussian(34934.400, 5010.988),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1340.073, 362.483),\n     \"Inclination_radians\": gaussian(0.090, 0.270),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(61.998, 112.433),\n     \"Apogee_km\": gaussian(722.211, 125.665),\n     \"Perigee_km\": gaussian(555.002, 107.886),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.718, 1.676),\n     \"Inclination_radians\": gaussian(1.406, 0.712),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.046, 87.814),\n     \"Apogee_km\": gaussian(3810.643, 9293.541),\n     \"Perigee_km\": gaussian(398.807, 619.790),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(131.564, 88.368),\n     \"Inclination_radians\": gaussian(1.457, 0.622),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.005, 0.018),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.188, 0.295),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.317, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.293, 9.891),\n     \"Apogee_km\": gaussian(4089.103, 10539.371),\n     \"Perigee_km\": gaussian(392.967, 469.026),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(128.990, 71.545),\n     \"Inclination_radians\": gaussian(1.466, 0.756),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.094, 109.375),\n     \"Apogee_km\": gaussian(726.812, 134.836),\n     \"Perigee_km\": gaussian(545.711, 102.640),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.548, 1.379),\n     \"Inclination_radians\": gaussian(1.404, 0.712),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3935.078, 1795.715),\n     \"Apogee_km\": gaussian(35115.642, 4824.432),\n     \"Perigee_km\": gaussian(34962.762, 5188.316),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1345.930, 363.518),\n     \"Inclination_radians\": gaussian(0.074, 0.290),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.275, 1.235),\n     \"Apogee_km\": gaussian(710.295, 2.346),\n     \"Perigee_km\": gaussian(670.498, 2.329),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.633, 0.925),\n     \"Inclination_radians\": gaussian(1.671, 0.638),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.005, 0.020),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.117, 0.441),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.200, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.634, 0.024, 0.317, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3938.889, 1717.971),\n     \"Apogee_km\": gaussian(35261.508, 5225.297),\n     \"Perigee_km\": gaussian(34962.286, 4994.561),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1326.395, 351.122),\n     \"Inclination_radians\": gaussian(0.061, 0.285),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.238, 1.863),\n     \"Apogee_km\": gaussian(710.141, 1.858),\n     \"Perigee_km\": gaussian(670.029, 0.551),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.807, 2.422),\n     \"Inclination_radians\": gaussian(1.701, 0.468),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.068, 115.163),\n     \"Apogee_km\": gaussian(725.281, 137.197),\n     \"Perigee_km\": gaussian(546.109, 109.233),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.558, 1.428),\n     \"Inclination_radians\": gaussian(1.385, 0.696),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(127.728, 237.176),\n     \"Apogee_km\": gaussian(4061.162, 6289.550),\n     \"Perigee_km\": gaussian(395.215, 492.419),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(135.080, 61.672),\n     \"Inclination_radians\": gaussian(1.452, 0.525),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.006, 0.018),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.121, 0.379, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.017, 0.034, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.138, 0.569),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.024, 0.317, 0.634, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.021, 0.889),\n     \"Apogee_km\": gaussian(710.251, 1.809),\n     \"Perigee_km\": gaussian(670.390, 2.170),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.776, 1.960),\n     \"Inclination_radians\": gaussian(1.696, 0.262),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(76.874, 104.391),\n     \"Apogee_km\": gaussian(722.690, 131.956),\n     \"Perigee_km\": gaussian(553.076, 104.796),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.490, 1.456),\n     \"Inclination_radians\": gaussian(1.406, 0.710),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3961.220, 1669.460),\n     \"Apogee_km\": gaussian(35039.685, 4908.222),\n     \"Perigee_km\": gaussian(34651.734, 5533.808),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.292, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.083, 0.014]),\n     \"Period_minutes\": gaussian(1347.258, 327.185),\n     \"Inclination_radians\": gaussian(0.091, 0.302),\n     \"Users\": categorical([0.023, 0.023, 0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.409, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023]),\n     \"Class_of_Orbit\": categorical([0.033, 0.900, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.176, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.294, 0.020, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.818, 6.787),\n     \"Apogee_km\": gaussian(3959.944, 6449.426),\n     \"Perigee_km\": gaussian(446.847, 1315.116),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(133.909, 91.777),\n     \"Inclination_radians\": gaussian(1.468, 0.604),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.976, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.202, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Eccentricity\": gaussian(0.003, 0.019)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.135, 0.454)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.255, 0.020, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(63.741, 110.234),\n     \"Apogee_km\": gaussian(732.732, 129.832),\n     \"Perigee_km\": gaussian(551.582, 105.176),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.556, 1.430),\n     \"Inclination_radians\": gaussian(1.368, 0.747),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.474, 3.354),\n     \"Apogee_km\": gaussian(710.181, 2.334),\n     \"Perigee_km\": gaussian(671.029, 8.975),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.903, 2.142),\n     \"Inclination_radians\": gaussian(1.726, 0.530),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3537.880, 1638.388),\n     \"Apogee_km\": gaussian(35250.040, 4479.368),\n     \"Perigee_km\": gaussian(35017.832, 4287.622),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1361.383, 291.209),\n     \"Inclination_radians\": gaussian(0.050, 0.224),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(113.985, 38.407),\n     \"Apogee_km\": gaussian(4156.902, 6363.757),\n     \"Perigee_km\": gaussian(417.715, 464.407),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(135.095, 66.059),\n     \"Inclination_radians\": gaussian(1.412, 0.619),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.017),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.188, 0.285),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.255, 0.706, 0.020, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(69.894, 105.478),\n     \"Apogee_km\": gaussian(723.975, 128.570),\n     \"Perigee_km\": gaussian(549.638, 108.962),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.486, 1.439),\n     \"Inclination_radians\": gaussian(1.422, 0.658),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3641.558, 1636.621),\n     \"Apogee_km\": gaussian(35164.600, 4276.079),\n     \"Perigee_km\": gaussian(35199.374, 4219.457),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1368.089, 292.376),\n     \"Inclination_radians\": gaussian(0.060, 0.235),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.413, 28.973),\n     \"Apogee_km\": gaussian(4212.809, 7164.785),\n     \"Perigee_km\": gaussian(396.813, 518.715),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(135.021, 49.085),\n     \"Inclination_radians\": gaussian(1.437, 0.558),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.756, 2.624),\n     \"Apogee_km\": gaussian(710.331, 1.764),\n     \"Perigee_km\": gaussian(670.483, 3.048),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.957, 2.099),\n     \"Inclination_radians\": gaussian(1.700, 0.384),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.003, 0.016)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.197, 0.279)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.706, 0.255, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.347, 1.516),\n     \"Apogee_km\": gaussian(710.978, 6.915),\n     \"Perigee_km\": gaussian(670.172, 5.307),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.776, 2.776),\n     \"Inclination_radians\": gaussian(1.714, 0.407),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3639.221, 1696.054),\n     \"Apogee_km\": gaussian(35218.671, 4211.916),\n     \"Perigee_km\": gaussian(35230.077, 4358.077),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1355.822, 306.646),\n     \"Inclination_radians\": gaussian(0.061, 0.220),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.570, 109.527),\n     \"Apogee_km\": gaussian(719.167, 129.678),\n     \"Perigee_km\": gaussian(549.653, 100.411),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.594, 1.461),\n     \"Inclination_radians\": gaussian(1.373, 0.714),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.524, 72.447),\n     \"Apogee_km\": gaussian(4135.403, 6709.280),\n     \"Perigee_km\": gaussian(400.268, 529.322),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(136.291, 111.242),\n     \"Inclination_radians\": gaussian(1.473, 1.073),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.017)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.126, 0.363)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.254, 0.008, 0.008, 0.015, 0.008, 0.038, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015]),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.255, 0.020, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(58.857, 110.395),\n     \"Apogee_km\": gaussian(728.068, 128.899),\n     \"Perigee_km\": gaussian(545.331, 107.570),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.492, 1.468),\n     \"Inclination_radians\": gaussian(1.427, 0.718),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.739, 3.044),\n     \"Apogee_km\": gaussian(710.149, 2.223),\n     \"Perigee_km\": gaussian(670.136, 2.105),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.782, 1.423),\n     \"Inclination_radians\": gaussian(1.695, 0.357),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3704.723, 1669.022),\n     \"Apogee_km\": gaussian(35148.268, 4393.089),\n     \"Perigee_km\": gaussian(35245.112, 4166.090),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1374.965, 277.446),\n     \"Inclination_radians\": gaussian(0.053, 0.224),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.943, 12.542),\n     \"Apogee_km\": gaussian(3809.975, 5617.519),\n     \"Perigee_km\": gaussian(430.910, 763.474),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(130.546, 70.905),\n     \"Inclination_radians\": gaussian(1.447, 0.403),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.017),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.180, 0.345),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.254, 0.008, 0.008, 0.015, 0.008, 0.038, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.706, 0.255, 0.020, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3656.627, 1786.472),\n     \"Apogee_km\": gaussian(35198.714, 4534.943),\n     \"Perigee_km\": gaussian(35422.823, 4638.040),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1364.642, 289.025),\n     \"Inclination_radians\": gaussian(0.046, 0.234),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(76.538, 110.663),\n     \"Apogee_km\": gaussian(722.568, 126.680),\n     \"Perigee_km\": gaussian(553.812, 105.611),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.449, 1.391),\n     \"Inclination_radians\": gaussian(1.372, 0.707),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.226, 147.967),\n     \"Apogee_km\": gaussian(3898.115, 6954.329),\n     \"Perigee_km\": gaussian(424.399, 487.452),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(133.379, 66.534),\n     \"Inclination_radians\": gaussian(1.452, 0.716),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.468, 5.540),\n     \"Apogee_km\": gaussian(710.258, 1.799),\n     \"Perigee_km\": gaussian(670.153, 1.816),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.580, 1.596),\n     \"Inclination_radians\": gaussian(1.690, 0.463),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.005, 0.017)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.149, 0.380)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.254, 0.008, 0.008, 0.015, 0.008, 0.038, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.706, 0.255, 0.020, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3633.017, 1643.468),\n     \"Apogee_km\": gaussian(35416.584, 4366.984),\n     \"Perigee_km\": gaussian(35225.014, 4418.479),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1366.120, 302.075),\n     \"Inclination_radians\": gaussian(0.055, 0.223),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(62.387, 111.911),\n     \"Apogee_km\": gaussian(734.629, 132.305),\n     \"Perigee_km\": gaussian(553.138, 105.502),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.490, 1.310),\n     \"Inclination_radians\": gaussian(1.402, 0.737),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.458, 4.892),\n     \"Apogee_km\": gaussian(710.127, 1.348),\n     \"Perigee_km\": gaussian(670.141, 2.434),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.536, 1.604),\n     \"Inclination_radians\": gaussian(1.721, 0.510),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.295, 108.517),\n     \"Apogee_km\": gaussian(4018.561, 9969.203),\n     \"Perigee_km\": gaussian(394.536, 502.080),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(128.772, 59.329),\n     \"Inclination_radians\": gaussian(1.438, 0.590),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.020, 0.980]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.110, 0.319),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.003, 0.017),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.255, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.972, 1.041),\n     \"Apogee_km\": gaussian(710.069, 1.473),\n     \"Perigee_km\": gaussian(671.694, 7.535),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.890, 2.882),\n     \"Inclination_radians\": gaussian(1.692, 0.494),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(67.179, 108.864),\n     \"Apogee_km\": gaussian(721.037, 126.937),\n     \"Perigee_km\": gaussian(550.026, 104.206),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.388, 1.423),\n     \"Inclination_radians\": gaussian(1.423, 0.700),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3592.225, 1785.329),\n     \"Apogee_km\": gaussian(35321.530, 4291.879),\n     \"Perigee_km\": gaussian(35180.603, 4473.162),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1380.004, 292.106),\n     \"Inclination_radians\": gaussian(0.062, 0.236),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.227, 12.060),\n     \"Apogee_km\": gaussian(4021.123, 7229.322),\n     \"Perigee_km\": gaussian(408.470, 409.851),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(124.558, 166.756),\n     \"Inclination_radians\": gaussian(1.440, 0.429),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.017)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.169, 0.443)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.255, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.051, 1.115),\n     \"Apogee_km\": gaussian(709.990, 1.691),\n     \"Perigee_km\": gaussian(671.098, 3.434),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.516, 2.265),\n     \"Inclination_radians\": gaussian(1.716, 0.189),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.745, 106.521),\n     \"Apogee_km\": gaussian(725.665, 132.349),\n     \"Perigee_km\": gaussian(552.624, 107.254),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.554, 1.354),\n     \"Inclination_radians\": gaussian(1.408, 0.703),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3500.003, 1683.521),\n     \"Apogee_km\": gaussian(35421.540, 4418.480),\n     \"Perigee_km\": gaussian(35135.404, 4245.373),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1379.236, 280.388),\n     \"Inclination_radians\": gaussian(0.058, 0.243),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.296, 28.856),\n     \"Apogee_km\": gaussian(3809.737, 8043.914),\n     \"Perigee_km\": gaussian(393.467, 656.243),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(141.148, 108.751),\n     \"Inclination_radians\": gaussian(1.460, 0.520),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.017),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.135, 0.305),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.255, 0.020, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(61.729, 109.040),\n     \"Apogee_km\": gaussian(730.852, 133.070),\n     \"Perigee_km\": gaussian(552.066, 105.024),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.527, 1.397),\n     \"Inclination_radians\": gaussian(1.352, 0.735),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.164, 4.307),\n     \"Apogee_km\": gaussian(710.043, 3.354),\n     \"Perigee_km\": gaussian(670.149, 2.101),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.963, 1.797),\n     \"Inclination_radians\": gaussian(1.690, 0.514),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3604.848, 1639.361),\n     \"Apogee_km\": gaussian(35340.264, 4194.309),\n     \"Perigee_km\": gaussian(35098.295, 4326.732),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1373.531, 297.408),\n     \"Inclination_radians\": gaussian(0.062, 0.228),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.897, 15.774),\n     \"Apogee_km\": gaussian(4074.358, 7496.629),\n     \"Perigee_km\": gaussian(404.091, 569.586),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(129.428, 62.809),\n     \"Inclination_radians\": gaussian(1.391, 0.865),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.017),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.107, 0.279),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.706, 0.020, 0.235, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.433, 21.069),\n     \"Apogee_km\": gaussian(4068.024, 7801.665),\n     \"Perigee_km\": gaussian(440.840, 506.545),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(138.716, 116.322),\n     \"Inclination_radians\": gaussian(1.459, 0.868),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3690.120, 1585.094),\n     \"Apogee_km\": gaussian(35554.607, 4048.481),\n     \"Perigee_km\": gaussian(35358.201, 4517.935),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1377.709, 299.478),\n     \"Inclination_radians\": gaussian(0.058, 0.218),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.798, 7.205),\n     \"Apogee_km\": gaussian(711.222, 5.550),\n     \"Perigee_km\": gaussian(670.187, 4.444),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.812, 1.705),\n     \"Inclination_radians\": gaussian(1.701, 0.398),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(55.948, 115.843),\n     \"Apogee_km\": gaussian(732.325, 135.370),\n     \"Perigee_km\": gaussian(544.016, 103.802),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.172, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.384, 1.511),\n     \"Inclination_radians\": gaussian(1.356, 0.737),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.054, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.081, 0.027])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(125.645, 16.606),\n     \"Apogee_km\": gaussian(690.723, 50.525),\n     \"Perigee_km\": gaussian(671.469, 2.960),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.574, 2.041),\n     \"Inclination_radians\": gaussian(1.681, 0.568),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.017),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.148, 0.300),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.706, 0.020, 0.255]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.816, 101.270),\n     \"Apogee_km\": gaussian(4070.467, 5235.389),\n     \"Perigee_km\": gaussian(408.360, 381.118),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(132.663, 55.065),\n     \"Inclination_radians\": gaussian(1.451, 0.478),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3615.970, 1582.935),\n     \"Apogee_km\": gaussian(35497.789, 4093.048),\n     \"Perigee_km\": gaussian(35128.692, 4125.440),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1357.758, 280.448),\n     \"Inclination_radians\": gaussian(0.059, 0.234),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.997, 5.179),\n     \"Apogee_km\": gaussian(710.250, 1.867),\n     \"Perigee_km\": gaussian(670.151, 1.318),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.650, 1.524),\n     \"Inclination_radians\": gaussian(1.704, 0.336),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(61.964, 108.855),\n     \"Apogee_km\": gaussian(726.316, 133.412),\n     \"Perigee_km\": gaussian(553.911, 103.346),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.485, 1.376),\n     \"Inclination_radians\": gaussian(1.403, 0.698),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.003, 0.017),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.122, 0.287),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.706, 0.255, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.373, 2.130),\n     \"Apogee_km\": gaussian(710.253, 3.074),\n     \"Perigee_km\": gaussian(670.073, 1.544),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.684, 0.536),\n     \"Inclination_radians\": gaussian(1.694, 0.468),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3654.021, 1679.555),\n     \"Apogee_km\": gaussian(35141.421, 4186.425),\n     \"Perigee_km\": gaussian(35234.764, 4267.413),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1371.938, 292.919),\n     \"Inclination_radians\": gaussian(0.054, 0.228),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.975, 104.252),\n     \"Apogee_km\": gaussian(727.308, 127.881),\n     \"Perigee_km\": gaussian(549.634, 102.015),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.558, 1.315),\n     \"Inclination_radians\": gaussian(1.415, 0.693),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.875, 44.405),\n     \"Apogee_km\": gaussian(4041.649, 7241.460),\n     \"Perigee_km\": gaussian(353.140, 637.563),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(133.457, 57.207),\n     \"Inclination_radians\": gaussian(1.470, 0.820),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.961, 0.020, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.258, 0.008, 0.008, 0.008, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.003, 0.017),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Users\": categorical([0.015, 0.015, 0.149, 0.015, 0.015, 0.015, 0.030, 0.104, 0.463, 0.015, 0.015, 0.015, 0.015, 0.060, 0.015, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.180, 0.451),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(-0.001, 0.171),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.255, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.424, 15.155),\n     \"Apogee_km\": gaussian(3930.298, 7795.871),\n     \"Perigee_km\": gaussian(382.696, 470.434),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(133.648, 69.131),\n     \"Inclination_radians\": gaussian(1.461, 0.561),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(64.129, 112.423),\n     \"Apogee_km\": gaussian(732.079, 134.898),\n     \"Perigee_km\": gaussian(552.263, 106.466),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.460, 1.331),\n     \"Inclination_radians\": gaussian(1.418, 0.751),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3607.680, 1635.931),\n     \"Apogee_km\": gaussian(35255.888, 4497.910),\n     \"Perigee_km\": gaussian(35184.240, 4163.533),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1367.163, 296.025),\n     \"Inclination_radians\": gaussian(0.065, 0.227),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.267, 3.441),\n     \"Apogee_km\": gaussian(710.304, 3.220),\n     \"Perigee_km\": gaussian(670.292, 2.602),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.895, 2.268),\n     \"Inclination_radians\": gaussian(1.727, 0.412),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.016),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.142, 0.279),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.549, 0.412, 0.039]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.706, 0.020, 0.255, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3540.364, 1694.365),\n     \"Apogee_km\": gaussian(35216.473, 4164.949),\n     \"Perigee_km\": gaussian(35250.618, 4428.281),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1371.335, 303.728),\n     \"Inclination_radians\": gaussian(0.053, 0.270),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.252, 1.910),\n     \"Apogee_km\": gaussian(710.563, 2.756),\n     \"Perigee_km\": gaussian(671.341, 4.375),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.686, 1.962),\n     \"Inclination_radians\": gaussian(1.654, 0.991),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(64.291, 113.800),\n     \"Apogee_km\": gaussian(732.674, 128.394),\n     \"Perigee_km\": gaussian(557.174, 106.239),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.554, 1.416),\n     \"Inclination_radians\": gaussian(1.391, 0.735),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.135, 22.513),\n     \"Apogee_km\": gaussian(4047.754, 7276.443),\n     \"Perigee_km\": gaussian(417.735, 578.735),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(130.679, 54.761),\n     \"Inclination_radians\": gaussian(1.399, 1.159),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.004, 0.018),\n     \"Users\": categorical([0.015, 0.015, 0.147, 0.015, 0.015, 0.015, 0.029, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.198, 0.313),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.020, 0.255, 0.706, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.219, 1.633),\n     \"Apogee_km\": gaussian(710.377, 1.957),\n     \"Perigee_km\": gaussian(670.195, 4.696),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.765, 1.515),\n     \"Inclination_radians\": gaussian(1.702, 0.230),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(74.789, 112.237),\n     \"Apogee_km\": gaussian(726.700, 131.260),\n     \"Perigee_km\": gaussian(553.504, 107.112),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.169, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(97.439, 1.353),\n     \"Inclination_radians\": gaussian(1.369, 0.727),\n     \"Users\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.194, 0.161, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.211, 0.026, 0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3630.274, 1656.889),\n     \"Apogee_km\": gaussian(35286.385, 4154.493),\n     \"Perigee_km\": gaussian(35351.134, 4288.552),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.073, 0.012]),\n     \"Period_minutes\": gaussian(1371.771, 281.211),\n     \"Inclination_radians\": gaussian(0.056, 0.224),\n     \"Users\": categorical([0.019, 0.019, 0.167, 0.019, 0.019, 0.019, 0.037, 0.019, 0.500, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019]),\n     \"Class_of_Orbit\": categorical([0.025, 0.925, 0.025, 0.025]),\n     \"Launch_Site\": categorical([0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.246, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.262, 0.016, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(122.305, 817.157),\n     \"Apogee_km\": gaussian(4054.387, 5668.253),\n     \"Perigee_km\": gaussian(379.550, 551.661),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(132.738, 64.568),\n     \"Inclination_radians\": gaussian(1.408, 0.619),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.200, 0.400, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.980, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.256, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Eccentricity\": gaussian(0.003, 0.016)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.203, 0.350)\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.218, 0.010, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(45.258, 85.328),\n     \"Apogee_km\": gaussian(694.120, 128.432),\n     \"Perigee_km\": gaussian(572.298, 102.752),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.542, 1.902),\n     \"Inclination_radians\": gaussian(1.478, 0.563),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.654, 9.849),\n     \"Apogee_km\": gaussian(710.782, 3.013),\n     \"Perigee_km\": gaussian(670.760, 3.327),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.827, 4.213),\n     \"Inclination_radians\": gaussian(1.696, 0.226),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3657.412, 1504.125),\n     \"Apogee_km\": gaussian(35582.193, 2834.773),\n     \"Perigee_km\": gaussian(35544.663, 2898.283),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1409.773, 197.360),\n     \"Inclination_radians\": gaussian(0.029, 0.162),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(76.433, 77.110),\n     \"Apogee_km\": gaussian(2401.446, 2979.061),\n     \"Perigee_km\": gaussian(874.014, 712.522),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.181, 26.798),\n     \"Inclination_radians\": gaussian(1.617, 0.276),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.145, 0.400),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.218, 0.743, 0.030, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(42.929, 84.066),\n     \"Apogee_km\": gaussian(705.815, 129.432),\n     \"Perigee_km\": gaussian(570.689, 98.137),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.489, 1.782),\n     \"Inclination_radians\": gaussian(1.450, 0.591),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3721.890, 1438.848),\n     \"Apogee_km\": gaussian(35487.248, 2943.583),\n     \"Perigee_km\": gaussian(35777.118, 2848.584),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1393.517, 206.607),\n     \"Inclination_radians\": gaussian(0.031, 0.154),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(69.777, 57.282),\n     \"Apogee_km\": gaussian(2374.256, 2864.485),\n     \"Perigee_km\": gaussian(862.349, 666.127),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.108, 28.344),\n     \"Inclination_radians\": gaussian(1.621, 0.306),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.343, 2.083),\n     \"Apogee_km\": gaussian(710.772, 2.555),\n     \"Perigee_km\": gaussian(670.026, 3.973),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.891, 1.577),\n     \"Inclination_radians\": gaussian(1.725, 0.385),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.101, 0.929),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.010, 0.743, 0.218, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.398, 1.573),\n     \"Apogee_km\": gaussian(711.218, 4.593),\n     \"Perigee_km\": gaussian(669.934, 2.210),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.751, 2.298),\n     \"Inclination_radians\": gaussian(1.711, 0.354),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3706.767, 1438.394),\n     \"Apogee_km\": gaussian(35517.760, 2824.335),\n     \"Perigee_km\": gaussian(35454.309, 2934.061),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1400.813, 202.589),\n     \"Inclination_radians\": gaussian(0.031, 0.146),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(44.365, 88.255),\n     \"Apogee_km\": gaussian(700.026, 127.129),\n     \"Perigee_km\": gaussian(567.242, 95.592),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.464, 1.643),\n     \"Inclination_radians\": gaussian(1.491, 0.558),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(64.884, 59.655),\n     \"Apogee_km\": gaussian(2589.996, 3114.206),\n     \"Perigee_km\": gaussian(867.171, 637.458),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.938, 29.925),\n     \"Inclination_radians\": gaussian(1.610, 0.335),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.175, 0.314),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.218, 0.010, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(43.872, 85.073),\n     \"Apogee_km\": gaussian(699.026, 128.953),\n     \"Perigee_km\": gaussian(564.774, 95.003),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.522, 1.654),\n     \"Inclination_radians\": gaussian(1.511, 0.572),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.396, 2.998),\n     \"Apogee_km\": gaussian(710.021, 2.882),\n     \"Perigee_km\": gaussian(671.056, 4.438),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.655, 1.190),\n     \"Inclination_radians\": gaussian(1.706, 0.241),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3828.494, 1448.902),\n     \"Apogee_km\": gaussian(35612.123, 2939.387),\n     \"Perigee_km\": gaussian(35454.422, 2924.391),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1407.052, 203.024),\n     \"Inclination_radians\": gaussian(0.041, 0.157),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(60.210, 62.463),\n     \"Apogee_km\": gaussian(2512.389, 3355.335),\n     \"Perigee_km\": gaussian(837.849, 654.482),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.821, 30.340),\n     \"Inclination_radians\": gaussian(1.615, 0.284),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.120, 0.441),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.743, 0.208, 0.030, 0.010, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3741.088, 1461.530),\n     \"Apogee_km\": gaussian(35514.925, 2791.132),\n     \"Perigee_km\": gaussian(35445.383, 2949.012),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1404.974, 203.864),\n     \"Inclination_radians\": gaussian(0.037, 0.164),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(37.120, 88.640),\n     \"Apogee_km\": gaussian(698.346, 136.924),\n     \"Perigee_km\": gaussian(565.256, 100.740),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.104, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.164, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.511, 1.735),\n     \"Inclination_radians\": gaussian(1.513, 0.596),\n     \"Class_of_Orbit\": categorical([0.880, 0.040, 0.040, 0.040]),\n     \"Launch_Site\": categorical([0.130, 0.022, 0.022, 0.174, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022, 0.109, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.065, 0.022])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.831, 61.094),\n     \"Apogee_km\": gaussian(2354.538, 3276.715),\n     \"Perigee_km\": gaussian(879.404, 704.476),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.735, 29.712),\n     \"Inclination_radians\": gaussian(1.616, 0.307),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.033, 8.026),\n     \"Apogee_km\": gaussian(710.315, 1.567),\n     \"Perigee_km\": gaussian(670.651, 2.927),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.825, 1.522),\n     \"Inclination_radians\": gaussian(1.726, 0.396),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(125.487, 18.225),\n     \"Apogee_km\": gaussian(686.353, 43.607),\n     \"Perigee_km\": gaussian(672.022, 2.726),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.511, 2.070),\n     \"Inclination_radians\": gaussian(1.702, 0.482),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.142, 1.455),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.743, 0.218, 0.010, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3704.158, 1430.141),\n     \"Apogee_km\": gaussian(35390.591, 2800.808),\n     \"Perigee_km\": gaussian(35545.176, 2830.118),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1407.738, 198.769),\n     \"Inclination_radians\": gaussian(0.029, 0.161),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.600, 87.297),\n     \"Apogee_km\": gaussian(698.057, 127.344),\n     \"Perigee_km\": gaussian(560.686, 96.239),\n     \"Type_of_Orbit\": categorical([0.667, 0.056, 0.056, 0.056, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.583, 1.782),\n     \"Inclination_radians\": gaussian(1.490, 0.605),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.599, 5.589),\n     \"Apogee_km\": gaussian(710.349, 2.710),\n     \"Perigee_km\": gaussian(670.005, 1.547),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.121, 4.363),\n     \"Inclination_radians\": gaussian(1.708, 0.543),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.727, 67.712),\n     \"Apogee_km\": gaussian(2477.650, 3101.610),\n     \"Perigee_km\": gaussian(878.280, 649.645),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.426, 27.647),\n     \"Inclination_radians\": gaussian(1.605, 0.334),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.010, 0.990]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.182, 0.316),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.010, 0.218, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.056, 1.548),\n     \"Apogee_km\": gaussian(710.710, 4.100),\n     \"Perigee_km\": gaussian(671.346, 7.911),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.022, 3.241),\n     \"Inclination_radians\": gaussian(1.697, 0.456),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(41.905, 88.291),\n     \"Apogee_km\": gaussian(698.841, 129.252),\n     \"Perigee_km\": gaussian(574.168, 97.222),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.592, 1.744),\n     \"Inclination_radians\": gaussian(1.476, 0.571),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3787.475, 1531.093),\n     \"Apogee_km\": gaussian(35767.652, 2909.698),\n     \"Perigee_km\": gaussian(35596.230, 2919.379),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1406.988, 205.077),\n     \"Inclination_radians\": gaussian(0.039, 0.162),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(65.554, 58.991),\n     \"Apogee_km\": gaussian(2502.495, 2785.367),\n     \"Perigee_km\": gaussian(839.115, 735.805),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.745, 28.234),\n     \"Inclination_radians\": gaussian(1.622, 0.296),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.193, 0.359),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.010, 0.218, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.008, 1.680),\n     \"Apogee_km\": gaussian(710.109, 2.384),\n     \"Perigee_km\": gaussian(669.544, 16.850),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.257, 2.684),\n     \"Inclination_radians\": gaussian(1.703, 0.323),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(44.352, 90.681),\n     \"Apogee_km\": gaussian(704.359, 126.687),\n     \"Perigee_km\": gaussian(572.944, 98.344),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.526, 1.629),\n     \"Inclination_radians\": gaussian(1.471, 0.593),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3780.470, 1508.440),\n     \"Apogee_km\": gaussian(35434.134, 2904.531),\n     \"Perigee_km\": gaussian(35641.566, 2851.816),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1404.865, 190.497),\n     \"Inclination_radians\": gaussian(0.035, 0.154),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.780, 62.360),\n     \"Apogee_km\": gaussian(2230.915, 3052.719),\n     \"Perigee_km\": gaussian(880.835, 664.868),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(121.166, 26.998),\n     \"Inclination_radians\": gaussian(1.629, 0.287),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.149, 0.535),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.218, 0.010, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(47.656, 90.956),\n     \"Apogee_km\": gaussian(704.222, 129.916),\n     \"Perigee_km\": gaussian(574.987, 100.782),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.484, 1.663),\n     \"Inclination_radians\": gaussian(1.503, 0.574),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.981, 2.576),\n     \"Apogee_km\": gaussian(710.244, 2.446),\n     \"Perigee_km\": gaussian(670.088, 1.289),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.537, 1.022),\n     \"Inclination_radians\": gaussian(1.699, 0.553),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3736.029, 1554.953),\n     \"Apogee_km\": gaussian(35510.027, 2902.531),\n     \"Perigee_km\": gaussian(35526.529, 2921.128),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1401.577, 210.033),\n     \"Inclination_radians\": gaussian(0.036, 0.160),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(72.207, 81.139),\n     \"Apogee_km\": gaussian(2521.822, 3098.351),\n     \"Perigee_km\": gaussian(845.537, 664.226),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.133, 27.648),\n     \"Inclination_radians\": gaussian(1.625, 0.384),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.088, 0.424),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Users\": categorical([0.008, 0.008, 0.084, 0.008, 0.008, 0.008, 0.042, 0.084, 0.605, 0.008, 0.008, 0.017, 0.008, 0.050, 0.008, 0.008, 0.025, 0.008])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.030, 0.743, 0.010, 0.218]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(74.136, 71.643),\n     \"Apogee_km\": gaussian(2532.697, 2937.211),\n     \"Perigee_km\": gaussian(851.417, 685.355),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.348, 32.442),\n     \"Inclination_radians\": gaussian(1.612, 0.308),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3709.279, 1549.208),\n     \"Apogee_km\": gaussian(35536.278, 2980.551),\n     \"Perigee_km\": gaussian(35547.749, 2958.616),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1406.379, 203.482),\n     \"Inclination_radians\": gaussian(0.037, 0.154),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.352, 1.833),\n     \"Apogee_km\": gaussian(710.093, 2.132),\n     \"Perigee_km\": gaussian(670.235, 4.729),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.874, 5.819),\n     \"Inclination_radians\": gaussian(1.703, 0.416),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(45.182, 84.245),\n     \"Apogee_km\": gaussian(705.103, 125.072),\n     \"Perigee_km\": gaussian(570.337, 100.381),\n     \"Type_of_Orbit\": categorical([0.667, 0.056, 0.056, 0.056, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.480, 1.656),\n     \"Inclination_radians\": gaussian(1.497, 0.573),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.004, 0.012),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.085, 0.745),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.030, 0.743, 0.010, 0.208, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(62.473, 54.941),\n     \"Apogee_km\": gaussian(2498.031, 2916.223),\n     \"Perigee_km\": gaussian(842.529, 755.774),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(118.676, 29.765),\n     \"Inclination_radians\": gaussian(1.626, 0.326),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3744.589, 1507.008),\n     \"Apogee_km\": gaussian(35729.533, 2704.640),\n     \"Perigee_km\": gaussian(35451.748, 2838.825),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1410.286, 186.676),\n     \"Inclination_radians\": gaussian(0.034, 0.153),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.896, 3.985),\n     \"Apogee_km\": gaussian(710.074, 1.821),\n     \"Perigee_km\": gaussian(669.984, 1.724),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.852, 1.449),\n     \"Inclination_radians\": gaussian(1.709, 0.295),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.699, 83.402),\n     \"Apogee_km\": gaussian(700.363, 128.488),\n     \"Perigee_km\": gaussian(566.268, 96.409),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.104, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.164, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.390, 1.734),\n     \"Inclination_radians\": gaussian(1.488, 0.583),\n     \"Class_of_Orbit\": categorical([0.880, 0.040, 0.040, 0.040]),\n     \"Launch_Site\": categorical([0.130, 0.022, 0.022, 0.174, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022, 0.109, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.065, 0.022])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(126.404, 14.913),\n     \"Apogee_km\": gaussian(682.345, 49.488),\n     \"Perigee_km\": gaussian(671.477, 4.080),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.656, 1.716),\n     \"Inclination_radians\": gaussian(1.708, 0.380),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.003, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.169, 0.392),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.010, 0.743, 0.218, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(114.992, 1.704),\n     \"Apogee_km\": gaussian(710.238, 1.791),\n     \"Perigee_km\": gaussian(670.461, 2.130),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.906, 3.134),\n     \"Inclination_radians\": gaussian(1.714, 0.394),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3686.796, 1466.792),\n     \"Apogee_km\": gaussian(35616.732, 2851.304),\n     \"Perigee_km\": gaussian(35483.418, 3077.294),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1411.638, 198.629),\n     \"Inclination_radians\": gaussian(0.035, 0.155),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(43.598, 87.873),\n     \"Apogee_km\": gaussian(698.074, 129.044),\n     \"Perigee_km\": gaussian(570.487, 95.692),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.528, 1.627),\n     \"Inclination_radians\": gaussian(1.489, 0.584),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(64.592, 77.460),\n     \"Apogee_km\": gaussian(2441.299, 3029.765),\n     \"Perigee_km\": gaussian(847.894, 717.064),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.510, 29.115),\n     \"Inclination_radians\": gaussian(1.613, 0.311),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.145, 0.300),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.030, 0.218, 0.743, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.638, 58.866),\n     \"Apogee_km\": gaussian(2412.461, 3073.429),\n     \"Perigee_km\": gaussian(860.068, 652.145),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(119.564, 32.005),\n     \"Inclination_radians\": gaussian(1.626, 0.336),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.330, 86.621),\n     \"Apogee_km\": gaussian(708.220, 132.031),\n     \"Perigee_km\": gaussian(567.879, 96.550),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.520, 1.622),\n     \"Inclination_radians\": gaussian(1.498, 0.568),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3749.411, 1481.489),\n     \"Apogee_km\": gaussian(35654.196, 2833.614),\n     \"Perigee_km\": gaussian(35508.396, 3057.260),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1401.908, 200.076),\n     \"Inclination_radians\": gaussian(0.036, 0.159),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.668, 2.900),\n     \"Apogee_km\": gaussian(711.910, 7.252),\n     \"Perigee_km\": gaussian(670.585, 2.092),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.997, 2.186),\n     \"Inclination_radians\": gaussian(1.720, 0.379),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.101, 0.501),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.743, 0.010, 0.218, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3774.786, 1483.305),\n     \"Apogee_km\": gaussian(35610.244, 2849.941),\n     \"Perigee_km\": gaussian(35479.811, 3279.715),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1400.268, 200.229),\n     \"Inclination_radians\": gaussian(0.027, 0.160),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.364, 5.533),\n     \"Apogee_km\": gaussian(710.713, 3.632),\n     \"Perigee_km\": gaussian(670.423, 2.925),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.953, 1.754),\n     \"Inclination_radians\": gaussian(1.690, 0.456),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.955, 85.152),\n     \"Apogee_km\": gaussian(703.802, 127.043),\n     \"Perigee_km\": gaussian(564.698, 102.657),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.649, 1.649),\n     \"Inclination_radians\": gaussian(1.471, 0.574),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(61.514, 92.623),\n     \"Apogee_km\": gaussian(2587.880, 3181.069),\n     \"Perigee_km\": gaussian(865.995, 657.732),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.306, 26.643),\n     \"Inclination_radians\": gaussian(1.598, 0.321),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.012),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln     \"Eccentricity\": gaussian(0.172, 0.372),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.010, 0.218, 0.743, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.450, 2.366),\n     \"Apogee_km\": gaussian(710.161, 2.115),\n     \"Perigee_km\": gaussian(669.907, 4.657),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.643, 0.975),\n     \"Inclination_radians\": gaussian(1.706, 0.395),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(46.553, 83.959),\n     \"Apogee_km\": gaussian(698.321, 126.166),\n     \"Perigee_km\": gaussian(570.159, 98.478),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.162, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(97.535, 1.624),\n     \"Inclination_radians\": gaussian(1.492, 0.580),\n     \"Class_of_Orbit\": categorical([0.885, 0.038, 0.038, 0.038]),\n     \"Launch_Site\": categorical([0.128, 0.021, 0.021, 0.170, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021, 0.106, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.064, 0.021])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3651.680, 1488.662),\n     \"Apogee_km\": gaussian(35624.417, 2915.790),\n     \"Perigee_km\": gaussian(35473.664, 2910.982),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.570, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008]),\n     \"Period_minutes\": gaussian(1407.048, 199.674),\n     \"Inclination_radians\": gaussian(0.031, 0.161),\n     \"Class_of_Orbit\": categorical([0.013, 0.962, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.250, 0.010, 0.010, 0.010, 0.010, 0.010, 0.300, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.180, 0.010, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(73.353, 72.979),\n     \"Apogee_km\": gaussian(2331.555, 3149.416),\n     \"Perigee_km\": gaussian(866.114, 734.387),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(120.333, 28.297),\n     \"Inclination_radians\": gaussian(1.605, 0.313),\n     \"Class_of_Orbit\": categorical([0.429, 0.143, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.990, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.006, 0.011, 0.006, 0.006, 0.017, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.034, 0.006, 0.006, 0.028, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.011, 0.006, 0.006, 0.006, 0.006, 0.056, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.101, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.201, 0.006, 0.006, 0.011, 0.006, 0.028, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.028]),\n     \"Eccentricity\": gaussian(0.002, 0.011),\n     \"Type_of_Orbit\": categorical([0.714, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Users\": categorical([0.008, 0.008, 0.085, 0.008, 0.008, 0.008, 0.042, 0.085, 0.610, 0.008, 0.008, 0.017, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Eccentricity\": gaussian(0.132, 0.403),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.294, 0.005, 0.512, 0.124, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(49.537, 76.790),\n     \"Apogee_km\": gaussian(718.601, 115.868),\n     \"Perigee_km\": gaussian(614.714, 108.810),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.057, 0.010, 0.295, 0.019, 0.010, 0.057, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.057, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.901, 1.879),\n     \"Inclination_radians\": gaussian(1.494, 0.456),\n     \"Users\": categorical([0.013, 0.091, 0.039, 0.013, 0.013, 0.013, 0.013, 0.182, 0.208, 0.013, 0.026, 0.013, 0.013, 0.299, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.119, 0.048, 0.024, 0.179, 0.036, 0.012, 0.012, 0.012, 0.095, 0.012, 0.012, 0.024, 0.012, 0.131, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.071, 0.012, 0.071, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.831, 3.522),\n     \"Apogee_km\": gaussian(709.997, 2.370),\n     \"Perigee_km\": gaussian(669.954, 2.421),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.721, 2.475),\n     \"Inclination_radians\": gaussian(1.715, 0.349),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3692.040, 1498.410),\n     \"Apogee_km\": gaussian(35701.196, 2481.297),\n     \"Perigee_km\": gaussian(35500.742, 2445.416),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1427.578, 96.803),\n     \"Inclination_radians\": gaussian(0.035, 0.131),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(885.806, 561.534),\n     \"Apogee_km\": gaussian(829.533, 320.347),\n     \"Perigee_km\": gaussian(707.234, 241.339),\n     \"Purpose\": categorical([0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.028, 0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.070, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.173, 4.392),\n     \"Inclination_radians\": gaussian(1.678, 0.113),\n     \"Users\": categorical([0.023, 0.047, 0.209, 0.047, 0.023, 0.047, 0.023, 0.209, 0.023, 0.023, 0.023, 0.047, 0.023, 0.070, 0.023, 0.023, 0.023, 0.093]),\n     \"Class_of_Orbit\": categorical([0.862, 0.034, 0.069, 0.034]),\n     \"Launch_Site\": categorical([0.100, 0.020, 0.020, 0.360, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2795.162, 1345.543),\n     \"Apogee_km\": gaussian(34882.511, 34047.316),\n     \"Perigee_km\": gaussian(24796.284, 13137.483),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1209.597, 957.419),\n     \"Inclination_radians\": gaussian(0.956, 0.466),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.975, 0.025]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.010),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.196, 0.333),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.065, 0.393, 0.512, 0.025, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2815.325, 1286.223),\n     \"Apogee_km\": gaussian(34648.549, 34622.219),\n     \"Perigee_km\": gaussian(24310.807, 12777.561),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1091.555, 966.315),\n     \"Inclination_radians\": gaussian(0.940, 0.432),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(303.705, 509.413),\n     \"Apogee_km\": gaussian(704.808, 115.111),\n     \"Perigee_km\": gaussian(637.033, 117.389),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.048, 0.008, 0.248, 0.016, 0.008, 0.096, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.080, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.223, 1.992),\n     \"Inclination_radians\": gaussian(1.564, 0.403),\n     \"Users\": categorical([0.010, 0.082, 0.113, 0.021, 0.010, 0.010, 0.010, 0.216, 0.165, 0.010, 0.021, 0.010, 0.010, 0.237, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.125, 0.038, 0.019, 0.269, 0.029, 0.010, 0.010, 0.010, 0.096, 0.010, 0.010, 0.019, 0.010, 0.106, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.019, 0.058, 0.010, 0.077, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3702.152, 1517.946),\n     \"Apogee_km\": gaussian(35593.598, 2450.832),\n     \"Perigee_km\": gaussian(35560.424, 2384.587),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1423.117, 98.039),\n     \"Inclination_radians\": gaussian(0.023, 0.135),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(150.690, 246.324),\n     \"Apogee_km\": gaussian(1319.590, 341.633),\n     \"Perigee_km\": gaussian(659.185, 590.651),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.059, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(104.971, 6.166),\n     \"Inclination_radians\": gaussian(1.551, 0.229),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.087, 0.043, 0.043, 0.043, 0.087, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.556, 0.111, 0.222, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.024, 1.227),\n     \"Apogee_km\": gaussian(710.269, 2.404),\n     \"Perigee_km\": gaussian(670.328, 3.660),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.585, 2.680),\n     \"Inclination_radians\": gaussian(1.690, 0.729),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.975, 0.020, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.009),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.102, 0.138),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.369, 0.660),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.005, 0.512, 0.393, 0.025, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.419, 4.216),\n     \"Apogee_km\": gaussian(710.081, 2.178),\n     \"Perigee_km\": gaussian(670.209, 2.783),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.584, 1.782),\n     \"Inclination_radians\": gaussian(1.725, 0.370),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3687.465, 1506.028),\n     \"Apogee_km\": gaussian(35614.471, 2369.886),\n     \"Perigee_km\": gaussian(35597.540, 2421.608),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1427.717, 93.928),\n     \"Inclination_radians\": gaussian(0.021, 0.131),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(295.980, 489.895),\n     \"Apogee_km\": gaussian(712.324, 116.148),\n     \"Perigee_km\": gaussian(634.457, 118.774),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.048, 0.008, 0.248, 0.016, 0.008, 0.096, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.080, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.177, 2.034),\n     \"Inclination_radians\": gaussian(1.567, 0.410),\n     \"Users\": categorical([0.010, 0.082, 0.113, 0.021, 0.010, 0.010, 0.010, 0.216, 0.165, 0.010, 0.021, 0.010, 0.010, 0.237, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.125, 0.038, 0.019, 0.269, 0.029, 0.010, 0.010, 0.010, 0.096, 0.010, 0.010, 0.019, 0.010, 0.106, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.019, 0.058, 0.010, 0.077, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(157.575, 233.998),\n     \"Apogee_km\": gaussian(1310.295, 334.921),\n     \"Perigee_km\": gaussian(698.375, 540.165),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.059, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(105.166, 6.855),\n     \"Inclination_radians\": gaussian(1.573, 0.224),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.087, 0.043, 0.043, 0.043, 0.087, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.556, 0.111, 0.222, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2809.424, 1410.314),\n     \"Apogee_km\": gaussian(33839.893, 33486.941),\n     \"Perigee_km\": gaussian(24827.912, 12758.258),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1106.289, 1010.300),\n     \"Inclination_radians\": gaussian(0.965, 0.431),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.960, 0.010, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.009),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.308, 0.528),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.043, 0.055),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.209, 0.512, 0.075, 0.134, 0.065, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(62.219, 107.450),\n     \"Apogee_km\": gaussian(738.734, 130.819),\n     \"Perigee_km\": gaussian(606.232, 128.857),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.284, 0.023, 0.011, 0.080, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(98.209, 2.208),\n     \"Inclination_radians\": gaussian(1.415, 0.520),\n     \"Users\": categorical([0.017, 0.117, 0.050, 0.017, 0.017, 0.017, 0.017, 0.167, 0.167, 0.017, 0.017, 0.017, 0.017, 0.283, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.935, 0.022, 0.022, 0.022]),\n     \"Launch_Site\": categorical([0.119, 0.045, 0.030, 0.209, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.030, 0.015, 0.090, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.075, 0.015, 0.090, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3634.830, 1507.698),\n     \"Apogee_km\": gaussian(35662.730, 2500.113),\n     \"Perigee_km\": gaussian(35421.999, 2482.602),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1425.056, 95.185),\n     \"Inclination_radians\": gaussian(0.029, 0.131),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(718.055, 457.745),\n     \"Apogee_km\": gaussian(977.256, 328.443),\n     \"Perigee_km\": gaussian(754.805, 306.750),\n     \"Purpose\": categorical([0.016, 0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.049, 0.033, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(102.163, 4.329),\n     \"Inclination_radians\": gaussian(1.663, 0.133),\n     \"Users\": categorical([0.030, 0.061, 0.242, 0.030, 0.030, 0.061, 0.030, 0.121, 0.030, 0.030, 0.030, 0.061, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.789, 0.053, 0.105, 0.053]),\n     \"Launch_Site\": categorical([0.100, 0.025, 0.025, 0.325, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(420.135, 672.542),\n     \"Apogee_km\": gaussian(645.444, 38.772),\n     \"Perigee_km\": gaussian(619.145, 35.677),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.096, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.027, 0.014, 0.096, 0.014, 0.014, 0.068, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.096, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(97.451, 0.686),\n     \"Inclination_radians\": gaussian(1.708, 0.020),\n     \"Users\": categorical([0.022, 0.022, 0.044, 0.044, 0.022, 0.022, 0.022, 0.222, 0.156, 0.022, 0.044, 0.022, 0.022, 0.156, 0.022, 0.022, 0.022, 0.089]),\n     \"Class_of_Orbit\": categorical([0.903, 0.032, 0.032, 0.032]),\n     \"Launch_Site\": categorical([0.077, 0.038, 0.019, 0.135, 0.038, 0.019, 0.019, 0.019, 0.173, 0.019, 0.019, 0.019, 0.019, 0.115, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.058, 0.019])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2823.877, 1277.341),\n     \"Apogee_km\": gaussian(34966.444, 33738.168),\n     \"Perigee_km\": gaussian(24654.176, 12738.453),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1121.245, 995.826),\n     \"Inclination_radians\": gaussian(0.974, 0.422),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.207, 4.571),\n     \"Apogee_km\": gaussian(710.420, 1.816),\n     \"Perigee_km\": gaussian(670.409, 4.152),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.872, 1.786),\n     \"Inclination_radians\": gaussian(1.697, 0.155),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.970, 0.005, 0.010, 0.005, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.010),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.352),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.057, 0.125),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.358, 1.374),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Eccentricity\": gaussian(0.124, 0.254),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.065, 0.512, 0.289, 0.129, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2805.614, 1300.083),\n     \"Apogee_km\": gaussian(33178.326, 36028.968),\n     \"Perigee_km\": gaussian(25405.627, 13274.595),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1092.011, 987.985),\n     \"Inclination_radians\": gaussian(0.927, 0.422),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3795.343, 1397.345),\n     \"Apogee_km\": gaussian(35610.108, 2447.145),\n     \"Perigee_km\": gaussian(35562.945, 2551.386),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1432.317, 98.154),\n     \"Inclination_radians\": gaussian(0.022, 0.130),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(48.657, 78.812),\n     \"Apogee_km\": gaussian(720.376, 114.645),\n     \"Perigee_km\": gaussian(613.733, 110.366),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.058, 0.010, 0.298, 0.019, 0.010, 0.058, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.976, 1.888),\n     \"Inclination_radians\": gaussian(1.505, 0.460),\n     \"Users\": categorical([0.013, 0.092, 0.039, 0.013, 0.013, 0.013, 0.013, 0.171, 0.211, 0.013, 0.026, 0.013, 0.013, 0.303, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.120, 0.048, 0.024, 0.169, 0.036, 0.012, 0.012, 0.012, 0.096, 0.012, 0.012, 0.024, 0.012, 0.133, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.072, 0.012, 0.072, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(826.617, 569.306),\n     \"Apogee_km\": gaussian(825.991, 298.182),\n     \"Perigee_km\": gaussian(701.163, 239.820),\n     \"Purpose\": categorical([0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.028, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.069, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.069, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.953, 4.224),\n     \"Inclination_radians\": gaussian(1.682, 0.108),\n     \"Users\": categorical([0.023, 0.045, 0.205, 0.045, 0.023, 0.045, 0.023, 0.227, 0.023, 0.023, 0.023, 0.045, 0.023, 0.068, 0.023, 0.023, 0.023, 0.091]),\n     \"Class_of_Orbit\": categorical([0.867, 0.033, 0.067, 0.033]),\n     \"Launch_Site\": categorical([0.098, 0.020, 0.020, 0.373, 0.020, 0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.059, 0.020])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.063, 1.030),\n     \"Apogee_km\": gaussian(710.308, 10.662),\n     \"Perigee_km\": gaussian(669.973, 2.048),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.797, 2.926),\n     \"Inclination_radians\": gaussian(1.712, 0.239),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.960, 0.020, 0.010, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.010),\n     \"Type_of_Orbit\": categorical([0.917, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.043, 0.070),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.436, 0.466),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.108),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.512, 0.274, 0.005, 0.144, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3638.924, 1494.233),\n     \"Apogee_km\": gaussian(35730.888, 2372.546),\n     \"Perigee_km\": gaussian(35490.759, 2487.553),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1423.494, 95.937),\n     \"Inclination_radians\": gaussian(0.024, 0.130),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(49.839, 82.749),\n     \"Apogee_km\": gaussian(718.069, 113.830),\n     \"Perigee_km\": gaussian(610.972, 106.243),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.059, 0.010, 0.297, 0.010, 0.010, 0.059, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.939, 1.812),\n     \"Inclination_radians\": gaussian(1.481, 0.463),\n     \"Users\": categorical([0.014, 0.082, 0.041, 0.014, 0.014, 0.014, 0.014, 0.164, 0.219, 0.014, 0.027, 0.014, 0.014, 0.301, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.113, 0.050, 0.025, 0.188, 0.038, 0.013, 0.013, 0.013, 0.100, 0.013, 0.013, 0.025, 0.013, 0.138, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.025, 0.063, 0.013, 0.050, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.194, 3.063),\n     \"Apogee_km\": gaussian(710.013, 2.133),\n     \"Perigee_km\": gaussian(670.138, 2.648),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.826, 3.392),\n     \"Inclination_radians\": gaussian(1.707, 0.294),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(824.849, 585.559),\n     \"Apogee_km\": gaussian(826.471, 305.220),\n     \"Perigee_km\": gaussian(687.411, 229.863),\n     \"Purpose\": categorical([0.013, 0.093, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.053, 0.040, 0.013, 0.093, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.080, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.067, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.015, 4.000),\n     \"Inclination_radians\": gaussian(1.677, 0.105),\n     \"Users\": categorical([0.021, 0.064, 0.191, 0.043, 0.021, 0.043, 0.021, 0.234, 0.021, 0.021, 0.021, 0.043, 0.021, 0.085, 0.021, 0.021, 0.021, 0.085]),\n     \"Class_of_Orbit\": categorical([0.879, 0.030, 0.061, 0.030]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.333, 0.019, 0.019, 0.019, 0.019, 0.056, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019, 0.093, 0.019])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2791.281, 1346.981),\n     \"Apogee_km\": gaussian(33435.576, 34578.996),\n     \"Perigee_km\": gaussian(24707.027, 13275.164),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1144.935, 1046.857),\n     \"Inclination_radians\": gaussian(0.943, 0.430),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.955, 0.035, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.009),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.052, 0.049),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.441, 0.430),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.279, 0.512, 0.139, 0.065, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(42.563, 79.579),\n     \"Apogee_km\": gaussian(714.022, 115.054),\n     \"Perigee_km\": gaussian(615.622, 108.900),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.059, 0.010, 0.304, 0.010, 0.010, 0.059, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.061, 1.798),\n     \"Inclination_radians\": gaussian(1.469, 0.478),\n     \"Users\": categorical([0.014, 0.081, 0.041, 0.014, 0.014, 0.014, 0.014, 0.162, 0.216, 0.014, 0.027, 0.014, 0.014, 0.311, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.123, 0.049, 0.025, 0.173, 0.025, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.025, 0.012, 0.136, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.025, 0.074, 0.012, 0.062, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3686.240, 1494.949),\n     \"Apogee_km\": gaussian(35514.700, 2499.869),\n     \"Perigee_km\": gaussian(35476.266, 2557.683),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1426.850, 98.028),\n     \"Inclination_radians\": gaussian(0.023, 0.136),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(809.170, 580.789),\n     \"Apogee_km\": gaussian(823.022, 303.916),\n     \"Perigee_km\": gaussian(690.284, 231.147),\n     \"Purpose\": categorical([0.014, 0.095, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.041, 0.041, 0.014, 0.095, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.068, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.068, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.847, 4.238),\n     \"Inclination_radians\": gaussian(1.684, 0.103),\n     \"Users\": categorical([0.022, 0.065, 0.196, 0.043, 0.022, 0.043, 0.022, 0.239, 0.022, 0.022, 0.022, 0.043, 0.022, 0.065, 0.022, 0.022, 0.022, 0.087]),\n     \"Class_of_Orbit\": categorical([0.875, 0.031, 0.063, 0.031]),\n     \"Launch_Site\": categorical([0.094, 0.019, 0.019, 0.358, 0.038, 0.019, 0.019, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2785.342, 1313.855),\n     \"Apogee_km\": gaussian(34435.846, 35384.503),\n     \"Perigee_km\": gaussian(24260.121, 13613.840),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1085.459, 978.845),\n     \"Inclination_radians\": gaussian(0.959, 0.432),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.808, 4.830),\n     \"Apogee_km\": gaussian(710.090, 4.633),\n     \"Perigee_km\": gaussian(670.095, 1.446),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.981, 2.650),\n     \"Inclination_radians\": gaussian(1.701, 0.339),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.975, 0.005, 0.015, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.010)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.242, 0.789)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.048, 0.086)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.104, 0.317)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018]),\n     \"Type_of_Orbit\": categorical([0.905, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.289, 0.512, 0.129, 0.065, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(47.247, 82.178),\n     \"Apogee_km\": gaussian(708.200, 111.988),\n     \"Perigee_km\": gaussian(607.084, 104.694),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.058, 0.010, 0.288, 0.019, 0.010, 0.058, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.868, 1.788),\n     \"Inclination_radians\": gaussian(1.494, 0.466),\n     \"Users\": categorical([0.013, 0.092, 0.039, 0.013, 0.013, 0.013, 0.013, 0.184, 0.211, 0.013, 0.026, 0.013, 0.013, 0.289, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.120, 0.048, 0.024, 0.181, 0.036, 0.012, 0.012, 0.012, 0.096, 0.012, 0.012, 0.024, 0.012, 0.133, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.060, 0.012, 0.072, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3594.588, 1450.664),\n     \"Apogee_km\": gaussian(35586.246, 2531.575),\n     \"Perigee_km\": gaussian(35530.051, 2479.721),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1427.542, 96.000),\n     \"Inclination_radians\": gaussian(0.028, 0.130),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(834.369, 560.601),\n     \"Apogee_km\": gaussian(837.141, 298.252),\n     \"Perigee_km\": gaussian(688.016, 244.079),\n     \"Purpose\": categorical([0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.056, 0.028, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.069, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.460, 4.223),\n     \"Inclination_radians\": gaussian(1.681, 0.104),\n     \"Users\": categorical([0.023, 0.045, 0.205, 0.045, 0.023, 0.045, 0.023, 0.205, 0.023, 0.023, 0.023, 0.045, 0.023, 0.091, 0.023, 0.023, 0.023, 0.091]),\n     \"Class_of_Orbit\": categorical([0.867, 0.033, 0.067, 0.033]),\n     \"Launch_Site\": categorical([0.098, 0.020, 0.020, 0.353, 0.020, 0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.059, 0.020])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2635.761, 1512.909),\n     \"Apogee_km\": gaussian(35969.936, 34732.259),\n     \"Perigee_km\": gaussian(25110.529, 12524.415),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1085.672, 982.127),\n     \"Inclination_radians\": gaussian(0.953, 0.396),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.032, 1.332),\n     \"Apogee_km\": gaussian(710.676, 2.644),\n     \"Perigee_km\": gaussian(671.141, 6.247),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.184, 2.961),\n     \"Inclination_radians\": gaussian(1.710, 0.165),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.975, 0.015, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.010)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.062, 0.079)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.384, 0.519)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018]),\n     \"Type_of_Orbit\": categorical([0.905, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.393, 0.005, 0.512, 0.025, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(309.049, 498.710),\n     \"Apogee_km\": gaussian(715.471, 117.271),\n     \"Perigee_km\": gaussian(628.278, 113.903),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.048, 0.008, 0.248, 0.016, 0.008, 0.096, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.080, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.252, 1.964),\n     \"Inclination_radians\": gaussian(1.566, 0.401),\n     \"Users\": categorical([0.010, 0.082, 0.113, 0.021, 0.010, 0.010, 0.010, 0.216, 0.165, 0.010, 0.021, 0.010, 0.010, 0.237, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.125, 0.038, 0.019, 0.269, 0.029, 0.010, 0.010, 0.010, 0.096, 0.010, 0.010, 0.019, 0.010, 0.106, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.019, 0.058, 0.010, 0.077, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.269, 1.955),\n     \"Apogee_km\": gaussian(710.284, 1.820),\n     \"Perigee_km\": gaussian(670.363, 3.412),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.746, 1.580),\n     \"Inclination_radians\": gaussian(1.711, 0.308),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3678.147, 1460.769),\n     \"Apogee_km\": gaussian(35575.117, 2433.497),\n     \"Perigee_km\": gaussian(35598.208, 2378.672),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1431.076, 95.304),\n     \"Inclination_radians\": gaussian(0.024, 0.128),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(148.936, 254.544),\n     \"Apogee_km\": gaussian(1309.432, 312.685),\n     \"Perigee_km\": gaussian(666.900, 517.815),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.059, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(105.391, 6.241),\n     \"Inclination_radians\": gaussian(1.551, 0.222),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.087, 0.043, 0.043, 0.043, 0.087, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.556, 0.111, 0.222, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2852.227, 1312.001),\n     \"Apogee_km\": gaussian(34076.099, 33884.538),\n     \"Perigee_km\": gaussian(25136.918, 12687.024),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1103.532, 984.411),\n     \"Inclination_radians\": gaussian(0.958, 0.413),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.965, 0.020, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.009),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.208, 0.387),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.047, 0.097),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.129, 0.512, 0.289, 0.065, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(818.313, 585.336),\n     \"Apogee_km\": gaussian(837.838, 314.387),\n     \"Perigee_km\": gaussian(678.398, 237.927),\n     \"Purpose\": categorical([0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.042, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.069, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.900, 4.081),\n     \"Inclination_radians\": gaussian(1.679, 0.105),\n     \"Users\": categorical([0.023, 0.068, 0.205, 0.045, 0.023, 0.045, 0.023, 0.205, 0.023, 0.023, 0.023, 0.045, 0.023, 0.068, 0.023, 0.023, 0.023, 0.091]),\n     \"Class_of_Orbit\": categorical([0.867, 0.033, 0.067, 0.033]),\n     \"Launch_Site\": categorical([0.098, 0.020, 0.020, 0.353, 0.020, 0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.078, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3690.034, 1482.535),\n     \"Apogee_km\": gaussian(35592.813, 2500.070),\n     \"Perigee_km\": gaussian(35504.084, 2501.259),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1421.691, 97.203),\n     \"Inclination_radians\": gaussian(0.019, 0.133),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(55.682, 86.141),\n     \"Apogee_km\": gaussian(720.250, 109.740),\n     \"Perigee_km\": gaussian(615.181, 107.414),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.058, 0.010, 0.298, 0.010, 0.010, 0.058, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.020, 1.841),\n     \"Inclination_radians\": gaussian(1.499, 0.455),\n     \"Users\": categorical([0.013, 0.079, 0.039, 0.013, 0.013, 0.013, 0.013, 0.184, 0.211, 0.013, 0.026, 0.013, 0.013, 0.303, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.120, 0.048, 0.024, 0.181, 0.036, 0.012, 0.012, 0.012, 0.096, 0.012, 0.012, 0.024, 0.012, 0.133, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.072, 0.012, 0.060, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2765.274, 1373.349),\n     \"Apogee_km\": gaussian(33173.449, 32082.717),\n     \"Perigee_km\": gaussian(24681.003, 12342.057),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1131.491, 1036.176),\n     \"Inclination_radians\": gaussian(0.967, 0.432),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.275, 1.766),\n     \"Apogee_km\": gaussian(711.170, 4.074),\n     \"Perigee_km\": gaussian(670.045, 1.453),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.502, 5.447),\n     \"Inclination_radians\": gaussian(1.711, 0.238),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.925, 0.060, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.008),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.041),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.309, 0.420),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.124, 0.512, 0.005, 0.294, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(884.242, 558.270),\n     \"Apogee_km\": gaussian(850.836, 313.873),\n     \"Perigee_km\": gaussian(700.376, 230.995),\n     \"Purpose\": categorical([0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.028, 0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.070, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.128, 4.054),\n     \"Inclination_radians\": gaussian(1.681, 0.113),\n     \"Users\": categorical([0.023, 0.047, 0.209, 0.047, 0.023, 0.047, 0.023, 0.209, 0.023, 0.023, 0.023, 0.047, 0.023, 0.070, 0.023, 0.023, 0.023, 0.093]),\n     \"Class_of_Orbit\": categorical([0.862, 0.034, 0.069, 0.034]),\n     \"Launch_Site\": categorical([0.100, 0.020, 0.020, 0.360, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3748.536, 1491.011),\n     \"Apogee_km\": gaussian(35652.968, 2499.771),\n     \"Perigee_km\": gaussian(35555.908, 2472.562),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1423.492, 96.800),\n     \"Inclination_radians\": gaussian(0.030, 0.129),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.762, 4.065),\n     \"Apogee_km\": gaussian(710.349, 2.632),\n     \"Perigee_km\": gaussian(670.746, 3.246),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.841, 2.552),\n     \"Inclination_radians\": gaussian(1.705, 0.271),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(58.506, 81.562),\n     \"Apogee_km\": gaussian(709.535, 113.547),\n     \"Perigee_km\": gaussian(613.333, 107.163),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.057, 0.010, 0.295, 0.019, 0.010, 0.057, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.057, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.053, 1.811),\n     \"Inclination_radians\": gaussian(1.492, 0.459),\n     \"Users\": categorical([0.013, 0.091, 0.039, 0.013, 0.013, 0.013, 0.013, 0.182, 0.208, 0.013, 0.026, 0.013, 0.013, 0.299, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.119, 0.048, 0.024, 0.179, 0.036, 0.012, 0.012, 0.012, 0.095, 0.012, 0.012, 0.024, 0.012, 0.131, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.071, 0.012, 0.071, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2777.047, 1376.344),\n     \"Apogee_km\": gaussian(36683.979, 35106.677),\n     \"Perigee_km\": gaussian(24775.281, 12682.393),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1111.531, 974.706),\n     \"Inclination_radians\": gaussian(0.977, 0.404),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.965, 0.025, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.010)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.040, 0.066)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.321, 0.544)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018]),\n     \"Type_of_Orbit\": categorical([0.905, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.005, 0.512, 0.393, 0.025, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.655, 3.004),\n     \"Apogee_km\": gaussian(710.241, 2.411),\n     \"Perigee_km\": gaussian(670.726, 6.237),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.587, 2.218),\n     \"Inclination_radians\": gaussian(1.713, 0.336),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3721.863, 1525.772),\n     \"Apogee_km\": gaussian(35700.801, 2441.620),\n     \"Perigee_km\": gaussian(35384.697, 2460.848),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1429.507, 101.094),\n     \"Inclination_radians\": gaussian(0.032, 0.131),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(334.115, 504.128),\n     \"Apogee_km\": gaussian(708.061, 113.789),\n     \"Perigee_km\": gaussian(634.003, 115.173),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.048, 0.008, 0.248, 0.016, 0.008, 0.096, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.080, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.148, 2.016),\n     \"Inclination_radians\": gaussian(1.537, 0.407),\n     \"Users\": categorical([0.010, 0.082, 0.113, 0.021, 0.010, 0.010, 0.010, 0.216, 0.165, 0.010, 0.021, 0.010, 0.010, 0.237, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.125, 0.038, 0.019, 0.269, 0.029, 0.010, 0.010, 0.010, 0.096, 0.010, 0.010, 0.019, 0.010, 0.106, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.019, 0.058, 0.010, 0.077, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(146.748, 231.154),\n     \"Apogee_km\": gaussian(1332.622, 330.024),\n     \"Perigee_km\": gaussian(681.971, 548.365),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.059, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(104.906, 6.304),\n     \"Inclination_radians\": gaussian(1.576, 0.225),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.087, 0.043, 0.043, 0.043, 0.087, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.556, 0.111, 0.222, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2796.920, 1351.934),\n     \"Apogee_km\": gaussian(36030.716, 34610.901),\n     \"Perigee_km\": gaussian(25244.267, 13074.259),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1118.361, 971.677),\n     \"Inclination_radians\": gaussian(0.960, 0.415),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.975, 0.025]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.010),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.195, 0.378),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.124, 0.294, 0.512, 0.005, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(891.726, 562.480),\n     \"Apogee_km\": gaussian(831.742, 302.870),\n     \"Perigee_km\": gaussian(692.698, 236.155),\n     \"Purpose\": categorical([0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.028, 0.014, 0.099, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.070, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.277, 4.362),\n     \"Inclination_radians\": gaussian(1.681, 0.108),\n     \"Users\": categorical([0.023, 0.047, 0.209, 0.047, 0.023, 0.047, 0.023, 0.209, 0.023, 0.023, 0.023, 0.047, 0.023, 0.070, 0.023, 0.023, 0.023, 0.093]),\n     \"Class_of_Orbit\": categorical([0.862, 0.034, 0.069, 0.034]),\n     \"Launch_Site\": categorical([0.100, 0.020, 0.020, 0.360, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(51.144, 82.024),\n     \"Apogee_km\": gaussian(714.132, 112.106),\n     \"Perigee_km\": gaussian(615.030, 108.254),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.057, 0.010, 0.295, 0.019, 0.010, 0.057, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.057, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.013, 1.779),\n     \"Inclination_radians\": gaussian(1.486, 0.454),\n     \"Users\": categorical([0.013, 0.091, 0.039, 0.013, 0.013, 0.013, 0.013, 0.182, 0.208, 0.013, 0.026, 0.013, 0.013, 0.299, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.119, 0.048, 0.024, 0.179, 0.036, 0.012, 0.012, 0.012, 0.095, 0.012, 0.012, 0.024, 0.012, 0.131, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.071, 0.012, 0.071, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3759.506, 1473.618),\n     \"Apogee_km\": gaussian(35632.268, 2475.396),\n     \"Perigee_km\": gaussian(35557.476, 2519.083),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1427.350, 99.566),\n     \"Inclination_radians\": gaussian(0.027, 0.142),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.445, 1.974),\n     \"Apogee_km\": gaussian(710.721, 3.154),\n     \"Perigee_km\": gaussian(671.546, 14.539),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.946, 2.259),\n     \"Inclination_radians\": gaussian(1.741, 0.872),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2788.746, 1312.620),\n     \"Apogee_km\": gaussian(35168.684, 34734.311),\n     \"Perigee_km\": gaussian(25064.256, 13497.386),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1091.459, 987.307),\n     \"Inclination_radians\": gaussian(0.949, 0.438),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.960, 0.005, 0.005, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.010),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.274, 1.218),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.082, 0.560),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.060),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.512, 0.005, 0.269, 0.149, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3717.041, 1387.447),\n     \"Apogee_km\": gaussian(35659.785, 2507.041),\n     \"Perigee_km\": gaussian(35594.393, 2442.442),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1422.060, 96.485),\n     \"Inclination_radians\": gaussian(0.022, 0.133),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.337, 2.392),\n     \"Apogee_km\": gaussian(711.427, 8.301),\n     \"Perigee_km\": gaussian(669.963, 1.923),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.745, 2.044),\n     \"Inclination_radians\": gaussian(1.699, 0.316),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(44.835, 83.209),\n     \"Apogee_km\": gaussian(720.958, 115.825),\n     \"Perigee_km\": gaussian(612.850, 109.689),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.070, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010, 0.310, 0.010, 0.010, 0.060, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.079, 1.769),\n     \"Inclination_radians\": gaussian(1.491, 0.462),\n     \"Users\": categorical([0.014, 0.083, 0.042, 0.014, 0.014, 0.014, 0.014, 0.139, 0.222, 0.014, 0.028, 0.014, 0.014, 0.319, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.127, 0.051, 0.025, 0.177, 0.038, 0.013, 0.013, 0.013, 0.076, 0.013, 0.013, 0.025, 0.013, 0.139, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.025, 0.076, 0.013, 0.051, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(747.024, 595.306),\n     \"Apogee_km\": gaussian(811.728, 296.374),\n     \"Perigee_km\": gaussian(681.369, 213.857),\n     \"Purpose\": categorical([0.013, 0.092, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.026, 0.013, 0.013, 0.013, 0.039, 0.039, 0.013, 0.092, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(99.719, 4.092),\n     \"Inclination_radians\": gaussian(1.680, 0.100),\n     \"Users\": categorical([0.021, 0.063, 0.188, 0.042, 0.021, 0.042, 0.021, 0.271, 0.021, 0.021, 0.021, 0.042, 0.021, 0.063, 0.021, 0.021, 0.021, 0.083]),\n     \"Class_of_Orbit\": categorical([0.882, 0.029, 0.059, 0.029]),\n     \"Launch_Site\": categorical([0.091, 0.018, 0.018, 0.345, 0.018, 0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.091, 0.018])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2721.010, 1408.874),\n     \"Apogee_km\": gaussian(35718.967, 35260.320),\n     \"Perigee_km\": gaussian(25161.783, 12875.233),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1133.372, 985.903),\n     \"Inclination_radians\": gaussian(0.964, 0.422),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.970, 0.010, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.010),\n     \"Type_of_Orbit\": categorical([0.918, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.219, 0.638),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.091, 0.160),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.975, 0.025]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.036, 0.004, 0.004, 0.029, 0.022, 0.007, 0.004, 0.004, 0.004, 0.033, 0.004, 0.004, 0.004, 0.004, 0.004, 0.022, 0.022, 0.004, 0.004, 0.004, 0.004, 0.113, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.065, 0.004, 0.011, 0.004, 0.015, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.005, 0.274, 0.512, 0.144, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.082, 1.768),\n     \"Apogee_km\": gaussian(710.379, 2.154),\n     \"Perigee_km\": gaussian(670.662, 2.557),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.858, 2.281),\n     \"Inclination_radians\": gaussian(1.716, 0.346),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(47.024, 79.636),\n     \"Apogee_km\": gaussian(714.413, 115.254),\n     \"Perigee_km\": gaussian(602.470, 102.800),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.059, 0.010, 0.287, 0.020, 0.010, 0.059, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.825, 1.722),\n     \"Inclination_radians\": gaussian(1.475, 0.467),\n     \"Users\": categorical([0.014, 0.096, 0.041, 0.014, 0.014, 0.014, 0.014, 0.164, 0.219, 0.014, 0.027, 0.014, 0.014, 0.288, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.125, 0.038, 0.025, 0.175, 0.038, 0.013, 0.013, 0.013, 0.100, 0.013, 0.013, 0.025, 0.013, 0.138, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.025, 0.050, 0.013, 0.075, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3641.541, 1453.238),\n     \"Apogee_km\": gaussian(35541.184, 2457.240),\n     \"Perigee_km\": gaussian(35505.116, 2440.702),\n     \"Purpose\": categorical([0.040, 0.007, 0.007, 0.617, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007]),\n     \"Period_minutes\": gaussian(1422.495, 92.529),\n     \"Inclination_radians\": gaussian(0.029, 0.133),\n     \"Users\": categorical([0.008, 0.008, 0.124, 0.008, 0.008, 0.008, 0.050, 0.066, 0.620, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008]),\n     \"Class_of_Orbit\": categorical([0.009, 0.972, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.242, 0.008, 0.008, 0.008, 0.008, 0.008, 0.336, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.094, 0.008, 0.141, 0.008, 0.023, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(829.120, 553.244),\n     \"Apogee_km\": gaussian(833.548, 298.268),\n     \"Perigee_km\": gaussian(700.250, 221.751),\n     \"Purpose\": categorical([0.013, 0.093, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.067, 0.027, 0.013, 0.093, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.080, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.067, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.102, 3.967),\n     \"Inclination_radians\": gaussian(1.677, 0.104),\n     \"Users\": categorical([0.021, 0.043, 0.191, 0.043, 0.021, 0.043, 0.021, 0.234, 0.021, 0.021, 0.021, 0.043, 0.021, 0.106, 0.021, 0.021, 0.021, 0.085]),\n     \"Class_of_Orbit\": categorical([0.879, 0.030, 0.061, 0.030]),\n     \"Launch_Site\": categorical([0.093, 0.037, 0.019, 0.352, 0.019, 0.019, 0.019, 0.019, 0.056, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.056, 0.019, 0.056, 0.019])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2838.665, 1305.854),\n     \"Apogee_km\": gaussian(34111.753, 34821.117),\n     \"Perigee_km\": gaussian(24784.879, 12622.046),\n     \"Purpose\": categorical([0.186, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017]),\n     \"Period_minutes\": gaussian(1064.903, 973.445),\n     \"Inclination_radians\": gaussian(0.956, 0.418),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.412, 0.176, 0.353]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.289, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.935, 0.055, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.009),\n     \"Type_of_Orbit\": categorical([0.917, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.038, 0.040),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.414, 0.431),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.004, 0.007, 0.007, 0.004, 0.018, 0.004, 0.004, 0.011, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.039, 0.004, 0.004, 0.032, 0.021, 0.007, 0.004, 0.004, 0.004, 0.032, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.021, 0.004, 0.004, 0.004, 0.004, 0.111, 0.007, 0.007, 0.007, 0.004, 0.004, 0.004, 0.007, 0.004, 0.064, 0.004, 0.011, 0.004, 0.014, 0.029, 0.004, 0.229, 0.004, 0.004, 0.007, 0.004, 0.018, 0.004, 0.018, 0.004, 0.004, 0.004, 0.004, 0.004, 0.025, 0.004, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.236, 0.568, 0.130, 0.050, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(54.749, 84.155),\n     \"Apogee_km\": gaussian(708.721, 119.241),\n     \"Perigee_km\": gaussian(609.664, 109.078),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.017, 0.009, 0.060, 0.009, 0.009, 0.009, 0.009, 0.017, 0.017, 0.068, 0.009, 0.333, 0.017, 0.009, 0.051, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.068, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.913, 1.736),\n     \"Inclination_radians\": gaussian(1.515, 0.456),\n     \"Users\": categorical([0.011, 0.079, 0.034, 0.022, 0.011, 0.034, 0.011, 0.191, 0.202, 0.011, 0.022, 0.011, 0.011, 0.303, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.125, 0.042, 0.021, 0.167, 0.052, 0.021, 0.021, 0.010, 0.083, 0.010, 0.010, 0.021, 0.010, 0.156, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.031, 0.063, 0.010, 0.063, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3658.286, 1546.294),\n     \"Apogee_km\": gaussian(35719.294, 1922.939),\n     \"Perigee_km\": gaussian(35527.615, 1953.779),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1435.257, 75.320),\n     \"Inclination_radians\": gaussian(0.015, 0.102),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1177.910, 1080.889),\n     \"Apogee_km\": gaussian(839.311, 289.560),\n     \"Perigee_km\": gaussian(721.519, 224.828),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.047, 0.024, 0.012, 0.118, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.071, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.106, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.177, 4.179),\n     \"Inclination_radians\": gaussian(1.707, 0.168),\n     \"Users\": categorical([0.018, 0.035, 0.211, 0.035, 0.018, 0.035, 0.053, 0.298, 0.018, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.070]),\n     \"Class_of_Orbit\": categorical([0.884, 0.023, 0.070, 0.023]),\n     \"Launch_Site\": categorical([0.078, 0.016, 0.016, 0.406, 0.063, 0.016, 0.031, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2941.304, 1220.614),\n     \"Apogee_km\": gaussian(31060.203, 33499.692),\n     \"Perigee_km\": gaussian(22946.800, 13284.205),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(1022.803, 989.231),\n     \"Inclination_radians\": gaussian(0.878, 0.472),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.922, 0.499),\n     \"Apogee_km\": gaussian(693.956, 8.433),\n     \"Perigee_km\": gaussian(675.796, 1.551),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.472, 0.437),\n     \"Inclination_radians\": gaussian(1.714, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.326, 4.673),\n     \"Apogee_km\": gaussian(710.547, 4.018),\n     \"Perigee_km\": gaussian(671.058, 4.771),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.689, 1.913),\n     \"Inclination_radians\": gaussian(1.714, 0.214),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.053, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.037)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.304, 0.627)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.883, 0.021, 0.053, 0.011, 0.011, 0.011, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.050, 0.312, 0.568, 0.030, 0.003, 0.013, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2783.499, 1384.267),\n     \"Apogee_km\": gaussian(31746.465, 31560.010),\n     \"Perigee_km\": gaussian(24465.319, 14343.919),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(991.232, 1002.312),\n     \"Inclination_radians\": gaussian(0.877, 0.468),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(349.930, 597.342),\n     \"Apogee_km\": gaussian(709.463, 122.987),\n     \"Perigee_km\": gaussian(625.475, 123.452),\n     \"Type_of_Orbit\": categorical([0.924, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.050, 0.007, 0.014, 0.007, 0.050, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.057, 0.007, 0.271, 0.014, 0.007, 0.100, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.079, 0.014, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.043, 0.007, 0.014, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.226, 2.161),\n     \"Inclination_radians\": gaussian(1.560, 0.412),\n     \"Users\": categorical([0.009, 0.063, 0.098, 0.027, 0.009, 0.027, 0.027, 0.250, 0.161, 0.009, 0.018, 0.009, 0.009, 0.223, 0.009, 0.009, 0.009, 0.036]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.126, 0.034, 0.017, 0.244, 0.067, 0.017, 0.017, 0.008, 0.084, 0.008, 0.008, 0.017, 0.008, 0.126, 0.008, 0.008, 0.017, 0.025, 0.008, 0.008, 0.025, 0.034, 0.008, 0.067, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3639.281, 1507.492),\n     \"Apogee_km\": gaussian(35683.162, 1953.991),\n     \"Perigee_km\": gaussian(35707.425, 1874.616),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1427.246, 74.744),\n     \"Inclination_radians\": gaussian(0.018, 0.104),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(137.207, 261.248),\n     \"Apogee_km\": gaussian(1255.244, 261.373),\n     \"Perigee_km\": gaussian(772.968, 478.303),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.073, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.073, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(105.522, 4.676),\n     \"Inclination_radians\": gaussian(1.719, 0.389),\n     \"Users\": categorical([0.037, 0.037, 0.148, 0.037, 0.037, 0.074, 0.037, 0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.148, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.615, 0.077, 0.231, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.235, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.706, 6.503),\n     \"Apogee_km\": gaussian(710.038, 1.570),\n     \"Perigee_km\": gaussian(670.130, 1.874),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.583, 0.549),\n     \"Inclination_radians\": gaussian(1.715, 0.196),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.965, 0.269),\n     \"Apogee_km\": gaussian(693.673, 8.903),\n     \"Perigee_km\": gaussian(675.404, 2.812),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.464, 0.147),\n     \"Inclination_radians\": gaussian(1.714, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1552.073, 2144.641),\n     \"Apogee_km\": gaussian(703.562, 2.137),\n     \"Perigee_km\": gaussian(693.198, 13.960),\n     \"Type_of_Orbit\": categorical([0.571, 0.071, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.730, 0.142),\n     \"Inclination_radians\": gaussian(1.710, 0.050),\n     \"Users\": categorical([0.040, 0.080, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.040, 0.040, 0.040, 0.040, 0.040, 0.120, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.727, 0.091, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.950, 0.037, 0.010, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.039, 0.040)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.265, 0.455)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(-0.005, 0.146)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.568, 0.243, 0.103, 0.050, 0.013, 0.020, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3606.767, 1504.528),\n     \"Apogee_km\": gaussian(35790.774, 1993.120),\n     \"Perigee_km\": gaussian(35693.388, 1932.910),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1429.092, 74.536),\n     \"Inclination_radians\": gaussian(0.023, 0.106),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(67.352, 102.770),\n     \"Apogee_km\": gaussian(694.390, 121.465),\n     \"Perigee_km\": gaussian(598.568, 105.938),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.067, 0.008, 0.311, 0.017, 0.008, 0.076, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.067, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.644, 1.800),\n     \"Inclination_radians\": gaussian(1.528, 0.437),\n     \"Users\": categorical([0.011, 0.077, 0.022, 0.022, 0.011, 0.033, 0.033, 0.209, 0.198, 0.011, 0.022, 0.011, 0.011, 0.286, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.133, 0.041, 0.020, 0.163, 0.051, 0.020, 0.020, 0.010, 0.082, 0.010, 0.010, 0.020, 0.010, 0.153, 0.010, 0.010, 0.020, 0.031, 0.010, 0.010, 0.031, 0.051, 0.010, 0.061, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1048.644, 768.664),\n     \"Apogee_km\": gaussian(897.255, 273.498),\n     \"Perigee_km\": gaussian(744.435, 251.023),\n     \"Purpose\": categorical([0.013, 0.091, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.013, 0.078, 0.013, 0.013, 0.013, 0.052, 0.013, 0.013, 0.013, 0.065, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(101.263, 4.127),\n     \"Inclination_radians\": gaussian(1.720, 0.202),\n     \"Users\": categorical([0.020, 0.020, 0.265, 0.041, 0.020, 0.041, 0.020, 0.204, 0.020, 0.020, 0.020, 0.041, 0.020, 0.102, 0.020, 0.020, 0.020, 0.082]),\n     \"Class_of_Orbit\": categorical([0.857, 0.029, 0.086, 0.029]),\n     \"Launch_Site\": categorical([0.071, 0.018, 0.018, 0.357, 0.071, 0.018, 0.036, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.054, 0.018])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2842.109, 1321.390),\n     \"Apogee_km\": gaussian(33278.473, 32250.117),\n     \"Perigee_km\": gaussian(24460.006, 13942.908),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(997.571, 979.426),\n     \"Inclination_radians\": gaussian(0.891, 0.470),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.952, 0.337),\n     \"Apogee_km\": gaussian(694.248, 8.675),\n     \"Perigee_km\": gaussian(675.641, 2.492),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.456, 0.187),\n     \"Inclination_radians\": gaussian(1.713, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1901.792, 2102.503),\n     \"Apogee_km\": gaussian(701.964, 7.499),\n     \"Perigee_km\": gaussian(695.724, 13.193),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.729, 0.216),\n     \"Inclination_radians\": gaussian(1.711, 0.045),\n     \"Users\": categorical([0.042, 0.083, 0.042, 0.042, 0.042, 0.042, 0.042, 0.250, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.226, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.039, 5.955),\n     \"Apogee_km\": gaussian(711.237, 4.891),\n     \"Perigee_km\": gaussian(670.695, 3.521),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.565, 0.694),\n     \"Inclination_radians\": gaussian(1.710, 0.123),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.056, 0.003, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.037)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.259, 0.992)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.086, 0.285)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018]),\n     \"Type_of_Orbit\": categorical([0.883, 0.021, 0.053, 0.011, 0.011, 0.011, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.113, 0.568, 0.073, 0.196, 0.047, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(58.945, 94.660),\n     \"Apogee_km\": gaussian(707.324, 153.643),\n     \"Perigee_km\": gaussian(566.393, 129.644),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.050, 0.013, 0.300, 0.025, 0.013, 0.075, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(97.410, 2.296),\n     \"Inclination_radians\": gaussian(1.323, 0.585),\n     \"Users\": categorical([0.019, 0.135, 0.058, 0.038, 0.019, 0.058, 0.019, 0.115, 0.154, 0.019, 0.019, 0.019, 0.019, 0.231, 0.019, 0.019, 0.019, 0.019]),\n     \"Class_of_Orbit\": categorical([0.921, 0.026, 0.026, 0.026]),\n     \"Launch_Site\": categorical([0.102, 0.017, 0.034, 0.271, 0.051, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.051, 0.068, 0.017, 0.051, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3592.920, 1525.464),\n     \"Apogee_km\": gaussian(35697.355, 1908.139),\n     \"Perigee_km\": gaussian(35587.540, 1883.560),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1429.742, 74.891),\n     \"Inclination_radians\": gaussian(0.018, 0.103),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1452.933, 1493.733),\n     \"Apogee_km\": gaussian(989.435, 286.960),\n     \"Perigee_km\": gaussian(772.428, 286.152),\n     \"Purpose\": categorical([0.015, 0.103, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.059, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.059, 0.015, 0.029, 0.015, 0.029, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.088, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(102.788, 3.892),\n     \"Inclination_radians\": gaussian(1.663, 0.360),\n     \"Users\": categorical([0.025, 0.025, 0.275, 0.025, 0.025, 0.050, 0.025, 0.200, 0.025, 0.025, 0.025, 0.050, 0.025, 0.100, 0.025, 0.025, 0.025, 0.025]),\n     \"Class_of_Orbit\": categorical([0.808, 0.038, 0.115, 0.038]),\n     \"Launch_Site\": categorical([0.064, 0.021, 0.021, 0.340, 0.085, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(382.981, 695.928),\n     \"Apogee_km\": gaussian(682.024, 84.086),\n     \"Perigee_km\": gaussian(639.236, 64.813),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.048, 0.010, 0.152, 0.010, 0.010, 0.095, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.048, 0.114, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.048, 0.010, 0.019, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.900, 1.344),\n     \"Inclination_radians\": gaussian(1.709, 0.016),\n     \"Users\": categorical([0.013, 0.026, 0.078, 0.026, 0.013, 0.013, 0.039, 0.286, 0.143, 0.013, 0.026, 0.013, 0.013, 0.208, 0.013, 0.013, 0.013, 0.052]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.107, 0.048, 0.012, 0.131, 0.036, 0.012, 0.071, 0.012, 0.107, 0.012, 0.012, 0.012, 0.012, 0.179, 0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.012, 0.036, 0.012, 0.071, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2675.023, 1283.022),\n     \"Apogee_km\": gaussian(33569.213, 31374.616),\n     \"Perigee_km\": gaussian(25182.344, 12657.949),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1077.967, 987.375),\n     \"Inclination_radians\": gaussian(0.908, 0.484),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.240, 5.043),\n     \"Apogee_km\": gaussian(710.260, 2.508),\n     \"Perigee_km\": gaussian(671.247, 12.763),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.010, 2.002),\n     \"Inclination_radians\": gaussian(1.700, 0.218),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.053, 0.007, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007),\n     \"Type_of_Orbit\": categorical([0.892, 0.011, 0.054, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.036),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.381, 0.468),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(-0.002, 0.121),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.050, 0.568, 0.223, 0.143, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2892.018, 1307.726),\n     \"Apogee_km\": gaussian(32166.762, 33564.116),\n     \"Perigee_km\": gaussian(23201.692, 13996.239),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(956.055, 954.358),\n     \"Inclination_radians\": gaussian(0.893, 0.459),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3628.859, 1514.451),\n     \"Apogee_km\": gaussian(35746.004, 1918.127),\n     \"Perigee_km\": gaussian(35704.046, 1934.596),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1430.792, 74.880),\n     \"Inclination_radians\": gaussian(0.014, 0.104),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(43.683, 76.839),\n     \"Apogee_km\": gaussian(701.109, 120.913),\n     \"Perigee_km\": gaussian(599.628, 103.517),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.018, 0.009, 0.062, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.071, 0.009, 0.336, 0.018, 0.009, 0.053, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.044, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.746, 1.857),\n     \"Inclination_radians\": gaussian(1.528, 0.456),\n     \"Users\": categorical([0.012, 0.082, 0.035, 0.024, 0.012, 0.035, 0.012, 0.165, 0.212, 0.012, 0.024, 0.012, 0.012, 0.306, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.120, 0.033, 0.022, 0.174, 0.054, 0.022, 0.022, 0.011, 0.087, 0.011, 0.011, 0.022, 0.011, 0.152, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.033, 0.054, 0.011, 0.065, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1142.487, 1056.025),\n     \"Apogee_km\": gaussian(811.696, 272.705),\n     \"Perigee_km\": gaussian(698.309, 216.056),\n     \"Purpose\": categorical([0.011, 0.079, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.056, 0.022, 0.011, 0.112, 0.011, 0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.101, 0.022, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.101, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(100.394, 3.938),\n     \"Inclination_radians\": gaussian(1.714, 0.159),\n     \"Users\": categorical([0.016, 0.033, 0.197, 0.033, 0.016, 0.033, 0.049, 0.328, 0.016, 0.016, 0.016, 0.033, 0.016, 0.082, 0.016, 0.016, 0.016, 0.066]),\n     \"Class_of_Orbit\": categorical([0.894, 0.021, 0.064, 0.021]),\n     \"Launch_Site\": categorical([0.088, 0.029, 0.015, 0.382, 0.059, 0.015, 0.029, 0.015, 0.044, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015, 0.015, 0.029, 0.015, 0.044, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.976, 0.434),\n     \"Apogee_km\": gaussian(694.565, 9.511),\n     \"Perigee_km\": gaussian(675.699, 2.121),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.461, 0.096),\n     \"Inclination_radians\": gaussian(1.710, 0.091),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.853, 6.083),\n     \"Apogee_km\": gaussian(711.263, 5.774),\n     \"Perigee_km\": gaussian(671.000, 3.228),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.597, 0.226),\n     \"Inclination_radians\": gaussian(1.711, 0.274),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.053, 0.003, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007),\n     \"Type_of_Orbit\": categorical([0.890, 0.011, 0.055, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.036),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.418, 0.949),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.132, 0.210),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.568, 0.236, 0.133, 0.050, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3654.793, 1476.157),\n     \"Apogee_km\": gaussian(35574.400, 1930.884),\n     \"Perigee_km\": gaussian(35602.363, 1875.569),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1429.910, 73.527),\n     \"Inclination_radians\": gaussian(0.018, 0.106),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(54.674, 84.925),\n     \"Apogee_km\": gaussian(716.753, 110.670),\n     \"Perigee_km\": gaussian(613.022, 106.938),\n     \"Type_of_Orbit\": categorical([0.903, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.017, 0.009, 0.060, 0.017, 0.009, 0.009, 0.009, 0.017, 0.017, 0.068, 0.009, 0.316, 0.017, 0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.068, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.985, 1.694),\n     \"Inclination_radians\": gaussian(1.509, 0.460),\n     \"Users\": categorical([0.011, 0.079, 0.034, 0.022, 0.011, 0.034, 0.022, 0.180, 0.202, 0.011, 0.022, 0.011, 0.011, 0.303, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.125, 0.042, 0.021, 0.177, 0.031, 0.021, 0.021, 0.010, 0.083, 0.010, 0.010, 0.021, 0.010, 0.156, 0.010, 0.010, 0.021, 0.021, 0.010, 0.010, 0.031, 0.063, 0.010, 0.063, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1157.041, 1111.688),\n     \"Apogee_km\": gaussian(816.953, 290.902),\n     \"Perigee_km\": gaussian(715.760, 233.640),\n     \"Type_of_Orbit\": categorical([0.824, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.012, 0.081, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.070, 0.023, 0.012, 0.105, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.070, 0.023, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.105, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.271, 4.341),\n     \"Inclination_radians\": gaussian(1.709, 0.168),\n     \"Users\": categorical([0.017, 0.034, 0.207, 0.034, 0.017, 0.034, 0.034, 0.328, 0.017, 0.017, 0.017, 0.034, 0.017, 0.069, 0.017, 0.017, 0.017, 0.069]),\n     \"Class_of_Orbit\": categorical([0.886, 0.023, 0.068, 0.023]),\n     \"Launch_Site\": categorical([0.077, 0.015, 0.015, 0.400, 0.092, 0.015, 0.031, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.046, 0.015])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2804.701, 1349.807),\n     \"Apogee_km\": gaussian(32561.479, 32662.545),\n     \"Perigee_km\": gaussian(24073.265, 13676.749),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(996.256, 1021.943),\n     \"Inclination_radians\": gaussian(0.888, 0.490),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.000, 0.131),\n     \"Apogee_km\": gaussian(694.302, 8.231),\n     \"Perigee_km\": gaussian(675.839, 1.268),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.457, 0.122),\n     \"Inclination_radians\": gaussian(1.715, 0.075),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.950, 0.043, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.042, 0.042)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.420, 0.521)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.239, 0.568, 0.133, 0.047, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(56.432, 86.454),\n     \"Apogee_km\": gaussian(707.533, 119.015),\n     \"Perigee_km\": gaussian(602.344, 105.965),\n     \"Type_of_Orbit\": categorical([0.900, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.068, 0.008, 0.331, 0.017, 0.008, 0.042, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.965, 1.732),\n     \"Inclination_radians\": gaussian(1.514, 0.460),\n     \"Users\": categorical([0.011, 0.067, 0.033, 0.022, 0.011, 0.033, 0.011, 0.211, 0.200, 0.011, 0.022, 0.011, 0.011, 0.300, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.124, 0.041, 0.021, 0.175, 0.052, 0.021, 0.021, 0.010, 0.082, 0.010, 0.010, 0.021, 0.010, 0.155, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.031, 0.062, 0.010, 0.062, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3511.154, 1532.928),\n     \"Apogee_km\": gaussian(35820.413, 1848.194),\n     \"Perigee_km\": gaussian(35637.792, 1891.498),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1428.985, 74.303),\n     \"Inclination_radians\": gaussian(0.017, 0.103),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1294.826, 1158.189),\n     \"Apogee_km\": gaussian(835.045, 280.690),\n     \"Perigee_km\": gaussian(710.570, 228.622),\n     \"Type_of_Orbit\": categorical([0.833, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028]),\n     \"Purpose\": categorical([0.012, 0.081, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.047, 0.023, 0.012, 0.128, 0.012, 0.012, 0.012, 0.047, 0.012, 0.023, 0.012, 0.070, 0.023, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.093, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.260, 4.176),\n     \"Inclination_radians\": gaussian(1.674, 0.274),\n     \"Users\": categorical([0.017, 0.052, 0.207, 0.034, 0.017, 0.034, 0.052, 0.293, 0.017, 0.017, 0.017, 0.034, 0.017, 0.069, 0.017, 0.017, 0.017, 0.069]),\n     \"Class_of_Orbit\": categorical([0.886, 0.023, 0.068, 0.023]),\n     \"Launch_Site\": categorical([0.077, 0.015, 0.015, 0.400, 0.062, 0.015, 0.031, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.046, 0.015, 0.015, 0.031, 0.015, 0.015, 0.046, 0.015])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2816.223, 1269.681),\n     \"Apogee_km\": gaussian(34884.819, 33029.461),\n     \"Perigee_km\": gaussian(25905.105, 12882.507),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1102.784, 998.847),\n     \"Inclination_radians\": gaussian(0.875, 0.457),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.005, 0.101),\n     \"Apogee_km\": gaussian(694.445, 8.401),\n     \"Perigee_km\": gaussian(675.823, 1.553),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.456, 0.330),\n     \"Inclination_radians\": gaussian(1.711, 0.080),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.944, 0.050, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.039, 0.036)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.412, 0.522)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.239, 0.568, 0.130, 0.050, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(53.321, 83.102),\n     \"Apogee_km\": gaussian(709.635, 114.575),\n     \"Perigee_km\": gaussian(608.226, 106.855),\n     \"Type_of_Orbit\": categorical([0.902, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.068, 0.008, 0.322, 0.017, 0.008, 0.051, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.961, 1.728),\n     \"Inclination_radians\": gaussian(1.511, 0.439),\n     \"Users\": categorical([0.011, 0.078, 0.033, 0.022, 0.011, 0.033, 0.011, 0.200, 0.200, 0.011, 0.022, 0.011, 0.011, 0.300, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.124, 0.041, 0.021, 0.186, 0.041, 0.021, 0.021, 0.010, 0.082, 0.010, 0.010, 0.021, 0.010, 0.155, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.031, 0.062, 0.010, 0.062, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3643.127, 1559.076),\n     \"Apogee_km\": gaussian(35717.895, 1846.176),\n     \"Perigee_km\": gaussian(35621.851, 1906.675),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1430.762, 76.902),\n     \"Inclination_radians\": gaussian(0.015, 0.101),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1253.347, 1034.319),\n     \"Apogee_km\": gaussian(839.937, 295.040),\n     \"Perigee_km\": gaussian(716.170, 229.815),\n     \"Type_of_Orbit\": categorical([0.829, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.059, 0.024, 0.012, 0.118, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.071, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.094, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.025, 4.299),\n     \"Inclination_radians\": gaussian(1.707, 0.174),\n     \"Users\": categorical([0.018, 0.035, 0.211, 0.035, 0.018, 0.035, 0.053, 0.298, 0.018, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.070]),\n     \"Class_of_Orbit\": categorical([0.884, 0.023, 0.070, 0.023]),\n     \"Launch_Site\": categorical([0.078, 0.016, 0.016, 0.391, 0.078, 0.016, 0.031, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2860.591, 1236.536),\n     \"Apogee_km\": gaussian(33149.953, 32356.713),\n     \"Perigee_km\": gaussian(23266.029, 13626.052),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(1011.274, 935.714),\n     \"Inclination_radians\": gaussian(0.868, 0.474),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.975, 0.271),\n     \"Apogee_km\": gaussian(694.031, 8.107),\n     \"Perigee_km\": gaussian(675.887, 1.459),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.530, 0.369),\n     \"Inclination_radians\": gaussian(1.715, 0.114),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.053, 0.007, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.037)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.327, 0.549)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.010, 0.152)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.246, 0.023, 0.568, 0.100, 0.047, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(69.235, 108.766),\n     \"Apogee_km\": gaussian(698.147, 116.825),\n     \"Perigee_km\": gaussian(599.348, 107.747),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.058, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.067, 0.008, 0.325, 0.017, 0.008, 0.083, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.671, 1.859),\n     \"Inclination_radians\": gaussian(1.526, 0.439),\n     \"Users\": categorical([0.011, 0.076, 0.033, 0.022, 0.011, 0.033, 0.033, 0.207, 0.196, 0.011, 0.022, 0.011, 0.011, 0.283, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.141, 0.030, 0.020, 0.172, 0.051, 0.020, 0.020, 0.010, 0.081, 0.010, 0.010, 0.020, 0.010, 0.152, 0.010, 0.010, 0.020, 0.030, 0.010, 0.010, 0.030, 0.051, 0.010, 0.061, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1653.986, 2008.781),\n     \"Apogee_km\": gaussian(701.804, 6.216),\n     \"Perigee_km\": gaussian(694.120, 12.808),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.710, 0.216),\n     \"Inclination_radians\": gaussian(1.713, 0.041),\n     \"Users\": categorical([0.040, 0.080, 0.040, 0.040, 0.040, 0.040, 0.040, 0.240, 0.040, 0.040, 0.040, 0.040, 0.040, 0.080, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.727, 0.091, 0.091, 0.091]),\n     \"Launch_Site\": categorical([0.031, 0.031, 0.031, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3635.235, 1598.370),\n     \"Apogee_km\": gaussian(35661.610, 1909.533),\n     \"Perigee_km\": gaussian(35562.175, 1914.667),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1430.927, 77.393),\n     \"Inclination_radians\": gaussian(0.014, 0.102),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1225.832, 977.932),\n     \"Apogee_km\": gaussian(897.484, 300.912),\n     \"Perigee_km\": gaussian(740.210, 246.501),\n     \"Purpose\": categorical([0.013, 0.092, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.053, 0.026, 0.013, 0.066, 0.013, 0.013, 0.013, 0.053, 0.013, 0.026, 0.013, 0.079, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.066, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(101.226, 4.054),\n     \"Inclination_radians\": gaussian(1.669, 0.313),\n     \"Users\": categorical([0.021, 0.021, 0.250, 0.042, 0.021, 0.042, 0.021, 0.229, 0.021, 0.021, 0.021, 0.042, 0.021, 0.083, 0.021, 0.021, 0.021, 0.083]),\n     \"Class_of_Orbit\": categorical([0.853, 0.029, 0.088, 0.029]),\n     \"Launch_Site\": categorical([0.055, 0.036, 0.018, 0.345, 0.073, 0.018, 0.036, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.055, 0.018])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2724.749, 1327.023),\n     \"Apogee_km\": gaussian(34466.817, 32531.694),\n     \"Perigee_km\": gaussian(24748.737, 12583.306),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1030.634, 1024.815),\n     \"Inclination_radians\": gaussian(0.907, 0.470),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.922, 0.568),\n     \"Apogee_km\": gaussian(694.185, 8.466),\n     \"Perigee_km\": gaussian(675.787, 1.742),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.469, 0.244),\n     \"Inclination_radians\": gaussian(1.716, 0.070),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.802, 7.604),\n     \"Apogee_km\": gaussian(710.664, 3.841),\n     \"Perigee_km\": gaussian(671.201, 4.177),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.629, 0.860),\n     \"Inclination_radians\": gaussian(1.714, 0.394),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.053, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006),\n     \"Type_of_Orbit\": categorical([0.892, 0.011, 0.054, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.037),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.296, 0.575),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.136, 0.568, 0.233, 0.047, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1235.430, 1203.545),\n     \"Apogee_km\": gaussian(815.855, 286.933),\n     \"Perigee_km\": gaussian(719.611, 232.601),\n     \"Type_of_Orbit\": categorical([0.829, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.011, 0.080, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.057, 0.023, 0.011, 0.115, 0.011, 0.011, 0.011, 0.046, 0.011, 0.023, 0.011, 0.069, 0.023, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.103, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(100.115, 4.325),\n     \"Inclination_radians\": gaussian(1.688, 0.258),\n     \"Users\": categorical([0.017, 0.034, 0.203, 0.034, 0.017, 0.034, 0.051, 0.322, 0.017, 0.017, 0.017, 0.034, 0.017, 0.068, 0.017, 0.017, 0.017, 0.068]),\n     \"Class_of_Orbit\": categorical([0.889, 0.022, 0.067, 0.022]),\n     \"Launch_Site\": categorical([0.076, 0.015, 0.015, 0.394, 0.076, 0.015, 0.030, 0.015, 0.045, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015, 0.030, 0.015, 0.015, 0.045, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3639.347, 1511.860),\n     \"Apogee_km\": gaussian(35675.291, 1872.471),\n     \"Perigee_km\": gaussian(35636.212, 1874.931),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1431.482, 77.084),\n     \"Inclination_radians\": gaussian(0.016, 0.107),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(51.332, 81.141),\n     \"Apogee_km\": gaussian(716.443, 118.049),\n     \"Perigee_km\": gaussian(610.444, 108.306),\n     \"Type_of_Orbit\": categorical([0.900, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.017, 0.009, 0.060, 0.009, 0.009, 0.009, 0.009, 0.017, 0.017, 0.069, 0.009, 0.328, 0.017, 0.009, 0.052, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.069, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.946, 1.779),\n     \"Inclination_radians\": gaussian(1.521, 0.451),\n     \"Users\": categorical([0.011, 0.080, 0.034, 0.023, 0.011, 0.034, 0.011, 0.182, 0.205, 0.011, 0.023, 0.011, 0.011, 0.307, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.126, 0.042, 0.021, 0.168, 0.042, 0.021, 0.021, 0.011, 0.084, 0.011, 0.011, 0.021, 0.011, 0.158, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.032, 0.063, 0.011, 0.063, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2678.678, 1297.051),\n     \"Apogee_km\": gaussian(35500.766, 32847.624),\n     \"Perigee_km\": gaussian(26002.925, 12933.318),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1061.060, 1000.119),\n     \"Inclination_radians\": gaussian(0.897, 0.473),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.673, 1.053),\n     \"Apogee_km\": gaussian(693.747, 7.708),\n     \"Perigee_km\": gaussian(675.418, 2.582),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.520, 0.501),\n     \"Inclination_radians\": gaussian(1.717, 0.123),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.486, 5.142),\n     \"Apogee_km\": gaussian(710.326, 2.800),\n     \"Perigee_km\": gaussian(670.278, 4.919),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.781, 1.404),\n     \"Inclination_radians\": gaussian(1.701, 0.335),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.934, 0.060, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.036)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.361, 0.539)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.123, 0.568, 0.003, 0.223, 0.050, 0.013, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(959.919, 714.573),\n     \"Apogee_km\": gaussian(842.381, 290.404),\n     \"Perigee_km\": gaussian(735.818, 241.720),\n     \"Purpose\": categorical([0.012, 0.084, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.072, 0.024, 0.012, 0.108, 0.012, 0.012, 0.012, 0.048, 0.012, 0.012, 0.012, 0.072, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.072, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.119, 4.352),\n     \"Inclination_radians\": gaussian(1.715, 0.181),\n     \"Users\": categorical([0.018, 0.018, 0.218, 0.036, 0.018, 0.036, 0.055, 0.273, 0.018, 0.018, 0.018, 0.036, 0.018, 0.091, 0.018, 0.018, 0.018, 0.073]),\n     \"Class_of_Orbit\": categorical([0.878, 0.024, 0.073, 0.024]),\n     \"Launch_Site\": categorical([0.081, 0.032, 0.016, 0.339, 0.081, 0.016, 0.032, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.032, 0.016, 0.048, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3583.743, 1570.844),\n     \"Apogee_km\": gaussian(35795.475, 1847.617),\n     \"Perigee_km\": gaussian(35591.133, 1903.372),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1431.053, 75.615),\n     \"Inclination_radians\": gaussian(0.019, 0.102),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.527, 6.876),\n     \"Apogee_km\": gaussian(710.515, 2.579),\n     \"Perigee_km\": gaussian(670.916, 4.163),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.590, 0.616),\n     \"Inclination_radians\": gaussian(1.701, 0.192),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(52.070, 81.617),\n     \"Apogee_km\": gaussian(708.774, 116.284),\n     \"Perigee_km\": gaussian(603.865, 105.919),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.018, 0.009, 0.062, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.071, 0.009, 0.327, 0.018, 0.009, 0.053, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.053, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.821, 1.691),\n     \"Inclination_radians\": gaussian(1.488, 0.465),\n     \"Users\": categorical([0.012, 0.082, 0.035, 0.024, 0.012, 0.035, 0.012, 0.176, 0.212, 0.012, 0.024, 0.012, 0.012, 0.294, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.130, 0.033, 0.022, 0.174, 0.043, 0.022, 0.022, 0.011, 0.087, 0.011, 0.011, 0.022, 0.011, 0.163, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.033, 0.043, 0.011, 0.065, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2940.308, 1311.055),\n     \"Apogee_km\": gaussian(33704.009, 33476.311),\n     \"Perigee_km\": gaussian(23866.022, 14920.740),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(994.192, 952.142),\n     \"Inclination_radians\": gaussian(0.882, 0.447),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.944, 0.589),\n     \"Apogee_km\": gaussian(694.627, 8.607),\n     \"Perigee_km\": gaussian(675.636, 1.804),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.464, 0.112),\n     \"Inclination_radians\": gaussian(1.713, 0.099),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1763.009, 2010.841),\n     \"Apogee_km\": gaussian(703.804, 2.936),\n     \"Perigee_km\": gaussian(696.646, 11.868),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.058, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.746, 0.122),\n     \"Inclination_radians\": gaussian(1.710, 0.070),\n     \"Users\": categorical([0.042, 0.083, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.042, 0.083, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.063, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.389, 0.466)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\nfunction view_4() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Type_of_Orbit\": categorical([0.883, 0.021, 0.053, 0.011, 0.011, 0.011, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3(), ...view_4()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.003, 0.568, 0.322, 0.030, 0.047, 0.013, 0.017]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.256, 6.595),\n     \"Apogee_km\": gaussian(710.095, 1.230),\n     \"Perigee_km\": gaussian(671.403, 5.767),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.723, 0.408),\n     \"Inclination_radians\": gaussian(1.704, 0.375),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3512.128, 1527.839),\n     \"Apogee_km\": gaussian(35755.256, 1988.216),\n     \"Perigee_km\": gaussian(35667.236, 1869.695),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1428.675, 73.443),\n     \"Inclination_radians\": gaussian(0.022, 0.101),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(422.068, 746.896),\n     \"Apogee_km\": gaussian(701.802, 120.138),\n     \"Perigee_km\": gaussian(631.787, 117.461),\n     \"Type_of_Orbit\": categorical([0.926, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.049, 0.007, 0.014, 0.007, 0.049, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.056, 0.007, 0.273, 0.014, 0.007, 0.098, 0.007, 0.014, 0.007, 0.007, 0.007, 0.014, 0.007, 0.084, 0.014, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.042, 0.007, 0.014, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.264, 2.125),\n     \"Inclination_radians\": gaussian(1.574, 0.409),\n     \"Users\": categorical([0.009, 0.061, 0.096, 0.026, 0.009, 0.026, 0.026, 0.252, 0.157, 0.009, 0.017, 0.009, 0.009, 0.235, 0.009, 0.009, 0.009, 0.035]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.123, 0.033, 0.016, 0.238, 0.066, 0.016, 0.016, 0.008, 0.082, 0.008, 0.008, 0.016, 0.008, 0.123, 0.008, 0.008, 0.016, 0.025, 0.008, 0.008, 0.033, 0.049, 0.008, 0.066, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(154.179, 235.146),\n     \"Apogee_km\": gaussian(1258.761, 251.423),\n     \"Perigee_km\": gaussian(736.206, 466.002),\n     \"Type_of_Orbit\": categorical([0.333, 0.111, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.073, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.073, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(105.100, 4.677),\n     \"Inclination_radians\": gaussian(1.707, 0.384),\n     \"Users\": categorical([0.037, 0.037, 0.148, 0.037, 0.037, 0.074, 0.037, 0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.148, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.615, 0.077, 0.231, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.235, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2700.322, 1336.409),\n     \"Apogee_km\": gaussian(33385.423, 32586.265),\n     \"Perigee_km\": gaussian(25916.525, 12752.723),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1058.785, 1004.608),\n     \"Inclination_radians\": gaussian(0.910, 0.478),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.975, 0.637),\n     \"Apogee_km\": gaussian(693.997, 7.209),\n     \"Perigee_km\": gaussian(675.796, 1.620),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.506, 0.220),\n     \"Inclination_radians\": gaussian(1.710, 0.082),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2069.603, 2123.558),\n     \"Apogee_km\": gaussian(703.684, 2.565),\n     \"Perigee_km\": gaussian(699.210, 10.618),\n     \"Type_of_Orbit\": categorical([0.500, 0.083, 0.083, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.818, 0.086),\n     \"Inclination_radians\": gaussian(1.718, 0.066),\n     \"Users\": categorical([0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.200, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.047, 0.010, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.041)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.318, 0.421)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.171)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.130, 0.243, 0.568, 0.047, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1299.153, 1183.845),\n     \"Apogee_km\": gaussian(832.753, 283.513),\n     \"Perigee_km\": gaussian(720.706, 223.906),\n     \"Type_of_Orbit\": categorical([0.829, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.047, 0.024, 0.012, 0.118, 0.012, 0.012, 0.012, 0.047, 0.012, 0.024, 0.012, 0.071, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.094, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.344, 4.019),\n     \"Inclination_radians\": gaussian(1.684, 0.272),\n     \"Users\": categorical([0.018, 0.035, 0.211, 0.035, 0.018, 0.035, 0.053, 0.298, 0.018, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.070]),\n     \"Class_of_Orbit\": categorical([0.884, 0.023, 0.070, 0.023]),\n     \"Launch_Site\": categorical([0.078, 0.016, 0.016, 0.391, 0.063, 0.016, 0.031, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016, 0.016, 0.031, 0.016, 0.016, 0.047, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(50.611, 84.148),\n     \"Apogee_km\": gaussian(710.104, 114.786),\n     \"Perigee_km\": gaussian(609.315, 103.057),\n     \"Type_of_Orbit\": categorical([0.902, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.067, 0.008, 0.328, 0.017, 0.008, 0.050, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.067, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.869, 1.767),\n     \"Inclination_radians\": gaussian(1.522, 0.446),\n     \"Users\": categorical([0.011, 0.077, 0.033, 0.022, 0.011, 0.033, 0.011, 0.209, 0.198, 0.011, 0.022, 0.011, 0.011, 0.297, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.122, 0.041, 0.020, 0.184, 0.051, 0.020, 0.020, 0.010, 0.082, 0.010, 0.010, 0.020, 0.010, 0.153, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.031, 0.061, 0.010, 0.061, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3682.540, 1534.585),\n     \"Apogee_km\": gaussian(35716.226, 1926.570),\n     \"Perigee_km\": gaussian(35763.181, 1892.134),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1432.956, 75.020),\n     \"Inclination_radians\": gaussian(0.019, 0.104),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2799.863, 1273.551),\n     \"Apogee_km\": gaussian(33709.004, 33208.819),\n     \"Perigee_km\": gaussian(25756.993, 12491.842),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(969.990, 964.057),\n     \"Inclination_radians\": gaussian(0.893, 0.476),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.880, 0.634),\n     \"Apogee_km\": gaussian(694.262, 8.579),\n     \"Perigee_km\": gaussian(675.860, 1.488),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.558, 0.569),\n     \"Inclination_radians\": gaussian(1.715, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.920, 0.073, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.035)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.393, 0.469)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.568, 0.239, 0.130, 0.047, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3576.159, 1498.377),\n     \"Apogee_km\": gaussian(35702.227, 1952.551),\n     \"Perigee_km\": gaussian(35709.267, 1925.290),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1429.081, 73.892),\n     \"Inclination_radians\": gaussian(0.020, 0.106),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(58.282, 99.571),\n     \"Apogee_km\": gaussian(706.363, 115.086),\n     \"Perigee_km\": gaussian(610.465, 106.471),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.008, 0.008, 0.008, 0.008, 0.017, 0.017, 0.068, 0.008, 0.314, 0.017, 0.008, 0.068, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.932, 1.846),\n     \"Inclination_radians\": gaussian(1.532, 0.446),\n     \"Users\": categorical([0.011, 0.078, 0.033, 0.022, 0.011, 0.033, 0.022, 0.189, 0.200, 0.011, 0.022, 0.011, 0.011, 0.300, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.134, 0.041, 0.021, 0.175, 0.031, 0.021, 0.021, 0.010, 0.082, 0.010, 0.010, 0.021, 0.010, 0.155, 0.010, 0.010, 0.021, 0.021, 0.010, 0.010, 0.031, 0.062, 0.010, 0.062, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1378.085, 1214.012),\n     \"Apogee_km\": gaussian(819.143, 288.566),\n     \"Perigee_km\": gaussian(697.378, 226.600),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.071, 0.024, 0.012, 0.094, 0.012, 0.012, 0.012, 0.047, 0.012, 0.024, 0.012, 0.071, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.094, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.490, 4.380),\n     \"Inclination_radians\": gaussian(1.668, 0.262),\n     \"Users\": categorical([0.018, 0.035, 0.211, 0.035, 0.018, 0.035, 0.035, 0.316, 0.018, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.070]),\n     \"Class_of_Orbit\": categorical([0.884, 0.023, 0.070, 0.023]),\n     \"Launch_Site\": categorical([0.063, 0.016, 0.016, 0.391, 0.094, 0.016, 0.031, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.031, 0.016, 0.016, 0.047, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2614.917, 1264.842),\n     \"Apogee_km\": gaussian(34607.672, 32385.107),\n     \"Perigee_km\": gaussian(25026.558, 12569.651),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1028.469, 975.523),\n     \"Inclination_radians\": gaussian(0.882, 0.493),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.103, 0.026, 0.026, 0.026, 0.051])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.967, 0.189),\n     \"Apogee_km\": gaussian(693.892, 8.070),\n     \"Perigee_km\": gaussian(675.772, 1.636),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.466, 0.152),\n     \"Inclination_radians\": gaussian(1.711, 0.105),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(117.115, 7.191),\n     \"Apogee_km\": gaussian(710.327, 2.819),\n     \"Perigee_km\": gaussian(671.099, 4.986),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.578, 0.473),\n     \"Inclination_radians\": gaussian(1.705, 0.317),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.950, 0.043, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.002, 0.007),\n     \"Type_of_Orbit\": categorical([0.892, 0.011, 0.054, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.044, 0.040),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.408, 0.571),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125])\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.239, 0.568, 0.130, 0.050, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(55.812, 85.255),\n     \"Apogee_km\": gaussian(719.231, 113.763),\n     \"Perigee_km\": gaussian(600.171, 105.221),\n     \"Type_of_Orbit\": categorical([0.903, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.017, 0.008, 0.059, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.068, 0.008, 0.314, 0.017, 0.008, 0.059, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.040, 1.770),\n     \"Inclination_radians\": gaussian(1.551, 0.442),\n     \"Users\": categorical([0.011, 0.078, 0.033, 0.022, 0.011, 0.033, 0.022, 0.189, 0.200, 0.011, 0.022, 0.011, 0.011, 0.300, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.124, 0.041, 0.021, 0.186, 0.031, 0.021, 0.021, 0.010, 0.082, 0.010, 0.010, 0.021, 0.010, 0.155, 0.010, 0.010, 0.021, 0.021, 0.010, 0.010, 0.031, 0.062, 0.010, 0.062, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3582.671, 1537.865),\n     \"Apogee_km\": gaussian(35670.509, 1918.895),\n     \"Perigee_km\": gaussian(35721.524, 1910.540),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.028, 0.005, 0.005, 0.700, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.018, 0.005, 0.018, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.023, 0.005]),\n     \"Period_minutes\": gaussian(1431.161, 75.123),\n     \"Inclination_radians\": gaussian(0.024, 0.104),\n     \"Users\": categorical([0.005, 0.005, 0.138, 0.005, 0.005, 0.005, 0.032, 0.069, 0.672, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005]),\n     \"Class_of_Orbit\": categorical([0.006, 0.983, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.265, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.026, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.092, 0.005, 0.194, 0.005, 0.026, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1217.919, 1075.145),\n     \"Apogee_km\": gaussian(836.824, 277.019),\n     \"Perigee_km\": gaussian(694.862, 233.351),\n     \"Type_of_Orbit\": categorical([0.824, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.071, 0.024, 0.012, 0.106, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.071, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.094, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.338, 4.371),\n     \"Inclination_radians\": gaussian(1.707, 0.170),\n     \"Users\": categorical([0.018, 0.035, 0.211, 0.035, 0.018, 0.035, 0.035, 0.316, 0.018, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.070]),\n     \"Class_of_Orbit\": categorical([0.884, 0.023, 0.070, 0.023]),\n     \"Launch_Site\": categorical([0.078, 0.016, 0.016, 0.391, 0.094, 0.016, 0.031, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2824.838, 1271.674),\n     \"Apogee_km\": gaussian(34120.022, 33057.369),\n     \"Perigee_km\": gaussian(23367.520, 13887.493),\n     \"Type_of_Orbit\": categorical([0.125, 0.250, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(1015.687, 1002.862),\n     \"Inclination_radians\": gaussian(0.850, 0.493),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.105, 0.421, 0.158, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.993, 0.243),\n     \"Apogee_km\": gaussian(694.075, 8.682),\n     \"Perigee_km\": gaussian(675.978, 1.549),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.469, 0.469),\n     \"Inclination_radians\": gaussian(1.710, 0.072),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.944, 0.047, 0.003, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.007)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.035)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.040, 0.145)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.324, 0.553)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.005, 0.005, 0.003, 0.013, 0.003, 0.003, 0.008, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.005, 0.003, 0.003, 0.013, 0.005, 0.003, 0.003, 0.003, 0.008, 0.005, 0.003, 0.003, 0.032, 0.003, 0.005, 0.100, 0.016, 0.005, 0.003, 0.005, 0.003, 0.026, 0.003, 0.003, 0.003, 0.003, 0.003, 0.037, 0.021, 0.013, 0.005, 0.003, 0.003, 0.103, 0.005, 0.005, 0.005, 0.003, 0.003, 0.003, 0.005, 0.003, 0.047, 0.003, 0.008, 0.003, 0.011, 0.021, 0.003, 0.266, 0.003, 0.003, 0.005, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.005, 0.018, 0.003, 0.018])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.130, 0.469, 0.147, 0.102, 0.010, 0.142]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(38.589, 75.371),\n     \"Apogee_km\": gaussian(713.697, 122.181),\n     \"Perigee_km\": gaussian(584.506, 107.504),\n     \"Type_of_Orbit\": categorical([0.833, 0.024, 0.024, 0.048, 0.024, 0.024, 0.024]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.071, 0.010, 0.296, 0.020, 0.010, 0.061, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.899, 1.877),\n     \"Inclination_radians\": gaussian(1.443, 0.525),\n     \"Users\": categorical([0.014, 0.114, 0.043, 0.029, 0.014, 0.043, 0.014, 0.086, 0.271, 0.014, 0.014, 0.014, 0.014, 0.257, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.130, 0.026, 0.026, 0.221, 0.013, 0.026, 0.026, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.182, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.039, 0.039, 0.013, 0.052, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3633.998, 1532.566),\n     \"Apogee_km\": gaussian(35735.938, 1790.886),\n     \"Perigee_km\": gaussian(35622.323, 1823.560),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1429.861, 71.639),\n     \"Inclination_radians\": gaussian(0.015, 0.103),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(577.403, 232.150),\n     \"Apogee_km\": gaussian(1336.112, 231.595),\n     \"Perigee_km\": gaussian(1237.054, 335.627),\n     \"Type_of_Orbit\": categorical([0.054, 0.018, 0.018, 0.857, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.457, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.057, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.038, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(111.481, 5.274),\n     \"Inclination_radians\": gaussian(1.050, 0.347),\n     \"Users\": categorical([0.013, 0.013, 0.052, 0.013, 0.013, 0.026, 0.013, 0.039, 0.649, 0.013, 0.013, 0.026, 0.013, 0.052, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.921, 0.016, 0.048, 0.016]),\n     \"Launch_Site\": categorical([0.512, 0.012, 0.012, 0.095, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.095, 0.012, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1887.400, 1070.796),\n     \"Apogee_km\": gaussian(26215.490, 22969.296),\n     \"Perigee_km\": gaussian(21175.214, 8780.322),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(850.276, 632.521),\n     \"Inclination_radians\": gaussian(1.009, 0.317),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.010, 0.489),\n     \"Apogee_km\": gaussian(693.730, 8.019),\n     \"Perigee_km\": gaussian(675.743, 1.737),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.472, 0.285),\n     \"Inclination_radians\": gaussian(1.710, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(852.478, 984.634),\n     \"Apogee_km\": gaussian(695.135, 109.200),\n     \"Perigee_km\": gaussian(682.068, 109.900),\n     \"Type_of_Orbit\": categorical([0.895, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.068, 0.010, 0.029, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.019, 0.010, 0.019, 0.010, 0.117, 0.010, 0.010, 0.126, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.117, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.097, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.514, 2.266),\n     \"Inclination_radians\": gaussian(1.713, 0.016),\n     \"Users\": categorical([0.013, 0.027, 0.120, 0.027, 0.013, 0.013, 0.040, 0.400, 0.013, 0.013, 0.027, 0.027, 0.013, 0.147, 0.013, 0.013, 0.027, 0.053]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.061, 0.049, 0.012, 0.268, 0.098, 0.012, 0.012, 0.012, 0.122, 0.012, 0.012, 0.012, 0.024, 0.049, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.049, 0.012, 0.061, 0.012])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.055, 0.007, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.026, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.434, 0.593)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.106)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.097, 0.284, 0.469, 0.112, 0.002, 0.010, 0.020, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1756.645, 1048.714),\n     \"Apogee_km\": gaussian(28410.495, 23742.942),\n     \"Perigee_km\": gaussian(21903.871, 7665.495),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.424, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012]),\n     \"Period_minutes\": gaussian(943.406, 639.959),\n     \"Inclination_radians\": gaussian(1.008, 0.301),\n     \"Users\": categorical([0.018, 0.018, 0.228, 0.018, 0.018, 0.018, 0.386, 0.053, 0.070, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.023, 0.186, 0.070, 0.721]),\n     \"Launch_Site\": categorical([0.328, 0.016, 0.016, 0.016, 0.016, 0.016, 0.078, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.172, 0.016, 0.078, 0.031, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(413.782, 704.746),\n     \"Apogee_km\": gaussian(746.486, 192.107),\n     \"Perigee_km\": gaussian(637.332, 155.458),\n     \"Type_of_Orbit\": categorical([0.895, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.006, 0.044, 0.006, 0.031, 0.006, 0.044, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.050, 0.006, 0.275, 0.019, 0.006, 0.106, 0.006, 0.013, 0.006, 0.025, 0.006, 0.013, 0.006, 0.075, 0.013, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.050, 0.006, 0.013, 0.006, 0.006, 0.006, 0.019, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.677, 2.884),\n     \"Inclination_radians\": gaussian(1.555, 0.411),\n     \"Users\": categorical([0.008, 0.061, 0.106, 0.023, 0.008, 0.030, 0.023, 0.242, 0.174, 0.008, 0.015, 0.023, 0.008, 0.212, 0.008, 0.008, 0.015, 0.030]),\n     \"Class_of_Orbit\": categorical([0.958, 0.008, 0.025, 0.008]),\n     \"Launch_Site\": categorical([0.129, 0.036, 0.014, 0.273, 0.058, 0.014, 0.022, 0.007, 0.072, 0.007, 0.007, 0.022, 0.007, 0.129, 0.014, 0.007, 0.014, 0.022, 0.007, 0.007, 0.029, 0.029, 0.007, 0.058, 0.007])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3641.765, 1490.056),\n     \"Apogee_km\": gaussian(35735.290, 1836.480),\n     \"Perigee_km\": gaussian(35619.693, 1822.747),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1428.177, 71.036),\n     \"Inclination_radians\": gaussian(0.015, 0.099),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(564.756, 135.378),\n     \"Apogee_km\": gaussian(1411.494, 93.808),\n     \"Perigee_km\": gaussian(1393.538, 110.115),\n     \"Type_of_Orbit\": categorical([0.019, 0.019, 0.019, 0.885, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.505, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(114.020, 1.715),\n     \"Inclination_radians\": gaussian(0.923, 0.106),\n     \"Users\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.730, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.939, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.557, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.114, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.042, 4.635),\n     \"Apogee_km\": gaussian(710.407, 2.072),\n     \"Perigee_km\": gaussian(670.270, 2.686),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.620, 0.609),\n     \"Inclination_radians\": gaussian(1.705, 0.126),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.842, 0.874),\n     \"Apogee_km\": gaussian(694.178, 7.788),\n     \"Perigee_km\": gaussian(675.460, 2.505),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.460, 0.162),\n     \"Inclination_radians\": gaussian(1.713, 0.055),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1671.257, 1799.279),\n     \"Apogee_km\": gaussian(703.583, 2.327),\n     \"Perigee_km\": gaussian(694.951, 13.094),\n     \"Type_of_Orbit\": categorical([0.600, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.056, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.748, 0.142),\n     \"Inclination_radians\": gaussian(1.712, 0.040),\n     \"Users\": categorical([0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.231, 0.038, 0.038, 0.038, 0.038, 0.038, 0.115, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.750, 0.083, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.030, 0.030, 0.030, 0.182, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(52.578, 221.947),\n     \"Apogee_km\": gaussian(3134.140, 4184.374),\n     \"Perigee_km\": gaussian(780.442, 946.226),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(126.984, 47.426),\n     \"Inclination_radians\": gaussian(1.579, 0.308),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.333, 0.167, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.052, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.035)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.381, 0.542)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.469, 0.165, 0.145, 0.102, 0.010, 0.110]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3565.088, 1469.741),\n     \"Apogee_km\": gaussian(35653.994, 1767.259),\n     \"Perigee_km\": gaussian(35584.039, 1856.962),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1433.755, 71.917),\n     \"Inclination_radians\": gaussian(0.018, 0.094),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(45.514, 83.315),\n     \"Apogee_km\": gaussian(707.116, 121.816),\n     \"Perigee_km\": gaussian(580.717, 100.705),\n     \"Type_of_Orbit\": categorical([0.870, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.018, 0.009, 0.063, 0.018, 0.009, 0.009, 0.009, 0.018, 0.009, 0.071, 0.009, 0.339, 0.018, 0.009, 0.063, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.606, 1.826),\n     \"Inclination_radians\": gaussian(1.488, 0.465),\n     \"Users\": categorical([0.012, 0.095, 0.036, 0.024, 0.012, 0.036, 0.024, 0.131, 0.214, 0.012, 0.024, 0.012, 0.012, 0.310, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.099, 0.022, 0.022, 0.198, 0.044, 0.022, 0.022, 0.011, 0.077, 0.011, 0.011, 0.033, 0.011, 0.176, 0.011, 0.011, 0.022, 0.022, 0.011, 0.011, 0.033, 0.055, 0.011, 0.044, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(556.606, 231.851),\n     \"Apogee_km\": gaussian(1348.584, 212.672),\n     \"Perigee_km\": gaussian(1245.940, 334.670),\n     \"Type_of_Orbit\": categorical([0.054, 0.018, 0.018, 0.857, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.462, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.058, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.038, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(111.588, 5.192),\n     \"Inclination_radians\": gaussian(1.048, 0.334),\n     \"Users\": categorical([0.013, 0.013, 0.053, 0.013, 0.013, 0.026, 0.013, 0.026, 0.658, 0.013, 0.013, 0.026, 0.013, 0.053, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.919, 0.016, 0.048, 0.016]),\n     \"Launch_Site\": categorical([0.506, 0.012, 0.012, 0.096, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.096, 0.012, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1889.971, 1077.172),\n     \"Apogee_km\": gaussian(25549.681, 25143.045),\n     \"Perigee_km\": gaussian(20596.584, 9511.511),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(870.452, 647.963),\n     \"Inclination_radians\": gaussian(1.002, 0.320),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.911, 0.419),\n     \"Apogee_km\": gaussian(694.379, 7.544),\n     \"Perigee_km\": gaussian(675.841, 1.558),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.477, 0.531),\n     \"Inclination_radians\": gaussian(1.712, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1065.530, 1031.709),\n     \"Apogee_km\": gaussian(720.437, 106.315),\n     \"Perigee_km\": gaussian(705.030, 102.472),\n     \"Type_of_Orbit\": categorical([0.867, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.011, 0.078, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.033, 0.011, 0.011, 0.133, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.133, 0.022, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.111, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(99.076, 2.176),\n     \"Inclination_radians\": gaussian(1.713, 0.024),\n     \"Users\": categorical([0.016, 0.032, 0.145, 0.032, 0.016, 0.016, 0.032, 0.419, 0.032, 0.016, 0.016, 0.032, 0.016, 0.048, 0.016, 0.016, 0.032, 0.065]),\n     \"Class_of_Orbit\": categorical([0.938, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.101, 0.058, 0.014, 0.304, 0.072, 0.014, 0.014, 0.014, 0.058, 0.014, 0.014, 0.014, 0.029, 0.029, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.029, 0.014, 0.072, 0.014])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.060, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.528, 0.379)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.107, 0.469, 0.112, 0.200, 0.102, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(206.860, 369.186),\n     \"Apogee_km\": gaussian(824.929, 280.779),\n     \"Perigee_km\": gaussian(617.869, 245.695),\n     \"Type_of_Orbit\": categorical([0.625, 0.042, 0.042, 0.167, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.045, 0.011, 0.270, 0.022, 0.011, 0.067, 0.011, 0.022, 0.011, 0.045, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(99.466, 4.269),\n     \"Inclination_radians\": gaussian(1.267, 0.558),\n     \"Users\": categorical([0.016, 0.115, 0.098, 0.033, 0.016, 0.066, 0.016, 0.115, 0.180, 0.016, 0.016, 0.033, 0.016, 0.197, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.894, 0.021, 0.064, 0.021]),\n     \"Launch_Site\": categorical([0.132, 0.015, 0.029, 0.353, 0.015, 0.029, 0.029, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.029, 0.029, 0.015, 0.029, 0.015, 0.015, 0.015, 0.044, 0.029, 0.015, 0.029, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3675.943, 1568.315),\n     \"Apogee_km\": gaussian(35687.687, 1834.429),\n     \"Perigee_km\": gaussian(35442.846, 1839.680),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1428.833, 70.890),\n     \"Inclination_radians\": gaussian(0.019, 0.094),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(564.870, 137.426),\n     \"Apogee_km\": gaussian(1416.259, 90.505),\n     \"Perigee_km\": gaussian(1392.860, 112.329),\n     \"Type_of_Orbit\": categorical([0.019, 0.019, 0.019, 0.885, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.505, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(114.019, 1.421),\n     \"Inclination_radians\": gaussian(0.920, 0.107),\n     \"Users\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.730, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.939, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.557, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.114, 0.014, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(664.390, 974.842),\n     \"Apogee_km\": gaussian(705.144, 102.069),\n     \"Perigee_km\": gaussian(661.247, 103.010),\n     \"Type_of_Orbit\": categorical([0.924, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.024, 0.008, 0.056, 0.016, 0.008, 0.008, 0.008, 0.016, 0.016, 0.040, 0.008, 0.175, 0.016, 0.008, 0.103, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.095, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.079, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.413, 2.142),\n     \"Inclination_radians\": gaussian(1.712, 0.014),\n     \"Users\": categorical([0.010, 0.031, 0.092, 0.020, 0.010, 0.010, 0.031, 0.316, 0.133, 0.010, 0.020, 0.020, 0.010, 0.204, 0.010, 0.010, 0.020, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.095, 0.048, 0.010, 0.210, 0.076, 0.010, 0.019, 0.010, 0.095, 0.010, 0.010, 0.010, 0.019, 0.162, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.048, 0.010, 0.067, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1865.199, 1061.799),\n     \"Apogee_km\": gaussian(27002.177, 23534.494),\n     \"Perigee_km\": gaussian(21460.555, 8753.716),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(869.944, 621.968),\n     \"Inclination_radians\": gaussian(1.001, 0.319),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.978, 0.500),\n     \"Apogee_km\": gaussian(694.379, 8.453),\n     \"Perigee_km\": gaussian(675.851, 1.632),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.873, 1.791),\n     \"Inclination_radians\": gaussian(1.715, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.055, 0.010, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.026, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.440, 0.484)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.017, 0.099)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.102, 0.469, 0.202, 0.190, 0.010, 0.027]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1829.750, 1113.288),\n     \"Apogee_km\": gaussian(27344.895, 23236.120),\n     \"Perigee_km\": gaussian(21017.739, 9019.148),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(855.838, 638.062),\n     \"Inclination_radians\": gaussian(0.995, 0.313),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3624.788, 1431.759),\n     \"Apogee_km\": gaussian(35666.352, 1899.169),\n     \"Perigee_km\": gaussian(35587.432, 1818.618),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1430.318, 71.109),\n     \"Inclination_radians\": gaussian(0.023, 0.102),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(97.375, 175.423),\n     \"Apogee_km\": gaussian(698.396, 121.960),\n     \"Perigee_km\": gaussian(599.110, 102.305),\n     \"Type_of_Orbit\": categorical([0.908, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.024, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.063, 0.008, 0.307, 0.016, 0.008, 0.102, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.063, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.031, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.726, 1.820),\n     \"Inclination_radians\": gaussian(1.530, 0.419),\n     \"Users\": categorical([0.010, 0.081, 0.040, 0.020, 0.010, 0.030, 0.030, 0.232, 0.192, 0.010, 0.020, 0.010, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.142, 0.038, 0.019, 0.160, 0.047, 0.019, 0.019, 0.009, 0.094, 0.009, 0.009, 0.028, 0.009, 0.160, 0.009, 0.009, 0.019, 0.028, 0.009, 0.009, 0.028, 0.038, 0.009, 0.066, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(784.104, 506.830),\n     \"Apogee_km\": gaussian(1202.129, 320.868),\n     \"Perigee_km\": gaussian(1127.514, 377.329),\n     \"Type_of_Orbit\": categorical([0.250, 0.014, 0.014, 0.681, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.057, 0.008, 0.393, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.049, 0.016, 0.008, 0.033, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.041, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.041, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(109.152, 6.788),\n     \"Inclination_radians\": gaussian(1.212, 0.404),\n     \"Users\": categorical([0.011, 0.011, 0.117, 0.021, 0.011, 0.021, 0.011, 0.085, 0.532, 0.011, 0.011, 0.032, 0.011, 0.043, 0.011, 0.011, 0.011, 0.043]),\n     \"Class_of_Orbit\": categorical([0.938, 0.013, 0.038, 0.013]),\n     \"Launch_Site\": categorical([0.416, 0.020, 0.010, 0.208, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.079, 0.010, 0.010, 0.020, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.976, 0.477),\n     \"Apogee_km\": gaussian(694.124, 7.921),\n     \"Perigee_km\": gaussian(675.760, 1.472),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.461, 0.101),\n     \"Inclination_radians\": gaussian(1.711, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1414.199, 1612.191),\n     \"Apogee_km\": gaussian(701.698, 7.124),\n     \"Perigee_km\": gaussian(689.167, 14.386),\n     \"Type_of_Orbit\": categorical([0.667, 0.056, 0.056, 0.056, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.053, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.088, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(98.670, 0.195),\n     \"Inclination_radians\": gaussian(1.712, 0.033),\n     \"Users\": categorical([0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.276, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.069, 0.034]),\n     \"Class_of_Orbit\": categorical([0.800, 0.067, 0.067, 0.067]),\n     \"Launch_Site\": categorical([0.028, 0.028, 0.028, 0.250, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.083, 0.028, 0.028, 0.028])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.938, 0.050, 0.007, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.529, 0.444)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.097)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.469, 0.145, 0.157, 0.180, 0.010, 0.037, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3638.330, 1456.459),\n     \"Apogee_km\": gaussian(35709.542, 1783.775),\n     \"Perigee_km\": gaussian(35534.473, 1908.240),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1431.848, 69.019),\n     \"Inclination_radians\": gaussian(0.016, 0.094),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(24.831, 36.810),\n     \"Apogee_km\": gaussian(736.904, 99.630),\n     \"Perigee_km\": gaussian(616.460, 103.029),\n     \"Type_of_Orbit\": categorical([0.887, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.077, 0.010, 0.298, 0.019, 0.010, 0.048, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.038, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.217, 1.613),\n     \"Inclination_radians\": gaussian(1.644, 0.272),\n     \"Users\": categorical([0.013, 0.079, 0.026, 0.013, 0.013, 0.039, 0.013, 0.092, 0.237, 0.013, 0.026, 0.013, 0.013, 0.355, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.133, 0.036, 0.012, 0.169, 0.024, 0.024, 0.024, 0.012, 0.084, 0.012, 0.012, 0.012, 0.012, 0.193, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.072, 0.012, 0.060, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1015.102, 1053.116),\n     \"Apogee_km\": gaussian(751.577, 253.866),\n     \"Perigee_km\": gaussian(667.599, 215.274),\n     \"Type_of_Orbit\": categorical([0.851, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.138, 0.018, 0.009, 0.128, 0.009, 0.018, 0.009, 0.037, 0.009, 0.018, 0.009, 0.101, 0.018, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.101, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.968, 3.868),\n     \"Inclination_radians\": gaussian(1.488, 0.487),\n     \"Users\": categorical([0.012, 0.049, 0.160, 0.037, 0.012, 0.025, 0.037, 0.383, 0.049, 0.012, 0.012, 0.037, 0.012, 0.062, 0.012, 0.012, 0.025, 0.049]),\n     \"Class_of_Orbit\": categorical([0.925, 0.015, 0.045, 0.015]),\n     \"Launch_Site\": categorical([0.068, 0.034, 0.023, 0.352, 0.080, 0.011, 0.023, 0.011, 0.045, 0.011, 0.011, 0.034, 0.023, 0.034, 0.023, 0.011, 0.023, 0.034, 0.011, 0.011, 0.045, 0.011, 0.011, 0.045, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(840.551, 419.121),\n     \"Apogee_km\": gaussian(7739.010, 9185.311),\n     \"Perigee_km\": gaussian(7636.754, 8668.137),\n     \"Type_of_Orbit\": categorical([0.019, 0.019, 0.019, 0.889, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.220, 0.008, 0.008, 0.407, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(323.111, 288.797),\n     \"Inclination_radians\": gaussian(0.992, 0.124),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.244, 0.011, 0.567, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.632, 0.013, 0.013, 0.342]),\n     \"Launch_Site\": categorical([0.629, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.021, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.842, 0.825),\n     \"Apogee_km\": gaussian(694.037, 8.054),\n     \"Perigee_km\": gaussian(675.954, 1.575),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.572, 0.607),\n     \"Inclination_radians\": gaussian(1.712, 0.082),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2652.657, 1359.590),\n     \"Apogee_km\": gaussian(40162.391, 36892.256),\n     \"Perigee_km\": gaussian(23728.847, 13279.004),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(1060.251, 1041.165),\n     \"Inclination_radians\": gaussian(0.870, 0.480),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.053, 0.421, 0.211, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.506, 10.144),\n     \"Apogee_km\": gaussian(710.169, 2.489),\n     \"Perigee_km\": gaussian(671.457, 6.552),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.848, 2.442),\n     \"Inclination_radians\": gaussian(1.694, 0.291),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.945, 0.042, 0.007, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.035)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.416, 0.518)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.090)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.469, 0.197, 0.102, 0.010, 0.022]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.348, 105.767),\n     \"Apogee_km\": gaussian(696.520, 125.125),\n     \"Perigee_km\": gaussian(603.719, 105.445),\n     \"Type_of_Orbit\": categorical([0.892, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.024, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.063, 0.008, 0.317, 0.016, 0.008, 0.079, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.071, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.032, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.733, 1.909),\n     \"Inclination_radians\": gaussian(1.533, 0.442),\n     \"Users\": categorical([0.010, 0.082, 0.031, 0.020, 0.010, 0.031, 0.031, 0.214, 0.194, 0.010, 0.020, 0.010, 0.010, 0.286, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.133, 0.038, 0.019, 0.171, 0.048, 0.019, 0.019, 0.010, 0.076, 0.010, 0.010, 0.029, 0.010, 0.162, 0.010, 0.010, 0.019, 0.029, 0.010, 0.010, 0.029, 0.057, 0.010, 0.057, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3680.454, 1460.441),\n     \"Apogee_km\": gaussian(35713.182, 1795.803),\n     \"Perigee_km\": gaussian(35666.228, 1831.048),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1431.704, 68.404),\n     \"Inclination_radians\": gaussian(0.017, 0.102),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(781.817, 478.291),\n     \"Apogee_km\": gaussian(1190.114, 325.292),\n     \"Perigee_km\": gaussian(1138.963, 370.250),\n     \"Type_of_Orbit\": categorical([0.284, 0.014, 0.014, 0.649, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.384, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.048, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.032, 0.008, 0.008, 0.008, 0.040, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(108.136, 7.125),\n     \"Inclination_radians\": gaussian(1.240, 0.403),\n     \"Users\": categorical([0.010, 0.010, 0.124, 0.021, 0.010, 0.021, 0.010, 0.103, 0.515, 0.010, 0.010, 0.031, 0.010, 0.041, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.940, 0.012, 0.036, 0.012]),\n     \"Launch_Site\": categorical([0.413, 0.019, 0.010, 0.192, 0.038, 0.010, 0.019, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.077, 0.010, 0.010, 0.029, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1900.934, 1097.541),\n     \"Apogee_km\": gaussian(24560.223, 23744.629),\n     \"Perigee_km\": gaussian(21482.322, 8740.099),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(861.278, 671.452),\n     \"Inclination_radians\": gaussian(0.993, 0.327),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.975, 0.293),\n     \"Apogee_km\": gaussian(694.659, 9.971),\n     \"Perigee_km\": gaussian(675.598, 2.218),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.485, 0.205),\n     \"Inclination_radians\": gaussian(1.712, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1689.136, 1721.579),\n     \"Apogee_km\": gaussian(701.896, 8.319),\n     \"Perigee_km\": gaussian(691.205, 16.372),\n     \"Type_of_Orbit\": categorical([0.625, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(98.692, 0.224),\n     \"Inclination_radians\": gaussian(1.714, 0.036),\n     \"Users\": categorical([0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.296, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037]),\n     \"Class_of_Orbit\": categorical([0.769, 0.077, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.029, 0.029, 0.029, 0.265, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.938, 0.055, 0.002, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.178, 0.377)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.602, 0.456)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.160, 0.469, 0.145, 0.180, 0.010, 0.035, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(26.458, 38.370),\n     \"Apogee_km\": gaussian(715.227, 119.669),\n     \"Perigee_km\": gaussian(600.123, 100.971),\n     \"Type_of_Orbit\": categorical([0.887, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.027, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.073, 0.009, 0.345, 0.018, 0.009, 0.055, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.851, 1.795),\n     \"Inclination_radians\": gaussian(1.510, 0.414),\n     \"Users\": categorical([0.012, 0.098, 0.024, 0.024, 0.012, 0.037, 0.012, 0.110, 0.220, 0.012, 0.024, 0.012, 0.012, 0.341, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.112, 0.022, 0.011, 0.180, 0.045, 0.022, 0.022, 0.011, 0.079, 0.011, 0.011, 0.034, 0.011, 0.180, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.034, 0.067, 0.011, 0.045, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3600.868, 1546.279),\n     \"Apogee_km\": gaussian(35771.685, 1780.493),\n     \"Perigee_km\": gaussian(35659.460, 1852.828),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1431.144, 72.173),\n     \"Inclination_radians\": gaussian(0.016, 0.101),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1081.613, 1050.135),\n     \"Apogee_km\": gaussian(789.941, 258.252),\n     \"Perigee_km\": gaussian(688.116, 208.512),\n     \"Type_of_Orbit\": categorical([0.833, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.067, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.019, 0.010, 0.010, 0.077, 0.019, 0.010, 0.125, 0.010, 0.019, 0.010, 0.038, 0.010, 0.019, 0.010, 0.115, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.106, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.663, 3.839),\n     \"Inclination_radians\": gaussian(1.598, 0.387),\n     \"Users\": categorical([0.013, 0.026, 0.171, 0.026, 0.013, 0.026, 0.039, 0.382, 0.066, 0.013, 0.013, 0.039, 0.013, 0.053, 0.013, 0.013, 0.026, 0.053]),\n     \"Class_of_Orbit\": categorical([0.919, 0.016, 0.048, 0.016]),\n     \"Launch_Site\": categorical([0.096, 0.048, 0.024, 0.349, 0.060, 0.012, 0.024, 0.012, 0.048, 0.012, 0.012, 0.012, 0.024, 0.036, 0.024, 0.012, 0.012, 0.036, 0.012, 0.012, 0.024, 0.012, 0.012, 0.060, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(793.868, 437.181),\n     \"Apogee_km\": gaussian(7901.472, 9138.057),\n     \"Perigee_km\": gaussian(7773.067, 8890.188),\n     \"Type_of_Orbit\": categorical([0.019, 0.019, 0.019, 0.887, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.220, 0.008, 0.008, 0.398, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(314.808, 289.122),\n     \"Inclination_radians\": gaussian(0.990, 0.131),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.244, 0.011, 0.556, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.618, 0.013, 0.026, 0.342]),\n     \"Launch_Site\": categorical([0.619, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.021, 0.010, 0.010, 0.021])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.982, 0.558),\n     \"Apogee_km\": gaussian(694.065, 8.613),\n     \"Perigee_km\": gaussian(675.961, 1.535),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.454, 0.203),\n     \"Inclination_radians\": gaussian(1.716, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2651.414, 1306.354),\n     \"Apogee_km\": gaussian(40278.188, 39081.988),\n     \"Perigee_km\": gaussian(25891.643, 12209.537),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.183, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017]),\n     \"Period_minutes\": gaussian(1196.954, 1031.976),\n     \"Inclination_radians\": gaussian(0.819, 0.493),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.444, 0.167, 0.333]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.282, 0.026, 0.128, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.553, 8.382),\n     \"Apogee_km\": gaussian(710.696, 2.884),\n     \"Perigee_km\": gaussian(671.790, 9.298),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.597, 0.687),\n     \"Inclination_radians\": gaussian(1.703, 0.179),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.950, 0.042, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.039, 0.036)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.534, 0.413)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.988, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.002, 0.011, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.011, 0.004, 0.002, 0.004, 0.002, 0.006, 0.002, 0.002, 0.002, 0.025, 0.002, 0.004, 0.082, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.076, 0.017, 0.011, 0.004, 0.002, 0.002, 0.084, 0.002, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.006, 0.002, 0.006, 0.017, 0.002, 0.352, 0.002, 0.002, 0.004, 0.002, 0.011, 0.002, 0.011, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.177, 0.070, 0.469, 0.172, 0.102, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(67.985, 111.321),\n     \"Apogee_km\": gaussian(698.744, 126.554),\n     \"Perigee_km\": gaussian(590.581, 111.527),\n     \"Type_of_Orbit\": categorical([0.875, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.017, 0.009, 0.060, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.068, 0.009, 0.325, 0.017, 0.009, 0.085, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.775, 2.033),\n     \"Inclination_radians\": gaussian(1.494, 0.449),\n     \"Users\": categorical([0.011, 0.090, 0.034, 0.022, 0.011, 0.034, 0.034, 0.169, 0.213, 0.011, 0.022, 0.011, 0.011, 0.281, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.125, 0.031, 0.021, 0.188, 0.042, 0.021, 0.021, 0.010, 0.063, 0.010, 0.010, 0.031, 0.010, 0.177, 0.010, 0.010, 0.021, 0.031, 0.010, 0.010, 0.031, 0.042, 0.010, 0.052, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1091.733, 1191.884),\n     \"Apogee_km\": gaussian(674.733, 39.161),\n     \"Perigee_km\": gaussian(666.084, 38.558),\n     \"Type_of_Orbit\": categorical([0.818, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.108, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.135, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.081, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(98.134, 0.737),\n     \"Inclination_radians\": gaussian(1.707, 0.035),\n     \"Users\": categorical([0.022, 0.043, 0.043, 0.043, 0.022, 0.022, 0.022, 0.413, 0.022, 0.022, 0.022, 0.022, 0.022, 0.087, 0.022, 0.022, 0.043, 0.087]),\n     \"Class_of_Orbit\": categorical([0.906, 0.031, 0.031, 0.031]),\n     \"Launch_Site\": categorical([0.075, 0.057, 0.019, 0.245, 0.038, 0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.019, 0.075, 0.019])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3619.716, 1442.942),\n     \"Apogee_km\": gaussian(35701.582, 1828.523),\n     \"Perigee_km\": gaussian(35600.571, 1871.040),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1427.070, 70.048),\n     \"Inclination_radians\": gaussian(0.018, 0.100),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(703.175, 450.545),\n     \"Apogee_km\": gaussian(1263.296, 272.973),\n     \"Perigee_km\": gaussian(1181.119, 345.102),\n     \"Type_of_Orbit\": categorical([0.197, 0.015, 0.015, 0.727, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.009, 0.061, 0.009, 0.417, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.052, 0.017, 0.009, 0.017, 0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(110.313, 5.735),\n     \"Inclination_radians\": gaussian(1.154, 0.395),\n     \"Users\": categorical([0.011, 0.011, 0.126, 0.011, 0.011, 0.023, 0.011, 0.057, 0.575, 0.011, 0.011, 0.034, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.932, 0.014, 0.041, 0.014]),\n     \"Launch_Site\": categorical([0.447, 0.011, 0.011, 0.170, 0.043, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.085, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1894.423, 1081.582),\n     \"Apogee_km\": gaussian(26098.452, 23660.388),\n     \"Perigee_km\": gaussian(20362.387, 9355.714),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(844.872, 625.178),\n     \"Inclination_radians\": gaussian(1.007, 0.324),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.870, 0.680),\n     \"Apogee_km\": gaussian(693.636, 7.709),\n     \"Perigee_km\": gaussian(675.838, 1.405),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.456, 0.276),\n     \"Inclination_radians\": gaussian(1.716, 0.089),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.938, 0.052, 0.007, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.421, 0.530)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.144)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.152, 0.469, 0.142, 0.100, 0.010, 0.032, 0.095]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(583.229, 241.922),\n     \"Apogee_km\": gaussian(1326.462, 207.413),\n     \"Perigee_km\": gaussian(1235.792, 315.579),\n     \"Type_of_Orbit\": categorical([0.131, 0.016, 0.016, 0.787, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.047, 0.009, 0.449, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(111.353, 4.964),\n     \"Inclination_radians\": gaussian(1.086, 0.375),\n     \"Users\": categorical([0.013, 0.013, 0.114, 0.013, 0.013, 0.025, 0.013, 0.025, 0.608, 0.013, 0.013, 0.025, 0.013, 0.051, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.923, 0.015, 0.046, 0.015]),\n     \"Launch_Site\": categorical([0.488, 0.012, 0.012, 0.151, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.093, 0.012, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3629.704, 1487.426),\n     \"Apogee_km\": gaussian(35575.946, 1816.261),\n     \"Perigee_km\": gaussian(35676.522, 1813.144),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1429.431, 72.444),\n     \"Inclination_radians\": gaussian(0.011, 0.100),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(21.363, 32.514),\n     \"Apogee_km\": gaussian(741.393, 100.604),\n     \"Perigee_km\": gaussian(622.304, 103.480),\n     \"Type_of_Orbit\": categorical([0.885, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.019, 0.010, 0.068, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.078, 0.010, 0.301, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.039, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.399, 1.464),\n     \"Inclination_radians\": gaussian(1.624, 0.282),\n     \"Users\": categorical([0.013, 0.080, 0.027, 0.013, 0.013, 0.040, 0.013, 0.093, 0.240, 0.013, 0.027, 0.013, 0.013, 0.347, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.134, 0.049, 0.012, 0.183, 0.012, 0.024, 0.024, 0.012, 0.085, 0.012, 0.012, 0.012, 0.012, 0.195, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.061, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1800.946, 1052.281),\n     \"Apogee_km\": gaussian(27797.274, 23542.823),\n     \"Perigee_km\": gaussian(21268.813, 8346.033),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.419, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012]),\n     \"Period_minutes\": gaussian(887.860, 635.145),\n     \"Inclination_radians\": gaussian(0.991, 0.312),\n     \"Users\": categorical([0.017, 0.017, 0.224, 0.017, 0.017, 0.017, 0.379, 0.052, 0.069, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.182, 0.091, 0.705]),\n     \"Launch_Site\": categorical([0.323, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.169, 0.015, 0.077, 0.031, 0.015, 0.015, 0.031])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.944, 0.570),\n     \"Apogee_km\": gaussian(694.678, 8.688),\n     \"Perigee_km\": gaussian(675.551, 2.473),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.539, 0.538),\n     \"Inclination_radians\": gaussian(1.715, 0.053),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1248.041, 1601.571),\n     \"Apogee_km\": gaussian(700.824, 19.226),\n     \"Perigee_km\": gaussian(689.847, 19.518),\n     \"Type_of_Orbit\": categorical([0.700, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.085, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.085, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(98.688, 0.432),\n     \"Inclination_radians\": gaussian(1.711, 0.030),\n     \"Users\": categorical([0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.355, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.065, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.237, 0.053, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(869.305, 954.155),\n     \"Apogee_km\": gaussian(635.921, 132.295),\n     \"Perigee_km\": gaussian(593.433, 127.793),\n     \"Type_of_Orbit\": categorical([0.759, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034]),\n     \"Purpose\": categorical([0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.143, 0.024, 0.012, 0.131, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.012, 0.083, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.071, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(97.070, 2.632),\n     \"Inclination_radians\": gaussian(1.376, 0.546),\n     \"Users\": categorical([0.018, 0.054, 0.089, 0.054, 0.018, 0.018, 0.054, 0.375, 0.071, 0.018, 0.018, 0.036, 0.018, 0.036, 0.018, 0.018, 0.018, 0.071]),\n     \"Class_of_Orbit\": categorical([0.929, 0.024, 0.024, 0.024]),\n     \"Launch_Site\": categorical([0.063, 0.032, 0.032, 0.175, 0.111, 0.016, 0.016, 0.016, 0.048, 0.016, 0.016, 0.048, 0.016, 0.048, 0.032, 0.016, 0.032, 0.048, 0.016, 0.016, 0.063, 0.016, 0.016, 0.079, 0.016])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.935, 0.055, 0.007, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.497, 0.419)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.041, 0.141)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.993, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.002, 0.082, 0.013, 0.004, 0.002, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.015, 0.010, 0.004, 0.002, 0.002, 0.084, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.350, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.469, 0.192, 0.102, 0.010, 0.027]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(781.818, 495.050),\n     \"Apogee_km\": gaussian(1191.467, 323.620),\n     \"Perigee_km\": gaussian(1122.765, 372.672),\n     \"Type_of_Orbit\": categorical([0.280, 0.013, 0.013, 0.653, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.381, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.048, 0.016, 0.008, 0.056, 0.008, 0.008, 0.008, 0.032, 0.008, 0.008, 0.008, 0.048, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(108.839, 7.294),\n     \"Inclination_radians\": gaussian(1.233, 0.411),\n     \"Users\": categorical([0.010, 0.010, 0.122, 0.020, 0.010, 0.020, 0.010, 0.112, 0.510, 0.010, 0.010, 0.031, 0.010, 0.041, 0.010, 0.010, 0.010, 0.041]),\n     \"Class_of_Orbit\": categorical([0.940, 0.012, 0.036, 0.012]),\n     \"Launch_Site\": categorical([0.410, 0.019, 0.010, 0.200, 0.038, 0.010, 0.019, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.076, 0.010, 0.010, 0.029, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3672.808, 1532.025),\n     \"Apogee_km\": gaussian(35588.350, 1833.722),\n     \"Perigee_km\": gaussian(35627.206, 1747.678),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1430.134, 70.049),\n     \"Inclination_radians\": gaussian(0.021, 0.098),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.643, 106.833),\n     \"Apogee_km\": gaussian(692.422, 126.886),\n     \"Perigee_km\": gaussian(599.919, 107.770),\n     \"Type_of_Orbit\": categorical([0.903, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.024, 0.008, 0.057, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.065, 0.008, 0.317, 0.016, 0.008, 0.081, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.057, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.766, 1.873),\n     \"Inclination_radians\": gaussian(1.531, 0.437),\n     \"Users\": categorical([0.011, 0.084, 0.032, 0.021, 0.011, 0.032, 0.032, 0.211, 0.200, 0.011, 0.021, 0.011, 0.011, 0.274, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.963, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.137, 0.039, 0.020, 0.167, 0.049, 0.020, 0.020, 0.010, 0.078, 0.010, 0.010, 0.029, 0.010, 0.167, 0.010, 0.010, 0.020, 0.029, 0.010, 0.010, 0.029, 0.039, 0.010, 0.059, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1885.098, 1097.570),\n     \"Apogee_km\": gaussian(25887.567, 23076.372),\n     \"Perigee_km\": gaussian(20680.364, 8894.922),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(846.447, 666.024),\n     \"Inclination_radians\": gaussian(1.001, 0.329),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.913, 0.691),\n     \"Apogee_km\": gaussian(694.384, 9.130),\n     \"Perigee_km\": gaussian(675.836, 1.463),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.477, 0.286),\n     \"Inclination_radians\": gaussian(1.714, 0.068),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1471.926, 1627.117),\n     \"Apogee_km\": gaussian(701.429, 7.536),\n     \"Perigee_km\": gaussian(688.487, 15.749),\n     \"Type_of_Orbit\": categorical([0.667, 0.056, 0.056, 0.056, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.053, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.088, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(98.670, 0.224),\n     \"Inclination_radians\": gaussian(1.713, 0.038),\n     \"Users\": categorical([0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.276, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.069, 0.034]),\n     \"Class_of_Orbit\": categorical([0.800, 0.067, 0.067, 0.067]),\n     \"Launch_Site\": categorical([0.028, 0.028, 0.028, 0.250, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.083, 0.028, 0.028, 0.028])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.948, 0.042, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.039, 0.035)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.371, 0.451)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.002, 0.469, 0.274, 0.125, 0.100, 0.010, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.471, 6.380),\n     \"Apogee_km\": gaussian(710.135, 1.724),\n     \"Perigee_km\": gaussian(671.123, 7.036),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.602, 0.287),\n     \"Inclination_radians\": gaussian(1.701, 0.123),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3616.226, 1469.144),\n     \"Apogee_km\": gaussian(35641.902, 1903.448),\n     \"Perigee_km\": gaussian(35595.693, 1880.060),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1432.776, 69.695),\n     \"Inclination_radians\": gaussian(0.016, 0.099),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(393.954, 727.036),\n     \"Apogee_km\": gaussian(732.370, 182.016),\n     \"Perigee_km\": gaussian(628.324, 136.849),\n     \"Type_of_Orbit\": categorical([0.917, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.006, 0.045, 0.006, 0.019, 0.006, 0.045, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.051, 0.006, 0.282, 0.019, 0.006, 0.109, 0.006, 0.013, 0.006, 0.013, 0.006, 0.013, 0.006, 0.077, 0.013, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.051, 0.006, 0.013, 0.006, 0.006, 0.006, 0.019, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.350, 2.541),\n     \"Inclination_radians\": gaussian(1.550, 0.408),\n     \"Users\": categorical([0.008, 0.063, 0.094, 0.023, 0.008, 0.031, 0.023, 0.250, 0.164, 0.008, 0.016, 0.023, 0.008, 0.219, 0.008, 0.008, 0.016, 0.031]),\n     \"Class_of_Orbit\": categorical([0.956, 0.009, 0.026, 0.009]),\n     \"Launch_Site\": categorical([0.119, 0.037, 0.015, 0.267, 0.059, 0.015, 0.022, 0.007, 0.074, 0.007, 0.007, 0.022, 0.007, 0.133, 0.015, 0.007, 0.015, 0.022, 0.007, 0.007, 0.030, 0.030, 0.007, 0.059, 0.007])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(560.168, 164.065),\n     \"Apogee_km\": gaussian(1384.259, 146.224),\n     \"Perigee_km\": gaussian(1364.433, 147.034),\n     \"Type_of_Orbit\": categorical([0.036, 0.018, 0.018, 0.873, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.500, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(113.232, 3.100),\n     \"Inclination_radians\": gaussian(0.969, 0.285),\n     \"Users\": categorical([0.015, 0.015, 0.044, 0.015, 0.015, 0.015, 0.015, 0.015, 0.706, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.944, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.547, 0.013, 0.013, 0.053, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1784.119, 986.630),\n     \"Apogee_km\": gaussian(28293.173, 24067.326),\n     \"Perigee_km\": gaussian(21191.569, 8253.451),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.419, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012]),\n     \"Period_minutes\": gaussian(889.399, 649.854),\n     \"Inclination_radians\": gaussian(1.002, 0.311),\n     \"Users\": categorical([0.017, 0.017, 0.224, 0.017, 0.017, 0.017, 0.379, 0.052, 0.069, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.182, 0.091, 0.705]),\n     \"Launch_Site\": categorical([0.323, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.169, 0.015, 0.077, 0.031, 0.015, 0.015, 0.031])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.948, 0.453),\n     \"Apogee_km\": gaussian(694.111, 7.603),\n     \"Perigee_km\": gaussian(675.783, 1.639),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.456, 0.109),\n     \"Inclination_radians\": gaussian(1.717, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1722.793, 1876.787),\n     \"Apogee_km\": gaussian(703.653, 1.941),\n     \"Perigee_km\": gaussian(695.063, 13.033),\n     \"Type_of_Orbit\": categorical([0.600, 0.067, 0.067, 0.067, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.056, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.747, 0.118),\n     \"Inclination_radians\": gaussian(1.714, 0.043),\n     \"Users\": categorical([0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.231, 0.038, 0.038, 0.038, 0.038, 0.038, 0.115, 0.038, 0.038, 0.038, 0.038]),\n     \"Class_of_Orbit\": categorical([0.750, 0.083, 0.083, 0.083]),\n     \"Launch_Site\": categorical([0.030, 0.030, 0.030, 0.182, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.928, 0.065, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.509, 0.517)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.232, 0.190, 0.469, 0.100, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(897.825, 785.195),\n     \"Apogee_km\": gaussian(1130.239, 342.976),\n     \"Perigee_km\": gaussian(1042.631, 383.312),\n     \"Type_of_Orbit\": categorical([0.357, 0.012, 0.012, 0.583, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.050, 0.007, 0.345, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.050, 0.014, 0.007, 0.079, 0.007, 0.014, 0.007, 0.029, 0.007, 0.014, 0.007, 0.050, 0.014, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.065, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(107.052, 7.902),\n     \"Inclination_radians\": gaussian(1.271, 0.432),\n     \"Users\": categorical([0.009, 0.018, 0.117, 0.018, 0.009, 0.018, 0.009, 0.189, 0.450, 0.009, 0.009, 0.027, 0.009, 0.036, 0.009, 0.009, 0.018, 0.036]),\n     \"Class_of_Orbit\": categorical([0.948, 0.010, 0.031, 0.010]),\n     \"Launch_Site\": categorical([0.381, 0.017, 0.017, 0.237, 0.034, 0.008, 0.017, 0.008, 0.025, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.076, 0.008, 0.008, 0.034, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(50.189, 75.908),\n     \"Apogee_km\": gaussian(705.719, 118.956),\n     \"Perigee_km\": gaussian(606.605, 103.204),\n     \"Type_of_Orbit\": categorical([0.906, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.025, 0.008, 0.057, 0.016, 0.008, 0.008, 0.008, 0.016, 0.016, 0.066, 0.008, 0.320, 0.016, 0.008, 0.066, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.066, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.836, 1.867),\n     \"Inclination_radians\": gaussian(1.555, 0.395),\n     \"Users\": categorical([0.011, 0.085, 0.021, 0.021, 0.011, 0.032, 0.032, 0.191, 0.202, 0.011, 0.021, 0.011, 0.011, 0.298, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.963, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.119, 0.040, 0.010, 0.178, 0.050, 0.020, 0.020, 0.010, 0.079, 0.010, 0.010, 0.030, 0.010, 0.168, 0.010, 0.010, 0.020, 0.030, 0.010, 0.010, 0.030, 0.059, 0.010, 0.050, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3725.424, 1485.415),\n     \"Apogee_km\": gaussian(35715.130, 1787.060),\n     \"Perigee_km\": gaussian(35599.500, 1826.067),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1429.259, 70.063),\n     \"Inclination_radians\": gaussian(0.024, 0.104),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1807.492, 1030.610),\n     \"Apogee_km\": gaussian(27465.139, 23663.493),\n     \"Perigee_km\": gaussian(21886.587, 8369.971),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.419, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012]),\n     \"Period_minutes\": gaussian(880.172, 623.116),\n     \"Inclination_radians\": gaussian(1.024, 0.317),\n     \"Users\": categorical([0.017, 0.017, 0.224, 0.017, 0.017, 0.017, 0.379, 0.052, 0.069, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.182, 0.091, 0.705]),\n     \"Launch_Site\": categorical([0.323, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.169, 0.015, 0.077, 0.031, 0.015, 0.015, 0.031])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.849, 0.695),\n     \"Apogee_km\": gaussian(694.600, 8.280),\n     \"Perigee_km\": gaussian(675.626, 2.069),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.416, 0.411),\n     \"Inclination_radians\": gaussian(1.709, 0.074),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.948, 0.045, 0.005, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.034)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.563, 0.546)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.142, 0.285)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.469, 0.202, 0.185, 0.102, 0.010, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3567.798, 1472.477),\n     \"Apogee_km\": gaussian(35792.441, 1842.645),\n     \"Perigee_km\": gaussian(35687.692, 1816.049),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1430.557, 71.418),\n     \"Inclination_radians\": gaussian(0.020, 0.101),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(105.986, 189.067),\n     \"Apogee_km\": gaussian(698.494, 120.603),\n     \"Perigee_km\": gaussian(595.900, 102.501),\n     \"Type_of_Orbit\": categorical([0.892, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.024, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.016, 0.016, 0.063, 0.008, 0.307, 0.016, 0.008, 0.110, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.063, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.668, 1.898),\n     \"Inclination_radians\": gaussian(1.522, 0.414),\n     \"Users\": categorical([0.010, 0.081, 0.040, 0.020, 0.010, 0.030, 0.030, 0.232, 0.192, 0.010, 0.020, 0.010, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.132, 0.047, 0.019, 0.170, 0.047, 0.019, 0.019, 0.009, 0.085, 0.009, 0.009, 0.028, 0.009, 0.160, 0.009, 0.009, 0.019, 0.028, 0.009, 0.009, 0.028, 0.047, 0.009, 0.057, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(819.640, 501.190),\n     \"Apogee_km\": gaussian(1234.075, 309.432),\n     \"Perigee_km\": gaussian(1140.096, 363.911),\n     \"Type_of_Orbit\": categorical([0.254, 0.014, 0.014, 0.676, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.058, 0.008, 0.400, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.050, 0.017, 0.008, 0.025, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.042, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(109.411, 6.672),\n     \"Inclination_radians\": gaussian(1.213, 0.407),\n     \"Users\": categorical([0.011, 0.011, 0.120, 0.022, 0.011, 0.022, 0.011, 0.065, 0.543, 0.011, 0.011, 0.033, 0.011, 0.043, 0.011, 0.011, 0.011, 0.043]),\n     \"Class_of_Orbit\": categorical([0.936, 0.013, 0.038, 0.013]),\n     \"Launch_Site\": categorical([0.424, 0.010, 0.010, 0.202, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.081, 0.010, 0.010, 0.020, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1904.458, 1100.567),\n     \"Apogee_km\": gaussian(27155.165, 24888.334),\n     \"Perigee_km\": gaussian(21245.647, 9104.095),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.414, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011]),\n     \"Period_minutes\": gaussian(888.384, 680.762),\n     \"Inclination_radians\": gaussian(0.999, 0.308),\n     \"Users\": categorical([0.017, 0.017, 0.220, 0.017, 0.017, 0.017, 0.373, 0.068, 0.068, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.178, 0.089, 0.689]),\n     \"Launch_Site\": categorical([0.318, 0.015, 0.015, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.167, 0.015, 0.091, 0.030, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.927, 0.360),\n     \"Apogee_km\": gaussian(694.381, 8.213),\n     \"Perigee_km\": gaussian(675.758, 1.538),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.473, 0.249),\n     \"Inclination_radians\": gaussian(1.712, 0.068),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1280.969, 1565.711),\n     \"Apogee_km\": gaussian(706.854, 13.717),\n     \"Perigee_km\": gaussian(695.145, 16.799),\n     \"Type_of_Orbit\": categorical([0.684, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.068, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.102, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(98.770, 0.284),\n     \"Inclination_radians\": gaussian(1.707, 0.044),\n     \"Users\": categorical([0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.323, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.065, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.026, 0.026, 0.237, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.053, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.050, 0.005, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.584, 0.479)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.111, 0.204)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.998, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.084, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.349, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.127, 0.469, 0.175, 0.180, 0.010, 0.037, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.718, 16.979),\n     \"Apogee_km\": gaussian(709.436, 115.086),\n     \"Perigee_km\": gaussian(590.669, 90.326),\n     \"Type_of_Orbit\": categorical([0.860, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.021, 0.010, 0.072, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.082, 0.010, 0.351, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.647, 1.462),\n     \"Inclination_radians\": gaussian(1.527, 0.430),\n     \"Users\": categorical([0.014, 0.029, 0.029, 0.029, 0.014, 0.043, 0.014, 0.058, 0.261, 0.014, 0.029, 0.014, 0.014, 0.377, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.945, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.118, 0.026, 0.013, 0.145, 0.013, 0.026, 0.026, 0.013, 0.092, 0.013, 0.013, 0.039, 0.013, 0.211, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.053, 0.013, 0.039, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3643.607, 1478.946),\n     \"Apogee_km\": gaussian(35723.670, 1879.338),\n     \"Perigee_km\": gaussian(35612.636, 1877.074),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.026, 0.004, 0.004, 0.722, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.009, 0.004, 0.004, 0.004, 0.017, 0.004, 0.017, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.021, 0.004]),\n     \"Period_minutes\": gaussian(1431.836, 71.007),\n     \"Inclination_radians\": gaussian(0.016, 0.100),\n     \"Users\": categorical([0.005, 0.005, 0.136, 0.005, 0.005, 0.005, 0.029, 0.063, 0.689, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.019, 0.005]),\n     \"Class_of_Orbit\": categorical([0.005, 0.984, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.268, 0.005, 0.005, 0.005, 0.005, 0.005, 0.296, 0.023, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.085, 0.005, 0.183, 0.005, 0.052, 0.005, 0.005])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(893.822, 1076.265),\n     \"Apogee_km\": gaussian(770.738, 233.769),\n     \"Perigee_km\": gaussian(691.336, 188.507),\n     \"Type_of_Orbit\": categorical([0.877, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.017, 0.009, 0.009, 0.103, 0.026, 0.009, 0.155, 0.009, 0.017, 0.009, 0.034, 0.009, 0.017, 0.009, 0.121, 0.017, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.095, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.423, 3.635),\n     \"Inclination_radians\": gaussian(1.579, 0.348),\n     \"Users\": categorical([0.011, 0.091, 0.148, 0.023, 0.011, 0.023, 0.034, 0.386, 0.045, 0.011, 0.011, 0.034, 0.011, 0.068, 0.011, 0.011, 0.023, 0.045]),\n     \"Class_of_Orbit\": categorical([0.932, 0.014, 0.041, 0.014]),\n     \"Launch_Site\": categorical([0.084, 0.042, 0.021, 0.358, 0.084, 0.011, 0.021, 0.011, 0.042, 0.011, 0.011, 0.011, 0.021, 0.032, 0.021, 0.011, 0.011, 0.032, 0.011, 0.011, 0.032, 0.032, 0.011, 0.063, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(823.987, 396.240),\n     \"Apogee_km\": gaussian(7993.608, 8861.764),\n     \"Perigee_km\": gaussian(8013.665, 8680.233),\n     \"Type_of_Orbit\": categorical([0.019, 0.019, 0.019, 0.889, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.220, 0.008, 0.008, 0.407, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(313.944, 295.153),\n     \"Inclination_radians\": gaussian(0.987, 0.119),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.244, 0.011, 0.567, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.632, 0.013, 0.013, 0.342]),\n     \"Launch_Site\": categorical([0.629, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.021, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.988, 0.417),\n     \"Apogee_km\": gaussian(694.775, 9.375),\n     \"Perigee_km\": gaussian(675.620, 1.775),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.519, 0.464),\n     \"Inclination_radians\": gaussian(1.709, 0.103),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2677.394, 1322.186),\n     \"Apogee_km\": gaussian(40419.885, 35895.138),\n     \"Perigee_km\": gaussian(24094.975, 14026.711),\n     \"Type_of_Orbit\": categorical([0.111, 0.333, 0.111, 0.111, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.180, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016]),\n     \"Period_minutes\": gaussian(1121.275, 1050.650),\n     \"Inclination_radians\": gaussian(0.898, 0.489),\n     \"Users\": categorical([0.030, 0.030, 0.394, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.053, 0.421, 0.211, 0.316]),\n     \"Launch_Site\": categorical([0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.275, 0.025, 0.125, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.734, 7.119),\n     \"Apogee_km\": gaussian(711.556, 8.421),\n     \"Perigee_km\": gaussian(670.862, 4.746),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.811, 1.367),\n     \"Inclination_radians\": gaussian(1.729, 0.494),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.052, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.006)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.036)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.377, 0.567)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.004, 0.002, 0.010, 0.002, 0.002, 0.015, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.002, 0.010, 0.004, 0.002, 0.004, 0.002, 0.006, 0.004, 0.002, 0.002, 0.025, 0.002, 0.004, 0.081, 0.013, 0.004, 0.002, 0.004, 0.002, 0.021, 0.002, 0.002, 0.002, 0.002, 0.002, 0.075, 0.017, 0.010, 0.004, 0.002, 0.002, 0.083, 0.004, 0.004, 0.004, 0.002, 0.004, 0.006, 0.006, 0.002, 0.038, 0.002, 0.008, 0.002, 0.008, 0.017, 0.002, 0.348, 0.002, 0.002, 0.004, 0.002, 0.010, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.004, 0.015, 0.002, 0.015])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.473, 0.108, 0.106, 0.008, 0.206, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(160.196, 247.823),\n     \"Apogee_km\": gaussian(912.881, 271.846),\n     \"Perigee_km\": gaussian(641.758, 286.286),\n     \"Type_of_Orbit\": categorical([0.500, 0.045, 0.136, 0.182, 0.045, 0.045, 0.045]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.025, 0.012, 0.012, 0.062, 0.012, 0.185, 0.025, 0.012, 0.074, 0.012, 0.012, 0.012, 0.049, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.049, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.457, 4.720),\n     \"Inclination_radians\": gaussian(1.446, 0.573),\n     \"Users\": categorical([0.019, 0.113, 0.113, 0.019, 0.019, 0.075, 0.019, 0.113, 0.151, 0.019, 0.019, 0.038, 0.019, 0.189, 0.019, 0.019, 0.019, 0.019]),\n     \"Class_of_Orbit\": categorical([0.846, 0.026, 0.103, 0.026]),\n     \"Launch_Site\": categorical([0.083, 0.017, 0.033, 0.400, 0.017, 0.033, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017, 0.017, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3570.139, 1525.176),\n     \"Apogee_km\": gaussian(35719.440, 1583.860),\n     \"Perigee_km\": gaussian(35738.858, 1630.134),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1434.223, 60.343),\n     \"Inclination_radians\": gaussian(0.018, 0.090),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.060, 176.484),\n     \"Apogee_km\": gaussian(1429.229, 91.585),\n     \"Perigee_km\": gaussian(1404.517, 106.135),\n     \"Type_of_Orbit\": categorical([0.017, 0.017, 0.017, 0.897, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.550, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.175, 1.731),\n     \"Inclination_radians\": gaussian(1.014, 0.213),\n     \"Users\": categorical([0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.639, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.125, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.494, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.101, 0.127, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1890.232, 1054.217),\n     \"Apogee_km\": gaussian(28298.645, 27151.433),\n     \"Perigee_km\": gaussian(19879.637, 8495.544),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(860.412, 709.525),\n     \"Inclination_radians\": gaussian(1.048, 0.279),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.982, 0.468),\n     \"Apogee_km\": gaussian(693.732, 7.817),\n     \"Perigee_km\": gaussian(675.761, 1.621),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.453, 0.295),\n     \"Inclination_radians\": gaussian(1.711, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(754.752, 1002.285),\n     \"Apogee_km\": gaussian(682.152, 106.873),\n     \"Perigee_km\": gaussian(653.930, 101.299),\n     \"Type_of_Orbit\": categorical([0.918, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.047, 0.007, 0.027, 0.007, 0.047, 0.020, 0.007, 0.007, 0.007, 0.013, 0.013, 0.034, 0.007, 0.168, 0.013, 0.007, 0.121, 0.007, 0.007, 0.007, 0.067, 0.007, 0.007, 0.007, 0.087, 0.013, 0.020, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.074, 0.007, 0.013, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.199, 2.154),\n     \"Inclination_radians\": gaussian(1.712, 0.013),\n     \"Users\": categorical([0.008, 0.033, 0.099, 0.017, 0.008, 0.008, 0.025, 0.380, 0.116, 0.008, 0.017, 0.017, 0.008, 0.190, 0.008, 0.008, 0.017, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.078, 0.047, 0.008, 0.180, 0.102, 0.008, 0.031, 0.008, 0.086, 0.008, 0.008, 0.008, 0.086, 0.148, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.039, 0.008, 0.063, 0.016])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1245.932, 3184.416),\n     \"Apogee_km\": gaussian(556.553, 44.380),\n     \"Perigee_km\": gaussian(534.828, 34.355),\n     \"Type_of_Orbit\": categorical([0.385, 0.077, 0.077, 0.231, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.164, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.033, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(95.572, 0.817),\n     \"Inclination_radians\": gaussian(0.812, 0.393),\n     \"Users\": categorical([0.030, 0.091, 0.030, 0.061, 0.030, 0.030, 0.030, 0.152, 0.121, 0.030, 0.030, 0.030, 0.030, 0.182, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.842, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.125, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.100, 0.025, 0.050, 0.050, 0.025, 0.025, 0.025, 0.025, 0.025, 0.150, 0.025, 0.025, 0.050, 0.025])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.944, 0.044, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.632, 0.344)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.106, 0.234, 0.473, 0.110, 0.008, 0.012, 0.056, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1915.760, 1086.428),\n     \"Apogee_km\": gaussian(30432.836, 26605.908),\n     \"Perigee_km\": gaussian(19781.177, 8816.874),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(912.480, 741.425),\n     \"Inclination_radians\": gaussian(1.030, 0.279),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(440.118, 620.515),\n     \"Apogee_km\": gaussian(695.810, 116.156),\n     \"Perigee_km\": gaussian(625.638, 111.481),\n     \"Type_of_Orbit\": categorical([0.891, 0.010, 0.050, 0.020, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.043, 0.006, 0.025, 0.006, 0.043, 0.012, 0.006, 0.006, 0.006, 0.012, 0.012, 0.049, 0.006, 0.239, 0.012, 0.006, 0.129, 0.006, 0.006, 0.006, 0.049, 0.006, 0.006, 0.006, 0.086, 0.012, 0.012, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.049, 0.006, 0.012, 0.006, 0.006, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(97.965, 2.086),\n     \"Inclination_radians\": gaussian(1.653, 0.212),\n     \"Users\": categorical([0.007, 0.059, 0.081, 0.015, 0.007, 0.022, 0.022, 0.296, 0.156, 0.007, 0.015, 0.007, 0.007, 0.237, 0.007, 0.007, 0.015, 0.030]),\n     \"Class_of_Orbit\": categorical([0.975, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.106, 0.042, 0.007, 0.218, 0.077, 0.014, 0.014, 0.007, 0.077, 0.007, 0.007, 0.007, 0.070, 0.141, 0.014, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.056, 0.007, 0.056, 0.014])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3521.427, 1497.033),\n     \"Apogee_km\": gaussian(35747.403, 1588.626),\n     \"Perigee_km\": gaussian(35720.301, 1607.536),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1432.341, 60.494),\n     \"Inclination_radians\": gaussian(0.019, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(522.576, 186.040),\n     \"Apogee_km\": gaussian(1427.043, 86.725),\n     \"Perigee_km\": gaussian(1403.626, 104.056),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.211, 1.745),\n     \"Inclination_radians\": gaussian(1.021, 0.246),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.004, 0.315),\n     \"Apogee_km\": gaussian(693.955, 7.681),\n     \"Perigee_km\": gaussian(675.860, 1.470),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.473, 0.161),\n     \"Inclination_radians\": gaussian(1.717, 0.076),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2097.033, 1956.244),\n     \"Apogee_km\": gaussian(703.854, 2.356),\n     \"Perigee_km\": gaussian(699.371, 8.899),\n     \"Type_of_Orbit\": categorical([0.538, 0.077, 0.077, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.794, 0.058),\n     \"Inclination_radians\": gaussian(1.715, 0.056),\n     \"Users\": categorical([0.042, 0.083, 0.042, 0.042, 0.042, 0.042, 0.042, 0.250, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1454.628, 2661.892),\n     \"Apogee_km\": gaussian(855.772, 326.383),\n     \"Perigee_km\": gaussian(651.811, 270.732),\n     \"Type_of_Orbit\": categorical([0.412, 0.059, 0.059, 0.294, 0.059, 0.059, 0.059]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.135, 0.027, 0.014, 0.027, 0.014, 0.027, 0.014, 0.081, 0.014, 0.041, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.237, 4.711),\n     \"Inclination_radians\": gaussian(1.103, 0.626),\n     \"Users\": categorical([0.022, 0.065, 0.152, 0.043, 0.022, 0.043, 0.022, 0.217, 0.087, 0.022, 0.022, 0.065, 0.022, 0.109, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.813, 0.031, 0.125, 0.031]),\n     \"Launch_Site\": categorical([0.075, 0.019, 0.038, 0.170, 0.057, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.113, 0.019, 0.019, 0.038, 0.038])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.923, 6.609),\n     \"Apogee_km\": gaussian(710.286, 4.535),\n     \"Perigee_km\": gaussian(671.274, 4.226),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.656, 0.320),\n     \"Inclination_radians\": gaussian(1.711, 0.242),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.944, 0.044, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.583, 0.361)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.046, 0.473, 0.118, 0.110, 0.106, 0.008, 0.140]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1318.533, 2650.719),\n     \"Apogee_km\": gaussian(882.609, 361.501),\n     \"Perigee_km\": gaussian(639.892, 280.290),\n     \"Type_of_Orbit\": categorical([0.133, 0.067, 0.200, 0.400, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.116, 0.029, 0.014, 0.014, 0.014, 0.029, 0.014, 0.058, 0.014, 0.043, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.184, 5.004),\n     \"Inclination_radians\": gaussian(1.167, 0.602),\n     \"Users\": categorical([0.024, 0.049, 0.122, 0.024, 0.024, 0.049, 0.024, 0.220, 0.122, 0.024, 0.024, 0.049, 0.024, 0.122, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.778, 0.037, 0.148, 0.037]),\n     \"Launch_Site\": categorical([0.104, 0.021, 0.042, 0.167, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.104, 0.063, 0.021, 0.042, 0.042])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3588.989, 1508.635),\n     \"Apogee_km\": gaussian(35664.922, 1642.950),\n     \"Perigee_km\": gaussian(35752.897, 1670.238),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1433.561, 60.425),\n     \"Inclination_radians\": gaussian(0.012, 0.093),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13.642, 23.676),\n     \"Apogee_km\": gaussian(717.438, 114.297),\n     \"Perigee_km\": gaussian(588.864, 94.202),\n     \"Type_of_Orbit\": categorical([0.880, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.076, 0.010, 0.333, 0.010, 0.010, 0.057, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.791, 1.676),\n     \"Inclination_radians\": gaussian(1.535, 0.425),\n     \"Users\": categorical([0.013, 0.104, 0.026, 0.026, 0.013, 0.039, 0.013, 0.065, 0.234, 0.013, 0.026, 0.013, 0.013, 0.351, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.107, 0.024, 0.012, 0.190, 0.012, 0.024, 0.024, 0.012, 0.071, 0.012, 0.012, 0.048, 0.024, 0.214, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.036, 0.012, 0.048, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(507.515, 180.126),\n     \"Apogee_km\": gaussian(1425.620, 88.368),\n     \"Perigee_km\": gaussian(1406.205, 104.557),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.161, 1.448),\n     \"Inclination_radians\": gaussian(1.025, 0.242),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1873.860, 1034.560),\n     \"Apogee_km\": gaussian(26921.980, 26212.437),\n     \"Perigee_km\": gaussian(19468.738, 8737.939),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(868.949, 688.308),\n     \"Inclination_radians\": gaussian(1.035, 0.274),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.979, 0.241),\n     \"Apogee_km\": gaussian(694.458, 9.217),\n     \"Perigee_km\": gaussian(675.616, 1.918),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.873, 1.554),\n     \"Inclination_radians\": gaussian(1.717, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1020.385, 1036.078),\n     \"Apogee_km\": gaussian(676.309, 122.964),\n     \"Perigee_km\": gaussian(673.165, 114.763),\n     \"Type_of_Orbit\": categorical([0.881, 0.015, 0.045, 0.015, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.060, 0.017, 0.009, 0.155, 0.009, 0.009, 0.009, 0.086, 0.009, 0.009, 0.009, 0.112, 0.017, 0.026, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.095, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.223, 2.542),\n     \"Inclination_radians\": gaussian(1.712, 0.016),\n     \"Users\": categorical([0.011, 0.034, 0.136, 0.023, 0.011, 0.011, 0.034, 0.489, 0.034, 0.011, 0.011, 0.023, 0.011, 0.068, 0.011, 0.011, 0.023, 0.045]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.063, 0.053, 0.011, 0.242, 0.137, 0.011, 0.032, 0.011, 0.063, 0.011, 0.011, 0.011, 0.105, 0.021, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011, 0.042, 0.011, 0.053, 0.021])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.940, 0.048, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.639, 0.317)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.072, 0.473, 0.108, 0.202, 0.106, 0.008, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(187.593, 260.933),\n     \"Apogee_km\": gaussian(915.102, 280.831),\n     \"Perigee_km\": gaussian(643.247, 276.192),\n     \"Type_of_Orbit\": categorical([0.542, 0.042, 0.125, 0.167, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.061, 0.012, 0.183, 0.024, 0.012, 0.085, 0.012, 0.012, 0.012, 0.049, 0.012, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.049, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(100.507, 4.502),\n     \"Inclination_radians\": gaussian(1.463, 0.550),\n     \"Users\": categorical([0.019, 0.111, 0.111, 0.019, 0.019, 0.074, 0.019, 0.111, 0.148, 0.019, 0.019, 0.056, 0.019, 0.185, 0.019, 0.019, 0.019, 0.019]),\n     \"Class_of_Orbit\": categorical([0.850, 0.025, 0.100, 0.025]),\n     \"Launch_Site\": categorical([0.082, 0.016, 0.033, 0.410, 0.016, 0.033, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.033])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3587.637, 1480.933),\n     \"Apogee_km\": gaussian(35749.118, 1558.172),\n     \"Perigee_km\": gaussian(35652.507, 1680.186),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1428.608, 60.847),\n     \"Inclination_radians\": gaussian(0.011, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(514.266, 171.669),\n     \"Apogee_km\": gaussian(1422.999, 87.844),\n     \"Perigee_km\": gaussian(1408.362, 106.004),\n     \"Type_of_Orbit\": categorical([0.017, 0.017, 0.017, 0.897, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.550, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.250, 1.842),\n     \"Inclination_radians\": gaussian(1.006, 0.222),\n     \"Users\": categorical([0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.639, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.125, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.494, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.101, 0.127, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(696.629, 1006.543),\n     \"Apogee_km\": gaussian(692.182, 107.357),\n     \"Perigee_km\": gaussian(651.732, 100.109),\n     \"Type_of_Orbit\": categorical([0.917, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.048, 0.007, 0.027, 0.007, 0.048, 0.020, 0.007, 0.007, 0.007, 0.014, 0.014, 0.034, 0.007, 0.163, 0.014, 0.007, 0.116, 0.007, 0.007, 0.007, 0.068, 0.007, 0.007, 0.007, 0.088, 0.014, 0.020, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.075, 0.007, 0.014, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.169, 2.120),\n     \"Inclination_radians\": gaussian(1.711, 0.013),\n     \"Users\": categorical([0.008, 0.034, 0.101, 0.017, 0.008, 0.008, 0.025, 0.387, 0.118, 0.008, 0.017, 0.008, 0.008, 0.185, 0.008, 0.008, 0.017, 0.034]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.079, 0.048, 0.008, 0.175, 0.103, 0.008, 0.024, 0.008, 0.087, 0.008, 0.008, 0.008, 0.087, 0.151, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.008, 0.040, 0.008, 0.063, 0.016])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1828.058, 1076.547),\n     \"Apogee_km\": gaussian(28298.217, 28322.762),\n     \"Perigee_km\": gaussian(19638.524, 8761.565),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(864.383, 710.978),\n     \"Inclination_radians\": gaussian(1.044, 0.272),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.014, 0.577),\n     \"Apogee_km\": gaussian(694.658, 8.172),\n     \"Perigee_km\": gaussian(675.871, 1.458),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.476, 0.525),\n     \"Inclination_radians\": gaussian(1.718, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1115.224, 3169.522),\n     \"Apogee_km\": gaussian(561.178, 44.217),\n     \"Perigee_km\": gaussian(540.201, 38.250),\n     \"Type_of_Orbit\": categorical([0.385, 0.077, 0.077, 0.231, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.177, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.032, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(95.696, 0.850),\n     \"Inclination_radians\": gaussian(0.865, 0.418),\n     \"Users\": categorical([0.029, 0.088, 0.029, 0.059, 0.029, 0.029, 0.029, 0.147, 0.118, 0.029, 0.029, 0.029, 0.029, 0.206, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.850, 0.050, 0.050, 0.050]),\n     \"Launch_Site\": categorical([0.122, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.098, 0.024, 0.049, 0.049, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.024, 0.049, 0.024])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.042, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.644, 0.319)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.106, 0.473, 0.102, 0.124, 0.008, 0.040, 0.140, 0.008]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1915.636, 1044.471),\n     \"Apogee_km\": gaussian(26889.966, 27469.090),\n     \"Perigee_km\": gaussian(19576.486, 8612.483),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(885.388, 706.841),\n     \"Inclination_radians\": gaussian(1.046, 0.271),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3598.606, 1474.643),\n     \"Apogee_km\": gaussian(35754.577, 1592.064),\n     \"Perigee_km\": gaussian(35800.796, 1587.176),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1426.886, 63.711),\n     \"Inclination_radians\": gaussian(0.015, 0.091),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13.285, 23.327),\n     \"Apogee_km\": gaussian(714.332, 98.986),\n     \"Perigee_km\": gaussian(604.419, 82.386),\n     \"Type_of_Orbit\": categorical([0.872, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.031, 0.010, 0.072, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.082, 0.010, 0.320, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.885, 1.187),\n     \"Inclination_radians\": gaussian(1.639, 0.259),\n     \"Users\": categorical([0.014, 0.043, 0.014, 0.014, 0.014, 0.043, 0.014, 0.087, 0.246, 0.014, 0.029, 0.014, 0.014, 0.377, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.945, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.118, 0.026, 0.013, 0.132, 0.013, 0.026, 0.013, 0.013, 0.105, 0.013, 0.013, 0.013, 0.026, 0.237, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013, 0.066, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.625, 196.376),\n     \"Apogee_km\": gaussian(1396.252, 140.535),\n     \"Perigee_km\": gaussian(1336.236, 239.347),\n     \"Type_of_Orbit\": categorical([0.033, 0.016, 0.016, 0.885, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.528, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(113.248, 3.597),\n     \"Inclination_radians\": gaussian(1.058, 0.327),\n     \"Users\": categorical([0.025, 0.013, 0.038, 0.013, 0.013, 0.025, 0.013, 0.025, 0.600, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.113, 0.013]),\n     \"Class_of_Orbit\": categorical([0.939, 0.015, 0.030, 0.015]),\n     \"Launch_Site\": categorical([0.471, 0.011, 0.011, 0.069, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.092, 0.115, 0.011, 0.011, 0.023])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.833, 0.823),\n     \"Apogee_km\": gaussian(694.399, 8.435),\n     \"Perigee_km\": gaussian(675.666, 1.603),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.459, 0.479),\n     \"Inclination_radians\": gaussian(1.716, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1473.070, 1588.989),\n     \"Apogee_km\": gaussian(690.271, 14.654),\n     \"Perigee_km\": gaussian(680.528, 15.651),\n     \"Type_of_Orbit\": categorical([0.769, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.061, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015, 0.015, 0.106, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(98.447, 0.328),\n     \"Inclination_radians\": gaussian(1.712, 0.026),\n     \"Users\": categorical([0.026, 0.053, 0.105, 0.026, 0.026, 0.026, 0.026, 0.316, 0.053, 0.026, 0.026, 0.026, 0.026, 0.105, 0.026, 0.026, 0.053, 0.026]),\n     \"Class_of_Orbit\": categorical([0.875, 0.042, 0.042, 0.042]),\n     \"Launch_Site\": categorical([0.067, 0.044, 0.022, 0.222, 0.022, 0.022, 0.089, 0.022, 0.044, 0.022, 0.022, 0.022, 0.067, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.044, 0.022, 0.022, 0.044])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(764.881, 658.654),\n     \"Apogee_km\": gaussian(713.866, 199.593),\n     \"Perigee_km\": gaussian(646.628, 166.062),\n     \"Type_of_Orbit\": categorical([0.800, 0.018, 0.091, 0.036, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.129, 0.026, 0.009, 0.155, 0.009, 0.009, 0.009, 0.078, 0.009, 0.009, 0.009, 0.078, 0.009, 0.026, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.078, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.250, 3.311),\n     \"Inclination_radians\": gaussian(1.502, 0.416),\n     \"Users\": categorical([0.011, 0.080, 0.136, 0.034, 0.011, 0.011, 0.034, 0.398, 0.057, 0.011, 0.011, 0.034, 0.011, 0.080, 0.011, 0.011, 0.011, 0.045]),\n     \"Class_of_Orbit\": categorical([0.932, 0.014, 0.041, 0.014]),\n     \"Launch_Site\": categorical([0.063, 0.042, 0.021, 0.242, 0.137, 0.011, 0.021, 0.011, 0.032, 0.011, 0.011, 0.042, 0.084, 0.032, 0.021, 0.011, 0.021, 0.032, 0.011, 0.011, 0.032, 0.042, 0.011, 0.042, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3417.656, 5831.820),\n     \"Apogee_km\": gaussian(564.787, 76.615),\n     \"Perigee_km\": gaussian(549.003, 58.011),\n     \"Type_of_Orbit\": categorical([0.111, 0.111, 0.111, 0.333, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(95.862, 1.406),\n     \"Inclination_radians\": gaussian(0.581, 0.585),\n     \"Users\": categorical([0.045, 0.091, 0.045, 0.045, 0.045, 0.045, 0.045, 0.182, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.138, 0.034, 0.034, 0.069, 0.034])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.042, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.600, 0.370)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.473, 0.098, 0.172, 0.184, 0.008, 0.036, 0.028, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3672.886, 1414.939),\n     \"Apogee_km\": gaussian(35715.289, 1608.535),\n     \"Perigee_km\": gaussian(35712.880, 1604.516),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1432.871, 65.080),\n     \"Inclination_radians\": gaussian(0.018, 0.091),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.790, 16.283),\n     \"Apogee_km\": gaussian(718.592, 102.781),\n     \"Perigee_km\": gaussian(591.836, 79.957),\n     \"Type_of_Orbit\": categorical([0.864, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.032, 0.011, 0.074, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.084, 0.011, 0.337, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.813, 1.078),\n     \"Inclination_radians\": gaussian(1.657, 0.277),\n     \"Users\": categorical([0.015, 0.030, 0.030, 0.015, 0.015, 0.045, 0.015, 0.060, 0.254, 0.015, 0.030, 0.015, 0.015, 0.388, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.943, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.122, 0.027, 0.014, 0.135, 0.014, 0.027, 0.027, 0.014, 0.095, 0.014, 0.014, 0.014, 0.027, 0.243, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.054, 0.014])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(957.547, 1043.210),\n     \"Apogee_km\": gaussian(740.696, 224.674),\n     \"Perigee_km\": gaussian(678.997, 182.153),\n     \"Type_of_Orbit\": categorical([0.853, 0.013, 0.067, 0.027, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.053, 0.008, 0.015, 0.008, 0.008, 0.015, 0.008, 0.008, 0.015, 0.008, 0.015, 0.008, 0.008, 0.068, 0.023, 0.008, 0.174, 0.008, 0.008, 0.008, 0.098, 0.008, 0.008, 0.008, 0.114, 0.015, 0.023, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.106, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(99.209, 3.543),\n     \"Inclination_radians\": gaussian(1.673, 0.166),\n     \"Users\": categorical([0.010, 0.077, 0.144, 0.019, 0.010, 0.019, 0.029, 0.433, 0.029, 0.010, 0.010, 0.029, 0.010, 0.096, 0.010, 0.010, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.944, 0.011, 0.033, 0.011]),\n     \"Launch_Site\": categorical([0.072, 0.045, 0.009, 0.315, 0.117, 0.009, 0.036, 0.009, 0.045, 0.009, 0.009, 0.009, 0.090, 0.018, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.054, 0.009, 0.045, 0.018])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(844.120, 453.849),\n     \"Apogee_km\": gaussian(8458.641, 9212.616),\n     \"Perigee_km\": gaussian(8727.648, 8967.704),\n     \"Type_of_Orbit\": categorical([0.017, 0.017, 0.017, 0.900, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.261, 0.007, 0.007, 0.413, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(336.290, 292.112),\n     \"Inclination_radians\": gaussian(1.046, 0.194),\n     \"Users\": categorical([0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.291, 0.018, 0.464, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.082, 0.009]),\n     \"Class_of_Orbit\": categorical([0.594, 0.010, 0.021, 0.375]),\n     \"Launch_Site\": categorical([0.581, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.068, 0.120, 0.009, 0.009, 0.017])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.823, 0.988),\n     \"Apogee_km\": gaussian(693.909, 7.761),\n     \"Perigee_km\": gaussian(675.741, 1.671),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.494, 0.612),\n     \"Inclination_radians\": gaussian(1.720, 0.099),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3007.511, 1218.247),\n     \"Apogee_km\": gaussian(45704.474, 42791.244),\n     \"Perigee_km\": gaussian(20658.243, 14850.632),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.172, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1197.868, 1159.809),\n     \"Inclination_radians\": gaussian(0.907, 0.449),\n     \"Users\": categorical([0.028, 0.028, 0.417, 0.028, 0.028, 0.028, 0.028, 0.111, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.364, 0.318, 0.273]),\n     \"Launch_Site\": categorical([0.047, 0.023, 0.023, 0.070, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.256, 0.023, 0.116, 0.023, 0.023, 0.023, 0.047])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1473.337, 3256.007),\n     \"Apogee_km\": gaussian(574.896, 114.959),\n     \"Perigee_km\": gaussian(507.431, 56.181),\n     \"Type_of_Orbit\": categorical([0.273, 0.091, 0.091, 0.273, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.150, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.033, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(95.463, 1.308),\n     \"Inclination_radians\": gaussian(0.640, 0.418),\n     \"Users\": categorical([0.031, 0.094, 0.063, 0.063, 0.031, 0.031, 0.031, 0.188, 0.125, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.833, 0.056, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.051, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.051, 0.051, 0.026, 0.051, 0.026, 0.026, 0.026, 0.154, 0.026, 0.026, 0.051, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(115.952, 4.065),\n     \"Apogee_km\": gaussian(710.205, 2.717),\n     \"Perigee_km\": gaussian(671.596, 4.691),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.556, 2.242),\n     \"Inclination_radians\": gaussian(1.715, 0.397),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.042, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.672, 0.311)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.060, 0.104, 0.473, 0.134, 0.106, 0.008, 0.116]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1206.468, 2259.846),\n     \"Apogee_km\": gaussian(530.641, 69.734),\n     \"Perigee_km\": gaussian(503.914, 46.661),\n     \"Type_of_Orbit\": categorical([0.583, 0.042, 0.125, 0.125, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.132, 0.026, 0.013, 0.079, 0.013, 0.026, 0.013, 0.105, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.053, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.952, 1.056),\n     \"Inclination_radians\": gaussian(1.210, 0.558),\n     \"Users\": categorical([0.021, 0.083, 0.042, 0.042, 0.021, 0.021, 0.063, 0.354, 0.083, 0.021, 0.021, 0.021, 0.021, 0.104, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.912, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.055, 0.018, 0.036, 0.018, 0.073, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.073, 0.145, 0.036, 0.036, 0.018, 0.036, 0.055, 0.018, 0.018, 0.109, 0.055, 0.018, 0.055, 0.018])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.073, 24.715),\n     \"Apogee_km\": gaussian(727.599, 101.928),\n     \"Perigee_km\": gaussian(595.959, 83.599),\n     \"Type_of_Orbit\": categorical([0.872, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.327, 0.010, 0.010, 0.061, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.904, 1.224),\n     \"Inclination_radians\": gaussian(1.592, 0.345),\n     \"Users\": categorical([0.014, 0.086, 0.029, 0.014, 0.014, 0.043, 0.014, 0.071, 0.243, 0.014, 0.029, 0.014, 0.014, 0.343, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.117, 0.026, 0.013, 0.208, 0.013, 0.026, 0.026, 0.013, 0.091, 0.013, 0.013, 0.013, 0.026, 0.234, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3618.641, 1538.840),\n     \"Apogee_km\": gaussian(35689.409, 1552.959),\n     \"Perigee_km\": gaussian(35788.401, 1649.282),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1431.247, 61.933),\n     \"Inclination_radians\": gaussian(0.009, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(492.287, 199.078),\n     \"Apogee_km\": gaussian(1367.188, 164.485),\n     \"Perigee_km\": gaussian(1293.077, 306.728),\n     \"Type_of_Orbit\": categorical([0.048, 0.016, 0.016, 0.873, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.504, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.009, 0.035, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(112.571, 4.259),\n     \"Inclination_radians\": gaussian(1.106, 0.349),\n     \"Users\": categorical([0.024, 0.012, 0.047, 0.012, 0.012, 0.024, 0.012, 0.047, 0.565, 0.012, 0.012, 0.024, 0.012, 0.047, 0.012, 0.012, 0.106, 0.012]),\n     \"Class_of_Orbit\": categorical([0.915, 0.014, 0.056, 0.014]),\n     \"Launch_Site\": categorical([0.457, 0.011, 0.011, 0.098, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.087, 0.109, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1873.358, 1023.602),\n     \"Apogee_km\": gaussian(27372.507, 27473.827),\n     \"Perigee_km\": gaussian(19631.140, 8500.563),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(896.703, 721.510),\n     \"Inclination_radians\": gaussian(1.038, 0.269),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.988, 0.518),\n     \"Apogee_km\": gaussian(694.131, 8.433),\n     \"Perigee_km\": gaussian(675.629, 2.162),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.501, 0.569),\n     \"Inclination_radians\": gaussian(1.713, 0.068),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1042.414, 1121.406),\n     \"Apogee_km\": gaussian(723.839, 91.082),\n     \"Perigee_km\": gaussian(713.512, 96.827),\n     \"Type_of_Orbit\": categorical([0.860, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.067, 0.010, 0.029, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.048, 0.010, 0.010, 0.125, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.135, 0.019, 0.029, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.106, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.194, 1.929),\n     \"Inclination_radians\": gaussian(1.713, 0.021),\n     \"Users\": categorical([0.013, 0.039, 0.158, 0.026, 0.013, 0.013, 0.013, 0.421, 0.039, 0.013, 0.013, 0.026, 0.013, 0.092, 0.013, 0.013, 0.026, 0.053]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.060, 0.060, 0.012, 0.277, 0.120, 0.012, 0.036, 0.012, 0.060, 0.012, 0.012, 0.012, 0.036, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.084, 0.024])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.038, 0.012, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.656, 0.309)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.103)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.112, 0.473, 0.160, 0.186, 0.008, 0.034, 0.026, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.553, 24.204),\n     \"Apogee_km\": gaussian(730.450, 106.031),\n     \"Perigee_km\": gaussian(599.732, 95.240),\n     \"Type_of_Orbit\": categorical([0.880, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.078, 0.010, 0.333, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.941, 1.527),\n     \"Inclination_radians\": gaussian(1.597, 0.363),\n     \"Users\": categorical([0.014, 0.095, 0.027, 0.014, 0.014, 0.041, 0.014, 0.068, 0.243, 0.014, 0.027, 0.014, 0.014, 0.351, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.111, 0.025, 0.012, 0.198, 0.012, 0.025, 0.025, 0.012, 0.086, 0.012, 0.012, 0.012, 0.025, 0.222, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3632.963, 1459.327),\n     \"Apogee_km\": gaussian(35784.674, 1625.223),\n     \"Perigee_km\": gaussian(35747.464, 1674.614),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1431.877, 62.300),\n     \"Inclination_radians\": gaussian(0.016, 0.090),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1070.192, 1066.688),\n     \"Apogee_km\": gaussian(748.734, 235.121),\n     \"Perigee_km\": gaussian(682.745, 191.733),\n     \"Type_of_Orbit\": categorical([0.841, 0.014, 0.072, 0.029, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.056, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.016, 0.008, 0.008, 0.071, 0.016, 0.008, 0.143, 0.008, 0.008, 0.008, 0.103, 0.008, 0.008, 0.008, 0.119, 0.016, 0.024, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.111, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.868, 3.715),\n     \"Inclination_radians\": gaussian(1.701, 0.136),\n     \"Users\": categorical([0.010, 0.020, 0.153, 0.020, 0.010, 0.020, 0.031, 0.459, 0.031, 0.010, 0.010, 0.031, 0.010, 0.102, 0.010, 0.010, 0.020, 0.041]),\n     \"Class_of_Orbit\": categorical([0.940, 0.012, 0.036, 0.012]),\n     \"Launch_Site\": categorical([0.076, 0.048, 0.010, 0.286, 0.124, 0.010, 0.038, 0.010, 0.048, 0.010, 0.010, 0.010, 0.095, 0.019, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.057, 0.010, 0.038, 0.019])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(827.819, 444.761),\n     \"Apogee_km\": gaussian(8575.730, 8700.740),\n     \"Perigee_km\": gaussian(7757.277, 9382.592),\n     \"Type_of_Orbit\": categorical([0.017, 0.017, 0.017, 0.900, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.259, 0.007, 0.007, 0.410, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(321.996, 284.237),\n     \"Inclination_radians\": gaussian(1.057, 0.181),\n     \"Users\": categorical([0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.288, 0.018, 0.459, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.018, 0.081, 0.009]),\n     \"Class_of_Orbit\": categorical([0.588, 0.010, 0.031, 0.371]),\n     \"Launch_Site\": categorical([0.576, 0.008, 0.008, 0.008, 0.008, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.119, 0.008, 0.008, 0.025])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.979, 0.570),\n     \"Apogee_km\": gaussian(694.329, 7.996),\n     \"Perigee_km\": gaussian(675.888, 1.577),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.468, 0.444),\n     \"Inclination_radians\": gaussian(1.717, 0.077),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2848.639, 1261.623),\n     \"Apogee_km\": gaussian(48654.598, 43498.196),\n     \"Perigee_km\": gaussian(22541.743, 15115.742),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.175, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.048, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1277.867, 1176.731),\n     \"Inclination_radians\": gaussian(0.869, 0.431),\n     \"Users\": categorical([0.029, 0.029, 0.429, 0.029, 0.029, 0.029, 0.029, 0.114, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.381, 0.286, 0.286]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.071, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.262, 0.024, 0.119, 0.024, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1872.391, 3251.064),\n     \"Apogee_km\": gaussian(566.246, 90.280),\n     \"Perigee_km\": gaussian(518.726, 54.325),\n     \"Type_of_Orbit\": categorical([0.273, 0.091, 0.091, 0.273, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.119, 0.034, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.034, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(95.504, 0.946),\n     \"Inclination_radians\": gaussian(0.736, 0.482),\n     \"Users\": categorical([0.032, 0.129, 0.065, 0.065, 0.032, 0.032, 0.032, 0.161, 0.097, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.105, 0.026, 0.053, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.158, 0.026, 0.026, 0.079, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.077, 20.824),\n     \"Apogee_km\": gaussian(710.432, 3.217),\n     \"Perigee_km\": gaussian(671.974, 12.236),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(98.671, 1.880),\n     \"Inclination_radians\": gaussian(1.707, 0.196),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.950, 0.034, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.477, 0.389)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.068, 0.206, 0.473, 0.110, 0.106, 0.008, 0.030]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(188.587, 249.179),\n     \"Apogee_km\": gaussian(904.501, 273.672),\n     \"Perigee_km\": gaussian(625.983, 248.021),\n     \"Type_of_Orbit\": categorical([0.476, 0.048, 0.143, 0.190, 0.048, 0.048, 0.048]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.063, 0.013, 0.188, 0.025, 0.013, 0.075, 0.013, 0.013, 0.013, 0.050, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.050, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(99.944, 3.772),\n     \"Inclination_radians\": gaussian(1.441, 0.559),\n     \"Users\": categorical([0.019, 0.115, 0.115, 0.019, 0.019, 0.077, 0.019, 0.115, 0.154, 0.019, 0.019, 0.038, 0.019, 0.173, 0.019, 0.019, 0.019, 0.019]),\n     \"Class_of_Orbit\": categorical([0.842, 0.026, 0.105, 0.026]),\n     \"Launch_Site\": categorical([0.085, 0.017, 0.034, 0.390, 0.017, 0.034, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.068, 0.017, 0.017, 0.034])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(720.295, 1017.358),\n     \"Apogee_km\": gaussian(694.932, 108.669),\n     \"Perigee_km\": gaussian(654.973, 103.767),\n     \"Type_of_Orbit\": categorical([0.918, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.047, 0.007, 0.027, 0.007, 0.047, 0.020, 0.007, 0.007, 0.007, 0.013, 0.013, 0.034, 0.007, 0.168, 0.013, 0.007, 0.121, 0.007, 0.007, 0.007, 0.067, 0.007, 0.007, 0.007, 0.087, 0.013, 0.020, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.074, 0.007, 0.013, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.225, 2.193),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.008, 0.033, 0.099, 0.017, 0.008, 0.008, 0.025, 0.380, 0.116, 0.008, 0.017, 0.017, 0.008, 0.190, 0.008, 0.008, 0.017, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.078, 0.047, 0.008, 0.180, 0.102, 0.008, 0.031, 0.008, 0.086, 0.008, 0.008, 0.008, 0.086, 0.148, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.039, 0.008, 0.063, 0.016])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3477.570, 1529.953),\n     \"Apogee_km\": gaussian(35671.108, 1540.517),\n     \"Perigee_km\": gaussian(35763.557, 1616.466),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1433.117, 63.111),\n     \"Inclination_radians\": gaussian(0.019, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.962, 180.382),\n     \"Apogee_km\": gaussian(1422.792, 86.638),\n     \"Perigee_km\": gaussian(1403.465, 104.687),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.272, 1.720),\n     \"Inclination_radians\": gaussian(1.026, 0.245),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1858.786, 1051.860),\n     \"Apogee_km\": gaussian(30185.199, 27841.851),\n     \"Perigee_km\": gaussian(19519.140, 8667.558),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(840.531, 718.545),\n     \"Inclination_radians\": gaussian(1.022, 0.268),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.883, 0.677),\n     \"Apogee_km\": gaussian(694.244, 7.786),\n     \"Perigee_km\": gaussian(675.889, 1.504),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.525, 0.607),\n     \"Inclination_radians\": gaussian(1.711, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1395.026, 2980.643),\n     \"Apogee_km\": gaussian(556.323, 41.970),\n     \"Perigee_km\": gaussian(534.528, 38.808),\n     \"Type_of_Orbit\": categorical([0.385, 0.077, 0.077, 0.231, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.164, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.033, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(95.549, 0.911),\n     \"Inclination_radians\": gaussian(0.816, 0.382),\n     \"Users\": categorical([0.030, 0.091, 0.030, 0.061, 0.030, 0.030, 0.030, 0.152, 0.121, 0.030, 0.030, 0.030, 0.030, 0.182, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.842, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.125, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.100, 0.025, 0.050, 0.050, 0.025, 0.025, 0.025, 0.025, 0.025, 0.150, 0.025, 0.025, 0.050, 0.025])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.938, 0.050, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.636, 0.331)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.110, 0.473, 0.110, 0.106, 0.008, 0.038, 0.138, 0.018]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(502.265, 185.113),\n     \"Apogee_km\": gaussian(1422.549, 86.828),\n     \"Perigee_km\": gaussian(1406.021, 102.261),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.086, 1.712),\n     \"Inclination_radians\": gaussian(1.032, 0.237),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3559.549, 1493.254),\n     \"Apogee_km\": gaussian(35760.359, 1635.104),\n     \"Perigee_km\": gaussian(35666.289, 1676.994),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1433.434, 62.068),\n     \"Inclination_radians\": gaussian(0.016, 0.087),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.838, 16.149),\n     \"Apogee_km\": gaussian(707.368, 111.936),\n     \"Perigee_km\": gaussian(590.447, 90.435),\n     \"Type_of_Orbit\": categorical([0.875, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.030, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.079, 0.010, 0.356, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.620, 1.583),\n     \"Inclination_radians\": gaussian(1.547, 0.405),\n     \"Users\": categorical([0.014, 0.041, 0.014, 0.014, 0.014, 0.041, 0.014, 0.068, 0.247, 0.014, 0.027, 0.014, 0.014, 0.411, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.113, 0.025, 0.013, 0.125, 0.013, 0.025, 0.025, 0.013, 0.088, 0.013, 0.013, 0.050, 0.025, 0.225, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.063, 0.013, 0.050, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1822.504, 1066.043),\n     \"Apogee_km\": gaussian(28220.583, 27679.193),\n     \"Perigee_km\": gaussian(19584.901, 8971.488),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(876.202, 722.126),\n     \"Inclination_radians\": gaussian(1.029, 0.281),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.901, 0.495),\n     \"Apogee_km\": gaussian(693.870, 7.614),\n     \"Perigee_km\": gaussian(675.873, 1.443),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.453, 0.239),\n     \"Inclination_radians\": gaussian(1.712, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1459.661, 1604.778),\n     \"Apogee_km\": gaussian(691.235, 14.472),\n     \"Perigee_km\": gaussian(681.708, 15.822),\n     \"Type_of_Orbit\": categorical([0.760, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015, 0.015, 0.015, 0.046, 0.015, 0.015, 0.015, 0.108, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(98.477, 0.310),\n     \"Inclination_radians\": gaussian(1.712, 0.025),\n     \"Users\": categorical([0.027, 0.054, 0.108, 0.027, 0.027, 0.027, 0.027, 0.324, 0.054, 0.027, 0.027, 0.027, 0.027, 0.081, 0.027, 0.027, 0.054, 0.027]),\n     \"Class_of_Orbit\": categorical([0.870, 0.043, 0.043, 0.043]),\n     \"Launch_Site\": categorical([0.068, 0.045, 0.023, 0.227, 0.023, 0.023, 0.068, 0.023, 0.045, 0.023, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(758.812, 639.423),\n     \"Apogee_km\": gaussian(766.318, 241.718),\n     \"Perigee_km\": gaussian(670.692, 196.951),\n     \"Type_of_Orbit\": categorical([0.772, 0.018, 0.088, 0.070, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.061, 0.009, 0.035, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.017, 0.009, 0.070, 0.026, 0.009, 0.174, 0.009, 0.009, 0.009, 0.096, 0.009, 0.009, 0.009, 0.078, 0.009, 0.026, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.078, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.113, 3.683),\n     \"Inclination_radians\": gaussian(1.634, 0.257),\n     \"Users\": categorical([0.011, 0.080, 0.149, 0.023, 0.011, 0.023, 0.034, 0.414, 0.046, 0.011, 0.011, 0.034, 0.011, 0.057, 0.011, 0.011, 0.011, 0.046]),\n     \"Class_of_Orbit\": categorical([0.918, 0.014, 0.055, 0.014]),\n     \"Launch_Site\": categorical([0.085, 0.043, 0.011, 0.287, 0.138, 0.011, 0.021, 0.011, 0.043, 0.011, 0.011, 0.011, 0.085, 0.021, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011, 0.032, 0.011, 0.053, 0.021])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2221.485, 3809.004),\n     \"Apogee_km\": gaussian(589.443, 102.213),\n     \"Perigee_km\": gaussian(522.716, 62.057),\n     \"Type_of_Orbit\": categorical([0.111, 0.111, 0.111, 0.333, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(95.856, 0.926),\n     \"Inclination_radians\": gaussian(0.643, 0.459),\n     \"Users\": categorical([0.037, 0.074, 0.074, 0.074, 0.037, 0.037, 0.037, 0.185, 0.111, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.769, 0.077, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.176, 0.029, 0.029, 0.059, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.040, 0.012, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.644, 0.319)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.004, 0.137)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.136, 0.473, 0.110, 0.106, 0.008, 0.116, 0.052]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(496.976, 201.389),\n     \"Apogee_km\": gaussian(1359.537, 169.988),\n     \"Perigee_km\": gaussian(1270.623, 317.690),\n     \"Type_of_Orbit\": categorical([0.048, 0.016, 0.016, 0.873, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.500, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.009, 0.044, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(112.349, 4.821),\n     \"Inclination_radians\": gaussian(1.096, 0.354),\n     \"Users\": categorical([0.023, 0.012, 0.058, 0.012, 0.012, 0.023, 0.012, 0.047, 0.558, 0.012, 0.012, 0.023, 0.012, 0.047, 0.012, 0.012, 0.105, 0.012]),\n     \"Class_of_Orbit\": categorical([0.917, 0.014, 0.056, 0.014]),\n     \"Launch_Site\": categorical([0.452, 0.011, 0.022, 0.097, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.086, 0.108, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3548.908, 1515.449),\n     \"Apogee_km\": gaussian(35767.762, 1588.349),\n     \"Perigee_km\": gaussian(35710.887, 1598.283),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1431.412, 64.099),\n     \"Inclination_radians\": gaussian(0.015, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.612, 25.057),\n     \"Apogee_km\": gaussian(726.287, 106.152),\n     \"Perigee_km\": gaussian(596.769, 97.362),\n     \"Type_of_Orbit\": categorical([0.878, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.030, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.079, 0.010, 0.337, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.954, 1.483),\n     \"Inclination_radians\": gaussian(1.582, 0.375),\n     \"Users\": categorical([0.014, 0.096, 0.027, 0.014, 0.014, 0.041, 0.014, 0.055, 0.247, 0.014, 0.027, 0.014, 0.014, 0.356, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.113, 0.025, 0.013, 0.200, 0.013, 0.025, 0.025, 0.013, 0.075, 0.013, 0.013, 0.013, 0.025, 0.225, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.050, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1849.299, 1065.194),\n     \"Apogee_km\": gaussian(28312.689, 28499.338),\n     \"Perigee_km\": gaussian(20149.913, 8661.590),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(888.563, 726.391),\n     \"Inclination_radians\": gaussian(1.043, 0.274),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.922, 0.518),\n     \"Apogee_km\": gaussian(694.048, 7.925),\n     \"Perigee_km\": gaussian(675.820, 1.419),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.453, 0.409),\n     \"Inclination_radians\": gaussian(1.714, 0.065),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1116.931, 1090.273),\n     \"Apogee_km\": gaussian(721.758, 95.207),\n     \"Perigee_km\": gaussian(714.833, 93.690),\n     \"Type_of_Orbit\": categorical([0.862, 0.017, 0.052, 0.017, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.067, 0.010, 0.019, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.010, 0.038, 0.010, 0.010, 0.125, 0.010, 0.010, 0.010, 0.048, 0.010, 0.010, 0.010, 0.135, 0.019, 0.029, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.106, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.076, 1.896),\n     \"Inclination_radians\": gaussian(1.712, 0.021),\n     \"Users\": categorical([0.013, 0.026, 0.158, 0.026, 0.013, 0.013, 0.013, 0.461, 0.039, 0.013, 0.013, 0.026, 0.013, 0.066, 0.013, 0.013, 0.026, 0.053]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.060, 0.060, 0.012, 0.277, 0.120, 0.012, 0.036, 0.012, 0.072, 0.012, 0.012, 0.012, 0.060, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.048, 0.024])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1226.882, 2412.004),\n     \"Apogee_km\": gaussian(522.514, 44.901),\n     \"Perigee_km\": gaussian(506.401, 37.912),\n     \"Type_of_Orbit\": categorical([0.524, 0.048, 0.143, 0.143, 0.048, 0.048, 0.048]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.111, 0.028, 0.014, 0.083, 0.014, 0.028, 0.014, 0.083, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.056, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.879, 0.834),\n     \"Inclination_radians\": gaussian(1.274, 0.561),\n     \"Users\": categorical([0.023, 0.091, 0.023, 0.045, 0.023, 0.023, 0.068, 0.341, 0.068, 0.023, 0.023, 0.023, 0.023, 0.114, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.900, 0.033, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.059, 0.020, 0.020, 0.020, 0.078, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.078, 0.118, 0.039, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.118, 0.059, 0.020, 0.059, 0.020])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.042, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.535, 0.449)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.473, 0.232, 0.110, 0.106, 0.008, 0.050, 0.022]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3549.790, 1510.986),\n     \"Apogee_km\": gaussian(35742.142, 1607.274),\n     \"Perigee_km\": gaussian(35710.484, 1631.981),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1432.761, 61.813),\n     \"Inclination_radians\": gaussian(0.022, 0.090),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(489.473, 648.957),\n     \"Apogee_km\": gaussian(739.722, 202.190),\n     \"Perigee_km\": gaussian(635.621, 168.245),\n     \"Type_of_Orbit\": categorical([0.859, 0.011, 0.054, 0.043, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.006, 0.043, 0.006, 0.037, 0.006, 0.037, 0.006, 0.006, 0.006, 0.006, 0.012, 0.012, 0.056, 0.006, 0.241, 0.019, 0.006, 0.117, 0.006, 0.006, 0.006, 0.068, 0.006, 0.006, 0.006, 0.056, 0.006, 0.019, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.056, 0.006, 0.012, 0.006, 0.006, 0.006, 0.019, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.642, 3.002),\n     \"Inclination_radians\": gaussian(1.634, 0.283),\n     \"Users\": categorical([0.007, 0.060, 0.097, 0.015, 0.007, 0.030, 0.022, 0.284, 0.164, 0.007, 0.015, 0.022, 0.007, 0.209, 0.007, 0.007, 0.007, 0.030]),\n     \"Class_of_Orbit\": categorical([0.950, 0.008, 0.033, 0.008]),\n     \"Launch_Site\": categorical([0.113, 0.028, 0.007, 0.248, 0.092, 0.014, 0.014, 0.007, 0.071, 0.007, 0.007, 0.007, 0.057, 0.128, 0.014, 0.007, 0.014, 0.021, 0.007, 0.007, 0.007, 0.043, 0.007, 0.057, 0.014])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(511.186, 175.544),\n     \"Apogee_km\": gaussian(1424.975, 86.351),\n     \"Perigee_km\": gaussian(1408.852, 104.776),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.282, 1.735),\n     \"Inclination_radians\": gaussian(1.015, 0.248),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1914.017, 1002.129),\n     \"Apogee_km\": gaussian(28688.964, 27217.275),\n     \"Perigee_km\": gaussian(19907.849, 8697.690),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(872.438, 700.764),\n     \"Inclination_radians\": gaussian(1.033, 0.270),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.895, 0.714),\n     \"Apogee_km\": gaussian(694.317, 9.615),\n     \"Perigee_km\": gaussian(675.813, 1.586),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.497, 0.358),\n     \"Inclination_radians\": gaussian(1.714, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1194.789, 1527.259),\n     \"Apogee_km\": gaussian(689.635, 16.270),\n     \"Perigee_km\": gaussian(673.524, 21.958),\n     \"Type_of_Orbit\": categorical([0.800, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.070, 0.014, 0.014, 0.070, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.099, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.085, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(98.352, 0.358),\n     \"Inclination_radians\": gaussian(1.711, 0.021),\n     \"Users\": categorical([0.023, 0.047, 0.093, 0.023, 0.023, 0.023, 0.023, 0.302, 0.070, 0.023, 0.023, 0.023, 0.023, 0.163, 0.023, 0.023, 0.047, 0.023]),\n     \"Class_of_Orbit\": categorical([0.897, 0.034, 0.034, 0.034]),\n     \"Launch_Site\": categorical([0.060, 0.060, 0.020, 0.200, 0.020, 0.020, 0.080, 0.020, 0.040, 0.020, 0.020, 0.020, 0.080, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.060, 0.020, 0.020, 0.040])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1546.307, 3765.928),\n     \"Apogee_km\": gaussian(598.639, 119.666),\n     \"Perigee_km\": gaussian(517.767, 60.022),\n     \"Type_of_Orbit\": categorical([0.200, 0.100, 0.100, 0.300, 0.100, 0.100, 0.100]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.105, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.035, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(95.683, 1.186),\n     \"Inclination_radians\": gaussian(0.509, 0.393),\n     \"Users\": categorical([0.034, 0.103, 0.069, 0.069, 0.034, 0.034, 0.034, 0.207, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034]),\n     \"Class_of_Orbit\": categorical([0.800, 0.067, 0.067, 0.067]),\n     \"Launch_Site\": categorical([0.028, 0.028, 0.056, 0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.111, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.167, 0.028, 0.028, 0.056, 0.028])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.052, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.660, 0.305)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.110, 0.116, 0.473, 0.106, 0.008, 0.134, 0.026, 0.028]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(504.290, 179.559),\n     \"Apogee_km\": gaussian(1429.179, 91.425),\n     \"Perigee_km\": gaussian(1405.140, 103.482),\n     \"Type_of_Orbit\": categorical([0.034, 0.017, 0.017, 0.881, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.545, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.215, 1.721),\n     \"Inclination_radians\": gaussian(1.018, 0.247),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.630, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.123, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.488, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.100, 0.125, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.878, 24.367),\n     \"Apogee_km\": gaussian(733.033, 106.004),\n     \"Perigee_km\": gaussian(603.398, 102.018),\n     \"Type_of_Orbit\": categorical([0.882, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.077, 0.010, 0.356, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.100, 1.609),\n     \"Inclination_radians\": gaussian(1.576, 0.402),\n     \"Users\": categorical([0.013, 0.092, 0.026, 0.026, 0.013, 0.039, 0.013, 0.053, 0.237, 0.013, 0.026, 0.013, 0.013, 0.368, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.108, 0.024, 0.012, 0.193, 0.012, 0.024, 0.024, 0.012, 0.072, 0.012, 0.012, 0.012, 0.024, 0.217, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.024, 0.060, 0.012, 0.048, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3555.587, 1506.804),\n     \"Apogee_km\": gaussian(35696.993, 1574.677),\n     \"Perigee_km\": gaussian(35712.147, 1649.594),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1432.212, 61.464),\n     \"Inclination_radians\": gaussian(0.014, 0.090),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1876.101, 1036.048),\n     \"Apogee_km\": gaussian(27954.612, 27169.823),\n     \"Perigee_km\": gaussian(19464.835, 8439.227),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(888.050, 722.606),\n     \"Inclination_radians\": gaussian(1.045, 0.280),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.914, 0.667),\n     \"Apogee_km\": gaussian(694.505, 9.220),\n     \"Perigee_km\": gaussian(675.904, 1.533),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.588, 0.683),\n     \"Inclination_radians\": gaussian(1.711, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1066.977, 1011.463),\n     \"Apogee_km\": gaussian(678.817, 119.891),\n     \"Perigee_km\": gaussian(668.606, 121.997),\n     \"Type_of_Orbit\": categorical([0.877, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.009, 0.062, 0.009, 0.018, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.027, 0.018, 0.009, 0.159, 0.009, 0.009, 0.009, 0.088, 0.009, 0.009, 0.009, 0.115, 0.018, 0.027, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.097, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.243, 2.477),\n     \"Inclination_radians\": gaussian(1.712, 0.015),\n     \"Users\": categorical([0.012, 0.035, 0.141, 0.024, 0.012, 0.012, 0.035, 0.506, 0.035, 0.012, 0.012, 0.024, 0.012, 0.035, 0.012, 0.012, 0.024, 0.047]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.065, 0.054, 0.011, 0.250, 0.130, 0.011, 0.033, 0.011, 0.065, 0.011, 0.011, 0.011, 0.109, 0.022, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.011, 0.022, 0.011, 0.054, 0.022])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1607.294, 3533.362),\n     \"Apogee_km\": gaussian(530.100, 54.750),\n     \"Perigee_km\": gaussian(509.407, 53.092),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.250, 0.250, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.102, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.068, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(95.097, 1.351),\n     \"Inclination_radians\": gaussian(0.935, 0.574),\n     \"Users\": categorical([0.032, 0.097, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.097, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.105, 0.026, 0.053, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.132, 0.079, 0.026, 0.053, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(414.360, 287.312),\n     \"Apogee_km\": gaussian(1093.615, 270.111),\n     \"Perigee_km\": gaussian(722.488, 322.166),\n     \"Type_of_Orbit\": categorical([0.182, 0.091, 0.091, 0.364, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.083, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(103.092, 3.074),\n     \"Inclination_radians\": gaussian(1.399, 0.596),\n     \"Users\": categorical([0.031, 0.031, 0.156, 0.031, 0.031, 0.063, 0.031, 0.156, 0.094, 0.031, 0.031, 0.063, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.667, 0.056, 0.222, 0.056]),\n     \"Launch_Site\": categorical([0.128, 0.026, 0.051, 0.205, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.051])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.946, 0.040, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.497, 0.414)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.473, 0.112, 0.134, 0.106, 0.008, 0.114, 0.054]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3485.324, 1475.265),\n     \"Apogee_km\": gaussian(35852.721, 1583.912),\n     \"Perigee_km\": gaussian(35613.864, 1598.315),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1434.032, 62.174),\n     \"Inclination_radians\": gaussian(0.016, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.610, 25.176),\n     \"Apogee_km\": gaussian(730.118, 101.514),\n     \"Perigee_km\": gaussian(609.183, 91.798),\n     \"Type_of_Orbit\": categorical([0.880, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.078, 0.010, 0.333, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.138, 1.339),\n     \"Inclination_radians\": gaussian(1.598, 0.360),\n     \"Users\": categorical([0.014, 0.095, 0.027, 0.014, 0.014, 0.041, 0.014, 0.068, 0.230, 0.014, 0.027, 0.014, 0.014, 0.365, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.111, 0.025, 0.012, 0.198, 0.012, 0.025, 0.025, 0.012, 0.086, 0.012, 0.012, 0.012, 0.025, 0.222, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.049, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(497.469, 193.456),\n     \"Apogee_km\": gaussian(1378.968, 173.492),\n     \"Perigee_km\": gaussian(1288.812, 307.166),\n     \"Type_of_Orbit\": categorical([0.032, 0.016, 0.016, 0.887, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.504, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.009, 0.044, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(112.330, 4.538),\n     \"Inclination_radians\": gaussian(1.061, 0.353),\n     \"Users\": categorical([0.024, 0.012, 0.059, 0.012, 0.012, 0.024, 0.012, 0.047, 0.565, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.106, 0.012]),\n     \"Class_of_Orbit\": categorical([0.915, 0.014, 0.056, 0.014]),\n     \"Launch_Site\": categorical([0.446, 0.011, 0.022, 0.098, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.087, 0.109, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1827.526, 1035.745),\n     \"Apogee_km\": gaussian(26904.870, 26462.708),\n     \"Perigee_km\": gaussian(19991.229, 8614.196),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.465, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010]),\n     \"Period_minutes\": gaussian(929.561, 711.027),\n     \"Inclination_radians\": gaussian(1.032, 0.270),\n     \"Users\": categorical([0.014, 0.014, 0.211, 0.014, 0.014, 0.014, 0.451, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.140, 0.123, 0.719]),\n     \"Launch_Site\": categorical([0.372, 0.013, 0.013, 0.038, 0.013, 0.013, 0.064, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.141, 0.013, 0.064, 0.064, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.944, 0.463),\n     \"Apogee_km\": gaussian(694.436, 8.395),\n     \"Perigee_km\": gaussian(675.689, 1.968),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.530, 0.480),\n     \"Inclination_radians\": gaussian(1.716, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1091.956, 1092.158),\n     \"Apogee_km\": gaussian(725.829, 99.274),\n     \"Perigee_km\": gaussian(709.228, 99.046),\n     \"Type_of_Orbit\": categorical([0.860, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.068, 0.010, 0.019, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.029, 0.019, 0.010, 0.126, 0.010, 0.010, 0.010, 0.049, 0.010, 0.010, 0.010, 0.136, 0.019, 0.029, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.107, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.083, 2.123),\n     \"Inclination_radians\": gaussian(1.713, 0.021),\n     \"Users\": categorical([0.013, 0.027, 0.160, 0.027, 0.013, 0.013, 0.013, 0.453, 0.040, 0.013, 0.013, 0.040, 0.013, 0.053, 0.013, 0.013, 0.027, 0.053]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.073, 0.061, 0.012, 0.280, 0.122, 0.012, 0.037, 0.012, 0.061, 0.012, 0.012, 0.012, 0.061, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.049, 0.024])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1082.035, 2439.012),\n     \"Apogee_km\": gaussian(515.925, 47.007),\n     \"Perigee_km\": gaussian(505.901, 40.272),\n     \"Type_of_Orbit\": categorical([0.545, 0.045, 0.136, 0.136, 0.045, 0.045, 0.045]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.123, 0.027, 0.014, 0.082, 0.014, 0.027, 0.014, 0.082, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.055, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.845, 0.955),\n     \"Inclination_radians\": gaussian(1.224, 0.563),\n     \"Users\": categorical([0.022, 0.089, 0.022, 0.044, 0.022, 0.022, 0.067, 0.333, 0.089, 0.022, 0.022, 0.022, 0.022, 0.111, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.903, 0.032, 0.032, 0.032]),\n     \"Launch_Site\": categorical([0.058, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.115, 0.038, 0.038, 0.019, 0.038, 0.058, 0.019, 0.019, 0.115, 0.058, 0.019, 0.058, 0.019])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.948, 0.040, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.623, 0.356)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.998, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.067, 0.010, 0.003, 0.002, 0.003, 0.002, 0.035, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.035, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.028, 0.098, 0.473, 0.174, 0.184, 0.008, 0.036]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1325.209, 3242.835),\n     \"Apogee_km\": gaussian(571.838, 117.266),\n     \"Perigee_km\": gaussian(505.554, 59.212),\n     \"Type_of_Orbit\": categorical([0.273, 0.091, 0.091, 0.273, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.150, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.033, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(95.497, 1.372),\n     \"Inclination_radians\": gaussian(0.620, 0.400),\n     \"Users\": categorical([0.031, 0.094, 0.063, 0.063, 0.031, 0.031, 0.031, 0.188, 0.125, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.833, 0.056, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.051, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.051, 0.051, 0.026, 0.051, 0.026, 0.026, 0.026, 0.154, 0.026, 0.026, 0.051, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(9.715, 16.306),\n     \"Apogee_km\": gaussian(716.410, 101.323),\n     \"Perigee_km\": gaussian(586.411, 82.996),\n     \"Type_of_Orbit\": categorical([0.864, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.032, 0.011, 0.074, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.084, 0.011, 0.337, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.859, 1.087),\n     \"Inclination_radians\": gaussian(1.668, 0.266),\n     \"Users\": categorical([0.015, 0.030, 0.030, 0.015, 0.015, 0.045, 0.015, 0.060, 0.254, 0.015, 0.030, 0.015, 0.015, 0.388, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.943, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.122, 0.027, 0.014, 0.135, 0.014, 0.027, 0.027, 0.014, 0.095, 0.014, 0.014, 0.014, 0.027, 0.243, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.054, 0.014])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3587.817, 1500.554),\n     \"Apogee_km\": gaussian(35738.046, 1625.771),\n     \"Perigee_km\": gaussian(35740.093, 1585.156),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.014, 0.004, 0.742, 0.007, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.007, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.014, 0.011, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.014, 0.004, 0.014, 0.004, 0.004, 0.004, 0.004, 0.004, 0.004, 0.018, 0.004]),\n     \"Period_minutes\": gaussian(1432.557, 64.365),\n     \"Inclination_radians\": gaussian(0.016, 0.091),\n     \"Users\": categorical([0.004, 0.004, 0.114, 0.004, 0.012, 0.004, 0.024, 0.110, 0.675, 0.004, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.016, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.260, 0.004, 0.004, 0.004, 0.004, 0.004, 0.317, 0.019, 0.015, 0.004, 0.004, 0.004, 0.008, 0.004, 0.004, 0.004, 0.004, 0.004, 0.069, 0.004, 0.191, 0.004, 0.053, 0.008, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(951.221, 1035.030),\n     \"Apogee_km\": gaussian(747.493, 221.472),\n     \"Perigee_km\": gaussian(686.023, 190.148),\n     \"Type_of_Orbit\": categorical([0.855, 0.013, 0.066, 0.026, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.053, 0.008, 0.015, 0.008, 0.008, 0.023, 0.008, 0.008, 0.015, 0.008, 0.015, 0.008, 0.008, 0.068, 0.023, 0.008, 0.173, 0.008, 0.008, 0.008, 0.098, 0.008, 0.008, 0.008, 0.113, 0.015, 0.023, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.105, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(99.028, 3.552),\n     \"Inclination_radians\": gaussian(1.670, 0.168),\n     \"Users\": categorical([0.010, 0.076, 0.143, 0.019, 0.010, 0.019, 0.029, 0.438, 0.029, 0.010, 0.010, 0.029, 0.010, 0.095, 0.010, 0.010, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.945, 0.011, 0.033, 0.011]),\n     \"Launch_Site\": categorical([0.071, 0.045, 0.009, 0.321, 0.116, 0.009, 0.036, 0.009, 0.045, 0.009, 0.009, 0.009, 0.089, 0.018, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.054, 0.009, 0.045, 0.018])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(830.183, 445.369),\n     \"Apogee_km\": gaussian(8765.318, 9101.434),\n     \"Perigee_km\": gaussian(8335.791, 8779.433),\n     \"Type_of_Orbit\": categorical([0.017, 0.017, 0.017, 0.900, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.261, 0.007, 0.007, 0.413, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(341.146, 293.287),\n     \"Inclination_radians\": gaussian(1.057, 0.186),\n     \"Users\": categorical([0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.291, 0.009, 0.464, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.018, 0.082, 0.009]),\n     \"Class_of_Orbit\": categorical([0.594, 0.010, 0.021, 0.375]),\n     \"Launch_Site\": categorical([0.581, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.068, 0.120, 0.009, 0.009, 0.017])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.869, 0.754),\n     \"Apogee_km\": gaussian(694.237, 9.008),\n     \"Perigee_km\": gaussian(675.820, 1.472),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.523, 0.677),\n     \"Inclination_radians\": gaussian(1.714, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2733.196, 1395.943),\n     \"Apogee_km\": gaussian(44636.130, 42836.639),\n     \"Perigee_km\": gaussian(19873.806, 14670.318),\n     \"Type_of_Orbit\": categorical([0.083, 0.333, 0.083, 0.083, 0.250, 0.083, 0.083]),\n     \"Purpose\": categorical([0.172, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1221.825, 1195.417),\n     \"Inclination_radians\": gaussian(0.873, 0.457),\n     \"Users\": categorical([0.028, 0.028, 0.417, 0.028, 0.028, 0.028, 0.028, 0.139, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.364, 0.318, 0.273]),\n     \"Launch_Site\": categorical([0.047, 0.023, 0.023, 0.070, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.256, 0.023, 0.116, 0.023, 0.023, 0.023, 0.047])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.944, 0.042, 0.012, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.033)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.645, 0.320)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.016, 0.146)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.003, 0.002, 0.009, 0.002, 0.002, 0.012, 0.005, 0.003, 0.019, 0.005, 0.002, 0.002, 0.003, 0.002, 0.003, 0.009, 0.003, 0.002, 0.003, 0.002, 0.005, 0.003, 0.002, 0.002, 0.021, 0.002, 0.003, 0.069, 0.010, 0.003, 0.002, 0.003, 0.002, 0.034, 0.002, 0.002, 0.002, 0.002, 0.003, 0.095, 0.014, 0.009, 0.003, 0.002, 0.002, 0.078, 0.003, 0.003, 0.003, 0.002, 0.003, 0.007, 0.005, 0.002, 0.031, 0.002, 0.007, 0.002, 0.014, 0.014, 0.003, 0.333, 0.002, 0.002, 0.003, 0.002, 0.009, 0.002, 0.034, 0.002, 0.002, 0.003, 0.002, 0.003, 0.012, 0.002, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.116, 0.426, 0.093, 0.067, 0.007, 0.171, 0.075, 0.028, 0.017]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(681.080, 47.699),\n     \"Apogee_km\": gaussian(777.381, 8.473),\n     \"Perigee_km\": gaussian(773.363, 11.301),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.371, 0.151),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3615.126, 1423.461),\n     \"Apogee_km\": gaussian(35771.483, 1601.925),\n     \"Perigee_km\": gaussian(35659.684, 1580.429),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.758, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1431.158, 61.710),\n     \"Inclination_radians\": gaussian(0.017, 0.087),\n     \"Users\": categorical([0.004, 0.004, 0.106, 0.004, 0.011, 0.004, 0.022, 0.102, 0.697, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.249, 0.004, 0.004, 0.004, 0.004, 0.004, 0.342, 0.018, 0.014, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.068, 0.004, 0.185, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(520.481, 178.079),\n     \"Apogee_km\": gaussian(1427.664, 88.053),\n     \"Perigee_km\": gaussian(1401.178, 103.523),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.205, 1.591),\n     \"Inclination_radians\": gaussian(1.035, 0.240),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1517.358, 662.708),\n     \"Apogee_km\": gaussian(19763.314, 2651.949),\n     \"Perigee_km\": gaussian(19822.154, 2691.449),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(690.707, 91.875),\n     \"Inclination_radians\": gaussian(1.100, 0.099),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.946, 0.679),\n     \"Apogee_km\": gaussian(694.294, 9.052),\n     \"Perigee_km\": gaussian(675.782, 1.479),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.711, 0.984),\n     \"Inclination_radians\": gaussian(1.718, 0.055),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(667.046, 1005.756),\n     \"Apogee_km\": gaussian(692.182, 104.165),\n     \"Perigee_km\": gaussian(659.239, 96.514),\n     \"Type_of_Orbit\": categorical([0.919, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.047, 0.007, 0.027, 0.007, 0.047, 0.020, 0.007, 0.007, 0.007, 0.013, 0.013, 0.040, 0.007, 0.174, 0.007, 0.007, 0.121, 0.007, 0.007, 0.007, 0.067, 0.007, 0.007, 0.007, 0.087, 0.013, 0.013, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.074, 0.007, 0.013, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.192, 1.980),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.008, 0.025, 0.099, 0.017, 0.008, 0.008, 0.025, 0.380, 0.116, 0.008, 0.017, 0.017, 0.008, 0.198, 0.008, 0.008, 0.017, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.070, 0.047, 0.008, 0.188, 0.094, 0.008, 0.031, 0.008, 0.102, 0.008, 0.008, 0.008, 0.086, 0.148, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.039, 0.008, 0.055, 0.016])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(206.415, 326.156),\n     \"Apogee_km\": gaussian(744.301, 271.616),\n     \"Perigee_km\": gaussian(522.099, 128.336),\n     \"Type_of_Orbit\": categorical([0.556, 0.037, 0.148, 0.148, 0.037, 0.037, 0.037]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.275, 0.022, 0.011, 0.077, 0.011, 0.033, 0.011, 0.011, 0.011, 0.022, 0.011, 0.033, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.055, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.669, 2.654),\n     \"Inclination_radians\": gaussian(1.258, 0.546),\n     \"Users\": categorical([0.016, 0.143, 0.048, 0.032, 0.016, 0.063, 0.016, 0.159, 0.143, 0.016, 0.016, 0.016, 0.032, 0.222, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.898, 0.020, 0.061, 0.020]),\n     \"Launch_Site\": categorical([0.114, 0.014, 0.029, 0.300, 0.029, 0.029, 0.029, 0.014, 0.014, 0.014, 0.014, 0.057, 0.014, 0.029, 0.029, 0.014, 0.029, 0.014, 0.014, 0.014, 0.057, 0.057, 0.014, 0.043, 0.014])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2916.057, 1606.034),\n     \"Apogee_km\": gaussian(84462.927, 108736.037),\n     \"Perigee_km\": gaussian(21803.893, 17316.408),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.095, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.079, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1334.715, 1246.459),\n     \"Inclination_radians\": gaussian(1.997, 6.011),\n     \"Users\": categorical([0.029, 0.029, 0.286, 0.029, 0.029, 0.029, 0.029, 0.171, 0.086, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.524, 0.381, 0.048]),\n     \"Launch_Site\": categorical([0.048, 0.024, 0.024, 0.071, 0.024, 0.024, 0.071, 0.024, 0.048, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.048, 0.119, 0.024, 0.024, 0.024, 0.048])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2471.052, 4237.610),\n     \"Apogee_km\": gaussian(919.444, 229.470),\n     \"Perigee_km\": gaussian(888.334, 219.685),\n     \"Type_of_Orbit\": categorical([0.182, 0.091, 0.091, 0.364, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.071, 0.018, 0.036, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(103.982, 4.376),\n     \"Inclination_radians\": gaussian(1.324, 0.723),\n     \"Users\": categorical([0.036, 0.036, 0.143, 0.036, 0.036, 0.036, 0.036, 0.179, 0.107, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036]),\n     \"Class_of_Orbit\": categorical([0.714, 0.071, 0.143, 0.071]),\n     \"Launch_Site\": categorical([0.114, 0.029, 0.029, 0.114, 0.057, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.086, 0.029, 0.029, 0.029, 0.057])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.948, 0.038, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.650, 0.346)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.067, 0.116, 0.428, 0.093, 0.007, 0.032, 0.216, 0.027, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1510.022, 648.650),\n     \"Apogee_km\": gaussian(19729.628, 2561.365),\n     \"Perigee_km\": gaussian(19604.040, 2644.575),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(695.887, 90.710),\n     \"Inclination_radians\": gaussian(1.104, 0.100),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.485, 48.484),\n     \"Apogee_km\": gaussian(777.228, 8.339),\n     \"Perigee_km\": gaussian(773.814, 11.243),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.360, 0.166),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3579.798, 1426.164),\n     \"Apogee_km\": gaussian(35784.112, 1527.710),\n     \"Perigee_km\": gaussian(35673.542, 1620.887),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1431.949, 61.081),\n     \"Inclination_radians\": gaussian(0.016, 0.092),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(504.790, 186.827),\n     \"Apogee_km\": gaussian(1426.689, 85.854),\n     \"Perigee_km\": gaussian(1408.851, 103.834),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.258, 1.700),\n     \"Inclination_radians\": gaussian(1.024, 0.248),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.917, 0.477),\n     \"Apogee_km\": gaussian(694.807, 8.277),\n     \"Perigee_km\": gaussian(675.885, 1.495),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.553, 0.480),\n     \"Inclination_radians\": gaussian(1.715, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1544.265, 1666.368),\n     \"Apogee_km\": gaussian(693.359, 13.895),\n     \"Perigee_km\": gaussian(682.442, 14.914),\n     \"Type_of_Orbit\": categorical([0.760, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.062, 0.015, 0.015, 0.015, 0.046, 0.015, 0.015, 0.015, 0.092, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(98.516, 0.339),\n     \"Inclination_radians\": gaussian(1.712, 0.025),\n     \"Users\": categorical([0.027, 0.054, 0.108, 0.027, 0.027, 0.027, 0.027, 0.297, 0.054, 0.027, 0.027, 0.027, 0.027, 0.108, 0.027, 0.027, 0.054, 0.027]),\n     \"Class_of_Orbit\": categorical([0.870, 0.043, 0.043, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.045, 0.023, 0.227, 0.023, 0.023, 0.068, 0.023, 0.045, 0.023, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(428.551, 610.732),\n     \"Apogee_km\": gaussian(736.246, 203.830),\n     \"Perigee_km\": gaussian(630.280, 159.443),\n     \"Type_of_Orbit\": categorical([0.863, 0.010, 0.059, 0.039, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.040, 0.006, 0.040, 0.006, 0.040, 0.006, 0.006, 0.006, 0.006, 0.011, 0.011, 0.057, 0.006, 0.267, 0.017, 0.006, 0.119, 0.006, 0.006, 0.006, 0.063, 0.006, 0.006, 0.006, 0.057, 0.006, 0.017, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.051, 0.006, 0.011, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.585, 2.900),\n     \"Inclination_radians\": gaussian(1.609, 0.341),\n     \"Users\": categorical([0.007, 0.054, 0.095, 0.014, 0.007, 0.027, 0.020, 0.297, 0.155, 0.007, 0.014, 0.020, 0.014, 0.223, 0.007, 0.007, 0.007, 0.027]),\n     \"Class_of_Orbit\": categorical([0.955, 0.007, 0.030, 0.007]),\n     \"Launch_Site\": categorical([0.110, 0.032, 0.013, 0.245, 0.090, 0.013, 0.019, 0.006, 0.077, 0.006, 0.006, 0.013, 0.058, 0.129, 0.013, 0.006, 0.013, 0.019, 0.006, 0.006, 0.006, 0.039, 0.006, 0.052, 0.013])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3011.299, 1630.514),\n     \"Apogee_km\": gaussian(87587.535, 109120.521),\n     \"Perigee_km\": gaussian(20925.941, 18026.586),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1319.860, 1336.595),\n     \"Inclination_radians\": gaussian(2.194, 6.150),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1938.463, 4374.543),\n     \"Apogee_km\": gaussian(535.141, 60.981),\n     \"Perigee_km\": gaussian(519.259, 63.641),\n     \"Type_of_Orbit\": categorical([0.100, 0.100, 0.100, 0.400, 0.100, 0.100, 0.100]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.036, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(95.240, 1.466),\n     \"Inclination_radians\": gaussian(0.648, 0.356),\n     \"Users\": categorical([0.037, 0.111, 0.037, 0.074, 0.037, 0.037, 0.037, 0.222, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.769, 0.077, 0.077, 0.077]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.088, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.176, 0.029, 0.029, 0.059, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.945, 0.042, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.685, 0.297)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.116, 0.428, 0.105, 0.093, 0.067, 0.007, 0.118, 0.027, 0.040]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.366, 49.324),\n     \"Apogee_km\": gaussian(777.293, 8.567),\n     \"Perigee_km\": gaussian(774.291, 11.204),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.371, 0.154),\n     \"Inclination_radians\": gaussian(1.509, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3612.521, 1454.740),\n     \"Apogee_km\": gaussian(35794.285, 1564.249),\n     \"Perigee_km\": gaussian(35669.932, 1568.416),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1435.470, 59.972),\n     \"Inclination_radians\": gaussian(0.021, 0.093),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.423, 23.149),\n     \"Apogee_km\": gaussian(715.950, 118.343),\n     \"Perigee_km\": gaussian(595.185, 99.261),\n     \"Type_of_Orbit\": categorical([0.887, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.028, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.073, 0.009, 0.367, 0.009, 0.009, 0.055, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.972, 1.688),\n     \"Inclination_radians\": gaussian(1.533, 0.432),\n     \"Users\": categorical([0.012, 0.099, 0.025, 0.025, 0.012, 0.037, 0.012, 0.062, 0.222, 0.012, 0.025, 0.012, 0.012, 0.383, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.102, 0.023, 0.011, 0.193, 0.011, 0.023, 0.023, 0.011, 0.080, 0.011, 0.011, 0.045, 0.023, 0.205, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.023, 0.057, 0.011, 0.045, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(508.509, 180.544),\n     \"Apogee_km\": gaussian(1423.549, 82.449),\n     \"Perigee_km\": gaussian(1401.569, 108.337),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.223, 1.577),\n     \"Inclination_radians\": gaussian(1.033, 0.244),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1518.561, 673.009),\n     \"Apogee_km\": gaussian(19607.253, 2459.332),\n     \"Perigee_km\": gaussian(19599.068, 2590.225),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(697.494, 89.975),\n     \"Inclination_radians\": gaussian(1.099, 0.100),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.927, 0.723),\n     \"Apogee_km\": gaussian(694.741, 8.216),\n     \"Perigee_km\": gaussian(675.874, 1.592),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.604, 0.933),\n     \"Inclination_radians\": gaussian(1.715, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1087.195, 996.154),\n     \"Apogee_km\": gaussian(688.984, 125.796),\n     \"Perigee_km\": gaussian(678.368, 124.056),\n     \"Type_of_Orbit\": categorical([0.882, 0.015, 0.044, 0.015, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.017, 0.017, 0.017, 0.009, 0.034, 0.026, 0.009, 0.162, 0.009, 0.009, 0.009, 0.085, 0.009, 0.009, 0.009, 0.111, 0.017, 0.026, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.094, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.294, 2.581),\n     \"Inclination_radians\": gaussian(1.713, 0.015),\n     \"Users\": categorical([0.011, 0.034, 0.135, 0.022, 0.011, 0.011, 0.034, 0.517, 0.034, 0.011, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.022, 0.045]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.073, 0.052, 0.010, 0.250, 0.135, 0.010, 0.031, 0.010, 0.073, 0.010, 0.010, 0.010, 0.104, 0.021, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.021, 0.010, 0.052, 0.021])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2965.832, 1740.150),\n     \"Apogee_km\": gaussian(86651.898, 108519.596),\n     \"Perigee_km\": gaussian(20748.916, 16634.586),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1329.445, 1248.406),\n     \"Inclination_radians\": gaussian(2.014, 6.134),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1193.359, 2624.711),\n     \"Apogee_km\": gaussian(829.368, 356.427),\n     \"Perigee_km\": gaussian(633.322, 273.708),\n     \"Type_of_Orbit\": categorical([0.063, 0.063, 0.250, 0.438, 0.063, 0.063, 0.063]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.057, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.114, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.057, 0.014, 0.043, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.057, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.483, 4.863),\n     \"Inclination_radians\": gaussian(1.156, 0.613),\n     \"Users\": categorical([0.024, 0.048, 0.119, 0.024, 0.024, 0.048, 0.024, 0.238, 0.119, 0.024, 0.024, 0.024, 0.048, 0.119, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.786, 0.036, 0.143, 0.036]),\n     \"Launch_Site\": categorical([0.102, 0.020, 0.041, 0.163, 0.041, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.102, 0.061, 0.020, 0.041, 0.041])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.947, 0.040, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.694, 0.300)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.116, 0.428, 0.093, 0.175, 0.067, 0.007, 0.070, 0.027, 0.018]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.106, 48.204),\n     \"Apogee_km\": gaussian(777.248, 8.637),\n     \"Perigee_km\": gaussian(773.131, 10.670),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.372, 0.163),\n     \"Inclination_radians\": gaussian(1.509, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3589.214, 1411.918),\n     \"Apogee_km\": gaussian(35723.412, 1591.760),\n     \"Perigee_km\": gaussian(35750.501, 1588.354),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1432.824, 59.924),\n     \"Inclination_radians\": gaussian(0.021, 0.092),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(516.003, 174.241),\n     \"Apogee_km\": gaussian(1424.818, 85.849),\n     \"Perigee_km\": gaussian(1404.641, 100.394),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.260, 1.573),\n     \"Inclination_radians\": gaussian(1.029, 0.233),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(728.671, 1001.598),\n     \"Apogee_km\": gaussian(690.944, 106.644),\n     \"Perigee_km\": gaussian(653.329, 98.243),\n     \"Type_of_Orbit\": categorical([0.921, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.046, 0.007, 0.026, 0.007, 0.046, 0.020, 0.007, 0.007, 0.007, 0.013, 0.013, 0.040, 0.007, 0.172, 0.013, 0.007, 0.126, 0.007, 0.007, 0.007, 0.066, 0.007, 0.007, 0.007, 0.086, 0.013, 0.013, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.073, 0.007, 0.013, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.067, 1.961),\n     \"Inclination_radians\": gaussian(1.712, 0.013),\n     \"Users\": categorical([0.008, 0.033, 0.098, 0.016, 0.008, 0.008, 0.024, 0.382, 0.114, 0.008, 0.016, 0.016, 0.008, 0.195, 0.008, 0.008, 0.016, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.077, 0.046, 0.008, 0.185, 0.092, 0.008, 0.031, 0.008, 0.100, 0.008, 0.008, 0.008, 0.085, 0.146, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.038, 0.008, 0.062, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1543.360, 646.578),\n     \"Apogee_km\": gaussian(19549.479, 2525.275),\n     \"Perigee_km\": gaussian(19569.904, 2658.763),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(698.439, 90.433),\n     \"Inclination_radians\": gaussian(1.103, 0.105),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.987, 0.532),\n     \"Apogee_km\": gaussian(693.412, 8.510),\n     \"Perigee_km\": gaussian(675.721, 1.595),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.610, 0.774),\n     \"Inclination_radians\": gaussian(1.715, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(182.564, 351.076),\n     \"Apogee_km\": gaussian(754.047, 270.245),\n     \"Perigee_km\": gaussian(524.413, 132.319),\n     \"Type_of_Orbit\": categorical([0.542, 0.042, 0.125, 0.167, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.284, 0.011, 0.011, 0.068, 0.011, 0.034, 0.011, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.490, 2.798),\n     \"Inclination_radians\": gaussian(1.222, 0.538),\n     \"Users\": categorical([0.017, 0.133, 0.050, 0.033, 0.017, 0.067, 0.017, 0.150, 0.150, 0.017, 0.017, 0.017, 0.017, 0.233, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.891, 0.022, 0.065, 0.022]),\n     \"Launch_Site\": categorical([0.104, 0.015, 0.030, 0.313, 0.015, 0.030, 0.030, 0.015, 0.015, 0.015, 0.015, 0.060, 0.015, 0.030, 0.030, 0.015, 0.030, 0.015, 0.015, 0.015, 0.060, 0.060, 0.015, 0.030, 0.015])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2960.541, 1603.719),\n     \"Apogee_km\": gaussian(87527.469, 110639.592),\n     \"Perigee_km\": gaussian(21350.838, 17014.657),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1359.020, 1260.721),\n     \"Inclination_radians\": gaussian(2.182, 6.127),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2220.846, 4190.432),\n     \"Apogee_km\": gaussian(911.989, 238.555),\n     \"Perigee_km\": gaussian(888.192, 213.276),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.167, 0.333, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.070, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.070, 0.018, 0.035, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(103.004, 4.549),\n     \"Inclination_radians\": gaussian(1.353, 0.702),\n     \"Users\": categorical([0.034, 0.034, 0.138, 0.034, 0.034, 0.034, 0.034, 0.172, 0.103, 0.034, 0.034, 0.069, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034]),\n     \"Class_of_Orbit\": categorical([0.733, 0.067, 0.133, 0.067]),\n     \"Launch_Site\": categorical([0.111, 0.028, 0.028, 0.111, 0.083, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.083, 0.028, 0.028, 0.028, 0.056])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.948, 0.038, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.671, 0.317)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.067, 0.428, 0.078, 0.093, 0.007, 0.073, 0.116, 0.047, 0.027, 0.065]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1498.140, 640.279),\n     \"Apogee_km\": gaussian(19642.171, 2561.861),\n     \"Perigee_km\": gaussian(19510.656, 2605.565),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(699.539, 91.353),\n     \"Inclination_radians\": gaussian(1.102, 0.103),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3531.567, 1434.656),\n     \"Apogee_km\": gaussian(35707.094, 1544.158),\n     \"Perigee_km\": gaussian(35727.537, 1603.182),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1432.766, 59.662),\n     \"Inclination_radians\": gaussian(0.021, 0.091),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(9.023, 16.243),\n     \"Apogee_km\": gaussian(726.484, 103.534),\n     \"Perigee_km\": gaussian(584.930, 86.446),\n     \"Type_of_Orbit\": categorical([0.850, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.022, 0.011, 0.075, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.086, 0.011, 0.344, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.936, 1.083),\n     \"Inclination_radians\": gaussian(1.622, 0.368),\n     \"Users\": categorical([0.015, 0.015, 0.031, 0.015, 0.015, 0.046, 0.015, 0.062, 0.262, 0.015, 0.015, 0.015, 0.015, 0.400, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.941, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.125, 0.014, 0.014, 0.167, 0.014, 0.028, 0.028, 0.014, 0.083, 0.014, 0.014, 0.014, 0.028, 0.236, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.042, 0.014])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.236, 183.654),\n     \"Apogee_km\": gaussian(1417.760, 87.635),\n     \"Perigee_km\": gaussian(1402.499, 101.237),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.154, 1.623),\n     \"Inclination_radians\": gaussian(1.017, 0.244),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.843, 0.788),\n     \"Apogee_km\": gaussian(693.648, 7.958),\n     \"Perigee_km\": gaussian(675.692, 1.945),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.652, 0.732),\n     \"Inclination_radians\": gaussian(1.716, 0.067),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1024.077, 1231.935),\n     \"Apogee_km\": gaussian(664.011, 39.139),\n     \"Perigee_km\": gaussian(648.498, 42.010),\n     \"Type_of_Orbit\": categorical([0.833, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.033, 0.011, 0.011, 0.011, 0.022, 0.011, 0.022, 0.011, 0.056, 0.011, 0.011, 0.133, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.122, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.089, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.916, 0.873),\n     \"Inclination_radians\": gaussian(1.711, 0.017),\n     \"Users\": categorical([0.016, 0.048, 0.081, 0.032, 0.016, 0.016, 0.016, 0.468, 0.032, 0.016, 0.032, 0.016, 0.016, 0.065, 0.016, 0.016, 0.032, 0.065]),\n     \"Class_of_Orbit\": categorical([0.938, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.043, 0.058, 0.014, 0.232, 0.072, 0.014, 0.043, 0.014, 0.101, 0.014, 0.014, 0.014, 0.072, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.072, 0.029])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.147, 48.664),\n     \"Apogee_km\": gaussian(777.355, 8.525),\n     \"Perigee_km\": gaussian(773.465, 10.878),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.360, 0.159),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1196.980, 2315.174),\n     \"Apogee_km\": gaussian(513.987, 48.967),\n     \"Perigee_km\": gaussian(498.717, 44.285),\n     \"Type_of_Orbit\": categorical([0.522, 0.043, 0.130, 0.174, 0.043, 0.043, 0.043]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.122, 0.027, 0.014, 0.081, 0.014, 0.041, 0.014, 0.081, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.808, 1.080),\n     \"Inclination_radians\": gaussian(1.256, 0.537),\n     \"Users\": categorical([0.022, 0.087, 0.022, 0.043, 0.022, 0.022, 0.065, 0.348, 0.087, 0.022, 0.022, 0.022, 0.022, 0.109, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.906, 0.031, 0.031, 0.031]),\n     \"Launch_Site\": categorical([0.075, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.113, 0.038, 0.038, 0.019, 0.038, 0.057, 0.019, 0.019, 0.113, 0.057, 0.019, 0.057, 0.019])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2926.290, 1636.519),\n     \"Apogee_km\": gaussian(91658.066, 107883.046),\n     \"Perigee_km\": gaussian(20989.784, 17422.004),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1321.243, 1213.975),\n     \"Inclination_radians\": gaussian(2.585, 6.502),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(727.707, 700.928),\n     \"Apogee_km\": gaussian(928.412, 210.619),\n     \"Perigee_km\": gaussian(766.837, 196.358),\n     \"Type_of_Orbit\": categorical([0.697, 0.030, 0.061, 0.121, 0.030, 0.030, 0.030]),\n     \"Purpose\": categorical([0.012, 0.082, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.024, 0.012, 0.082, 0.024, 0.012, 0.094, 0.012, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.059, 0.012, 0.035, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.059, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(101.861, 2.232),\n     \"Inclination_radians\": gaussian(1.537, 0.420),\n     \"Users\": categorical([0.018, 0.105, 0.211, 0.018, 0.018, 0.035, 0.018, 0.228, 0.070, 0.018, 0.018, 0.053, 0.035, 0.088, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.860, 0.023, 0.093, 0.023]),\n     \"Launch_Site\": categorical([0.094, 0.047, 0.031, 0.328, 0.109, 0.016, 0.031, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.047, 0.016, 0.016, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.945, 0.038, 0.013, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.645, 0.354)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.009, 0.081)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.426, 0.085, 0.116, 0.063, 0.007, 0.022, 0.160, 0.010, 0.093, 0.018]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3697.824, 1490.772),\n     \"Apogee_km\": gaussian(35740.566, 1595.480),\n     \"Perigee_km\": gaussian(35704.044, 1578.544),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.758, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1430.538, 60.502),\n     \"Inclination_radians\": gaussian(0.017, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.106, 0.004, 0.011, 0.004, 0.022, 0.102, 0.697, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.988, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.249, 0.004, 0.004, 0.004, 0.004, 0.004, 0.342, 0.018, 0.014, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.068, 0.004, 0.185, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(9.191, 16.564),\n     \"Apogee_km\": gaussian(719.534, 100.344),\n     \"Perigee_km\": gaussian(590.204, 76.597),\n     \"Type_of_Orbit\": categorical([0.867, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.031, 0.010, 0.072, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.082, 0.010, 0.351, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.911, 1.080),\n     \"Inclination_radians\": gaussian(1.676, 0.264),\n     \"Users\": categorical([0.014, 0.029, 0.029, 0.014, 0.014, 0.043, 0.014, 0.072, 0.246, 0.014, 0.029, 0.014, 0.014, 0.391, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.945, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.118, 0.026, 0.013, 0.145, 0.013, 0.026, 0.026, 0.013, 0.105, 0.013, 0.013, 0.013, 0.026, 0.237, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.053, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.581, 50.295),\n     \"Apogee_km\": gaussian(777.225, 8.297),\n     \"Perigee_km\": gaussian(772.867, 11.080),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.366, 0.152),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1410.538, 379.673),\n     \"Apogee_km\": gaussian(19518.600, 2623.834),\n     \"Perigee_km\": gaussian(19486.102, 2603.311),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.464, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(689.614, 91.223),\n     \"Inclination_radians\": gaussian(1.106, 0.100),\n     \"Users\": categorical([0.018, 0.018, 0.071, 0.018, 0.018, 0.018, 0.571, 0.018, 0.071, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.024, 0.024, 0.024, 0.929]),\n     \"Launch_Site\": categorical([0.444, 0.016, 0.016, 0.016, 0.016, 0.016, 0.079, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016, 0.016, 0.079, 0.016, 0.016, 0.016])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.985, 0.636),\n     \"Apogee_km\": gaussian(694.280, 10.043),\n     \"Perigee_km\": gaussian(675.827, 1.439),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.623, 0.793),\n     \"Inclination_radians\": gaussian(1.714, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2857.883, 1290.731),\n     \"Apogee_km\": gaussian(30650.912, 11919.199),\n     \"Perigee_km\": gaussian(24107.774, 16642.649),\n     \"Type_of_Orbit\": categorical([0.111, 0.111, 0.111, 0.111, 0.333, 0.111, 0.111]),\n     \"Purpose\": categorical([0.136, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.068, 0.017]),\n     \"Period_minutes\": gaussian(883.835, 606.327),\n     \"Inclination_radians\": gaussian(0.926, 0.486),\n     \"Users\": categorical([0.032, 0.032, 0.387, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.529, 0.235, 0.176]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.211, 0.026, 0.079, 0.026, 0.026, 0.026, 0.053])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(942.356, 991.974),\n     \"Apogee_km\": gaussian(695.534, 151.673),\n     \"Perigee_km\": gaussian(680.290, 155.639),\n     \"Type_of_Orbit\": categorical([0.819, 0.012, 0.072, 0.060, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.049, 0.007, 0.035, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.085, 0.021, 0.007, 0.169, 0.007, 0.014, 0.007, 0.092, 0.007, 0.007, 0.007, 0.106, 0.014, 0.021, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.099, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.588, 3.123),\n     \"Inclination_radians\": gaussian(1.587, 0.318),\n     \"Users\": categorical([0.009, 0.079, 0.132, 0.026, 0.009, 0.009, 0.026, 0.430, 0.070, 0.009, 0.009, 0.026, 0.018, 0.079, 0.009, 0.009, 0.018, 0.035]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.091, 0.041, 0.008, 0.273, 0.116, 0.008, 0.025, 0.008, 0.050, 0.008, 0.008, 0.033, 0.083, 0.025, 0.017, 0.008, 0.017, 0.025, 0.008, 0.008, 0.025, 0.050, 0.008, 0.041, 0.017])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2889.365, 2451.832),\n     \"Apogee_km\": gaussian(175673.696, 159586.328),\n     \"Perigee_km\": gaussian(14433.280, 17788.069),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.058, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(2022.263, 1769.622),\n     \"Inclination_radians\": gaussian(3.961, 10.082),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.300, 0.500, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.097, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(506.943, 178.173),\n     \"Apogee_km\": gaussian(1431.662, 85.425),\n     \"Perigee_km\": gaussian(1401.410, 103.720),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.243, 1.605),\n     \"Inclination_radians\": gaussian(1.031, 0.247),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1872.239, 4009.693),\n     \"Apogee_km\": gaussian(961.243, 419.407),\n     \"Perigee_km\": gaussian(498.465, 203.215),\n     \"Type_of_Orbit\": categorical([0.111, 0.111, 0.111, 0.333, 0.111, 0.111, 0.111]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.105, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(99.278, 4.172),\n     \"Inclination_radians\": gaussian(0.729, 0.616),\n     \"Users\": categorical([0.034, 0.069, 0.069, 0.034, 0.034, 0.069, 0.034, 0.241, 0.034, 0.034, 0.034, 0.034, 0.034, 0.103, 0.034, 0.034, 0.034, 0.034]),\n     \"Class_of_Orbit\": categorical([0.600, 0.067, 0.267, 0.067]),\n     \"Launch_Site\": categorical([0.028, 0.028, 0.056, 0.139, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.111, 0.028, 0.028, 0.056, 0.056])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.947, 0.035, 0.012, 0.005, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.029)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.725, 0.310)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.044, 0.093)\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Eccentricity\": gaussian(0.163, 0.307)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.050, 0.095, 0.428, 0.233, 0.067, 0.007, 0.095, 0.027]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1125.435, 2272.383),\n     \"Apogee_km\": gaussian(520.792, 52.944),\n     \"Perigee_km\": gaussian(502.971, 45.670),\n     \"Type_of_Orbit\": categorical([0.560, 0.040, 0.120, 0.160, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.132, 0.026, 0.013, 0.079, 0.013, 0.039, 0.013, 0.092, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.053, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.824, 1.102),\n     \"Inclination_radians\": gaussian(1.224, 0.550),\n     \"Users\": categorical([0.021, 0.083, 0.021, 0.042, 0.021, 0.021, 0.063, 0.375, 0.083, 0.021, 0.021, 0.021, 0.021, 0.104, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.912, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.073, 0.018, 0.018, 0.018, 0.091, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.073, 0.127, 0.036, 0.036, 0.018, 0.036, 0.055, 0.018, 0.018, 0.109, 0.055, 0.018, 0.055, 0.018])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.823, 24.154),\n     \"Apogee_km\": gaussian(731.051, 100.124),\n     \"Perigee_km\": gaussian(600.856, 89.837),\n     \"Type_of_Orbit\": categorical([0.880, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.068, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.078, 0.010, 0.340, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.133, 1.289),\n     \"Inclination_radians\": gaussian(1.603, 0.350),\n     \"Users\": categorical([0.013, 0.093, 0.027, 0.013, 0.013, 0.040, 0.013, 0.080, 0.227, 0.013, 0.027, 0.013, 0.013, 0.360, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.110, 0.024, 0.012, 0.207, 0.012, 0.024, 0.024, 0.012, 0.098, 0.012, 0.012, 0.012, 0.024, 0.220, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3643.028, 1466.481),\n     \"Apogee_km\": gaussian(35611.531, 1535.483),\n     \"Perigee_km\": gaussian(35722.305, 1449.550),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1432.801, 60.866),\n     \"Inclination_radians\": gaussian(0.019, 0.092),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(591.625, 159.289),\n     \"Apogee_km\": gaussian(1067.691, 316.436),\n     \"Perigee_km\": gaussian(1016.648, 349.401),\n     \"Type_of_Orbit\": categorical([0.015, 0.007, 0.537, 0.418, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.688, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.027, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.022, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(106.708, 6.782),\n     \"Inclination_radians\": gaussian(1.305, 0.325),\n     \"Users\": categorical([0.013, 0.006, 0.032, 0.006, 0.006, 0.013, 0.006, 0.038, 0.304, 0.006, 0.006, 0.006, 0.456, 0.025, 0.006, 0.006, 0.057, 0.006]),\n     \"Class_of_Orbit\": categorical([0.958, 0.007, 0.028, 0.007]),\n     \"Launch_Site\": categorical([0.339, 0.006, 0.012, 0.339, 0.061, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.048, 0.073, 0.006, 0.006, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1519.257, 661.172),\n     \"Apogee_km\": gaussian(19675.991, 2627.319),\n     \"Perigee_km\": gaussian(19592.256, 2720.011),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(695.012, 85.279),\n     \"Inclination_radians\": gaussian(1.104, 0.103),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.907, 0.592),\n     \"Apogee_km\": gaussian(694.086, 7.417),\n     \"Perigee_km\": gaussian(675.903, 1.585),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.523, 0.779),\n     \"Inclination_radians\": gaussian(1.715, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1175.495, 1098.332),\n     \"Apogee_km\": gaussian(727.600, 101.310),\n     \"Perigee_km\": gaussian(718.528, 97.769),\n     \"Type_of_Orbit\": categorical([0.862, 0.017, 0.052, 0.017, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.068, 0.010, 0.019, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.019, 0.019, 0.010, 0.029, 0.019, 0.010, 0.136, 0.010, 0.010, 0.010, 0.039, 0.010, 0.010, 0.010, 0.126, 0.019, 0.029, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.107, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.370, 2.122),\n     \"Inclination_radians\": gaussian(1.715, 0.017),\n     \"Users\": categorical([0.013, 0.027, 0.160, 0.027, 0.013, 0.013, 0.013, 0.440, 0.040, 0.013, 0.013, 0.040, 0.013, 0.067, 0.013, 0.013, 0.027, 0.053]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.061, 0.061, 0.012, 0.293, 0.110, 0.012, 0.037, 0.012, 0.073, 0.012, 0.012, 0.012, 0.049, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.049, 0.012, 0.049, 0.024])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3004.097, 1624.634),\n     \"Apogee_km\": gaussian(82043.898, 111904.006),\n     \"Perigee_km\": gaussian(21960.442, 18369.653),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1310.288, 1258.028),\n     \"Inclination_radians\": gaussian(2.213, 6.277),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.943, 0.043, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.695, 0.277)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.087, 0.428, 0.116, 0.067, 0.007, 0.027, 0.158, 0.093, 0.017, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.719, 16.836),\n     \"Apogee_km\": gaussian(722.426, 98.891),\n     \"Perigee_km\": gaussian(586.284, 80.641),\n     \"Type_of_Orbit\": categorical([0.867, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.031, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.082, 0.010, 0.357, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.871, 1.028),\n     \"Inclination_radians\": gaussian(1.642, 0.354),\n     \"Users\": categorical([0.014, 0.029, 0.029, 0.014, 0.014, 0.043, 0.014, 0.086, 0.243, 0.014, 0.029, 0.014, 0.014, 0.386, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.117, 0.026, 0.013, 0.156, 0.013, 0.026, 0.026, 0.013, 0.104, 0.013, 0.013, 0.013, 0.026, 0.234, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.052, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3594.138, 1478.496),\n     \"Apogee_km\": gaussian(35702.879, 1529.022),\n     \"Perigee_km\": gaussian(35707.469, 1578.806),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1430.231, 60.732),\n     \"Inclination_radians\": gaussian(0.017, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.868, 48.304),\n     \"Apogee_km\": gaussian(777.193, 8.553),\n     \"Perigee_km\": gaussian(773.403, 11.481),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.366, 0.156),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1514.795, 641.710),\n     \"Apogee_km\": gaussian(19671.199, 2554.607),\n     \"Perigee_km\": gaussian(19552.040, 2542.822),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(699.068, 90.920),\n     \"Inclination_radians\": gaussian(1.106, 0.101),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.952, 0.674),\n     \"Apogee_km\": gaussian(694.485, 8.663),\n     \"Perigee_km\": gaussian(675.431, 2.426),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.644, 0.876),\n     \"Inclination_radians\": gaussian(1.716, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2910.612, 1652.371),\n     \"Apogee_km\": gaussian(86383.055, 109092.298),\n     \"Perigee_km\": gaussian(21842.728, 18164.432),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1294.765, 1312.334),\n     \"Inclination_radians\": gaussian(2.334, 5.955),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(949.575, 989.945),\n     \"Apogee_km\": gaussian(745.470, 220.983),\n     \"Perigee_km\": gaussian(670.672, 169.154),\n     \"Type_of_Orbit\": categorical([0.815, 0.012, 0.074, 0.062, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.050, 0.007, 0.035, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.014, 0.021, 0.007, 0.085, 0.021, 0.007, 0.170, 0.007, 0.014, 0.007, 0.092, 0.007, 0.007, 0.007, 0.106, 0.014, 0.021, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.099, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.916, 3.405),\n     \"Inclination_radians\": gaussian(1.611, 0.293),\n     \"Users\": categorical([0.009, 0.071, 0.142, 0.018, 0.009, 0.018, 0.027, 0.434, 0.062, 0.009, 0.009, 0.027, 0.018, 0.080, 0.009, 0.009, 0.018, 0.035]),\n     \"Class_of_Orbit\": categorical([0.939, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.092, 0.042, 0.017, 0.292, 0.117, 0.008, 0.033, 0.008, 0.050, 0.008, 0.008, 0.008, 0.083, 0.017, 0.017, 0.008, 0.017, 0.025, 0.008, 0.008, 0.008, 0.050, 0.008, 0.042, 0.025])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.154, 183.117),\n     \"Apogee_km\": gaussian(1430.643, 84.642),\n     \"Perigee_km\": gaussian(1402.879, 104.867),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.213, 1.579),\n     \"Inclination_radians\": gaussian(1.022, 0.241),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2094.440, 4064.234),\n     \"Apogee_km\": gaussian(545.855, 47.003),\n     \"Perigee_km\": gaussian(531.745, 42.800),\n     \"Type_of_Orbit\": categorical([0.200, 0.100, 0.100, 0.300, 0.100, 0.100, 0.100]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.089, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.036, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(95.488, 1.327),\n     \"Inclination_radians\": gaussian(0.643, 0.387),\n     \"Users\": categorical([0.036, 0.107, 0.036, 0.071, 0.036, 0.036, 0.036, 0.179, 0.071, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036]),\n     \"Class_of_Orbit\": categorical([0.786, 0.071, 0.071, 0.071]),\n     \"Launch_Site\": categorical([0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.114, 0.029, 0.057, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.171, 0.029, 0.029, 0.057, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.856, 7.733),\n     \"Apogee_km\": gaussian(710.813, 3.192),\n     \"Perigee_km\": gaussian(670.262, 2.815),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.081, 2.379),\n     \"Inclination_radians\": gaussian(1.708, 0.162),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.942, 0.042, 0.015, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.635, 0.356)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.003, 0.119)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.116, 0.175, 0.428, 0.093, 0.067, 0.007, 0.085, 0.027, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.849, 50.364),\n     \"Apogee_km\": gaussian(777.167, 8.153),\n     \"Perigee_km\": gaussian(773.745, 11.746),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.369, 0.148),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(731.426, 990.832),\n     \"Apogee_km\": gaussian(690.340, 103.148),\n     \"Perigee_km\": gaussian(659.852, 103.137),\n     \"Type_of_Orbit\": categorical([0.920, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.046, 0.007, 0.026, 0.007, 0.046, 0.020, 0.007, 0.007, 0.007, 0.013, 0.007, 0.040, 0.007, 0.172, 0.013, 0.007, 0.126, 0.007, 0.007, 0.007, 0.066, 0.007, 0.007, 0.007, 0.086, 0.013, 0.020, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.073, 0.007, 0.013, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.157, 2.060),\n     \"Inclination_radians\": gaussian(1.712, 0.013),\n     \"Users\": categorical([0.008, 0.033, 0.098, 0.016, 0.008, 0.008, 0.024, 0.390, 0.106, 0.008, 0.016, 0.016, 0.008, 0.195, 0.008, 0.008, 0.016, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.069, 0.046, 0.008, 0.185, 0.100, 0.008, 0.031, 0.008, 0.100, 0.008, 0.008, 0.008, 0.085, 0.146, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.038, 0.008, 0.062, 0.015])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3620.323, 1448.732),\n     \"Apogee_km\": gaussian(35742.723, 1562.174),\n     \"Perigee_km\": gaussian(35705.061, 1640.578),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1433.318, 59.712),\n     \"Inclination_radians\": gaussian(0.017, 0.090),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(505.236, 186.330),\n     \"Apogee_km\": gaussian(1422.787, 82.562),\n     \"Perigee_km\": gaussian(1405.477, 98.559),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.267, 1.593),\n     \"Inclination_radians\": gaussian(1.016, 0.241),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1549.851, 664.998),\n     \"Apogee_km\": gaussian(19695.988, 2448.347),\n     \"Perigee_km\": gaussian(19455.435, 2553.054),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(701.172, 90.355),\n     \"Inclination_radians\": gaussian(1.103, 0.102),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.816, 0.882),\n     \"Apogee_km\": gaussian(694.150, 9.430),\n     \"Perigee_km\": gaussian(675.544, 2.070),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.687, 0.791),\n     \"Inclination_radians\": gaussian(1.712, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(213.485, 359.644),\n     \"Apogee_km\": gaussian(797.236, 273.334),\n     \"Perigee_km\": gaussian(594.813, 205.608),\n     \"Type_of_Orbit\": categorical([0.517, 0.034, 0.138, 0.207, 0.034, 0.034, 0.034]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.041, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.052, 0.010, 0.258, 0.021, 0.010, 0.062, 0.010, 0.031, 0.010, 0.041, 0.010, 0.021, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.678, 4.138),\n     \"Inclination_radians\": gaussian(1.280, 0.572),\n     \"Users\": categorical([0.014, 0.116, 0.087, 0.029, 0.014, 0.058, 0.014, 0.145, 0.174, 0.014, 0.014, 0.029, 0.029, 0.203, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.891, 0.018, 0.073, 0.018]),\n     \"Launch_Site\": categorical([0.145, 0.013, 0.026, 0.316, 0.026, 0.026, 0.026, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013, 0.026, 0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.053, 0.053, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3055.012, 1594.193),\n     \"Apogee_km\": gaussian(85100.420, 108619.558),\n     \"Perigee_km\": gaussian(21621.733, 17451.233),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1347.650, 1309.040),\n     \"Inclination_radians\": gaussian(2.270, 6.206),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6293.677, 7475.489),\n     \"Apogee_km\": gaussian(587.582, 129.413),\n     \"Perigee_km\": gaussian(570.360, 122.802),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.250, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(96.619, 3.163),\n     \"Inclination_radians\": gaussian(0.812, 0.998),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.111, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.947, 0.038, 0.013, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.663, 0.317)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.018, 0.139)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.097, 0.428, 0.080, 0.067, 0.007, 0.090, 0.148, 0.047, 0.027, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(515.999, 174.566),\n     \"Apogee_km\": gaussian(1403.555, 131.569),\n     \"Perigee_km\": gaussian(1379.997, 139.135),\n     \"Type_of_Orbit\": categorical([0.016, 0.016, 0.016, 0.902, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.548, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(113.694, 2.827),\n     \"Inclination_radians\": gaussian(1.016, 0.228),\n     \"Users\": categorical([0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.632, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.118, 0.013]),\n     \"Class_of_Orbit\": categorical([0.935, 0.016, 0.032, 0.016]),\n     \"Launch_Site\": categorical([0.494, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.096, 0.120, 0.012, 0.012, 0.024])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3658.882, 1448.267),\n     \"Apogee_km\": gaussian(35737.779, 1537.852),\n     \"Perigee_km\": gaussian(35699.030, 1561.937),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1431.841, 58.886),\n     \"Inclination_radians\": gaussian(0.018, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(17.820, 28.020),\n     \"Apogee_km\": gaussian(813.730, 208.939),\n     \"Perigee_km\": gaussian(606.465, 177.336),\n     \"Type_of_Orbit\": categorical([0.833, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.021, 0.011, 0.053, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.085, 0.011, 0.298, 0.011, 0.011, 0.043, 0.011, 0.011, 0.011, 0.043, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(98.904, 2.871),\n     \"Inclination_radians\": gaussian(1.580, 0.425),\n     \"Users\": categorical([0.015, 0.076, 0.076, 0.015, 0.015, 0.061, 0.015, 0.061, 0.258, 0.015, 0.015, 0.015, 0.015, 0.288, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.923, 0.019, 0.038, 0.019]),\n     \"Launch_Site\": categorical([0.137, 0.014, 0.014, 0.274, 0.014, 0.027, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.151, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.068, 0.014, 0.055, 0.014])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1510.404, 637.265),\n     \"Apogee_km\": gaussian(19764.807, 2519.169),\n     \"Perigee_km\": gaussian(19363.436, 2627.539),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(696.168, 88.015),\n     \"Inclination_radians\": gaussian(1.094, 0.105),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.959, 0.579),\n     \"Apogee_km\": gaussian(694.493, 8.630),\n     \"Perigee_km\": gaussian(675.695, 1.808),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.502, 0.500),\n     \"Inclination_radians\": gaussian(1.716, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(825.379, 1191.636),\n     \"Apogee_km\": gaussian(662.843, 36.117),\n     \"Perigee_km\": gaussian(642.872, 40.437),\n     \"Type_of_Orbit\": categorical([0.860, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.030, 0.030, 0.010, 0.010, 0.010, 0.020, 0.010, 0.020, 0.010, 0.150, 0.010, 0.010, 0.120, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.110, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.080, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.811, 0.783),\n     \"Inclination_radians\": gaussian(1.709, 0.015),\n     \"Users\": categorical([0.014, 0.028, 0.069, 0.028, 0.014, 0.014, 0.014, 0.375, 0.056, 0.014, 0.028, 0.014, 0.014, 0.208, 0.014, 0.014, 0.028, 0.056]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.038, 0.051, 0.013, 0.203, 0.051, 0.013, 0.051, 0.013, 0.152, 0.013, 0.013, 0.013, 0.063, 0.114, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.051, 0.025])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(733.109, 323.299),\n     \"Apogee_km\": gaussian(784.800, 27.381),\n     \"Perigee_km\": gaussian(777.741, 24.885),\n     \"Type_of_Orbit\": categorical([0.170, 0.011, 0.766, 0.021, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.007, 0.052, 0.007, 0.541, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.030, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.037, 0.007, 0.015, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(100.477, 0.575),\n     \"Inclination_radians\": gaussian(1.533, 0.095),\n     \"Users\": categorical([0.009, 0.028, 0.075, 0.009, 0.009, 0.009, 0.009, 0.093, 0.009, 0.009, 0.009, 0.009, 0.673, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.968, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.140, 0.026, 0.009, 0.500, 0.123, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1231.955, 2415.531),\n     \"Apogee_km\": gaussian(518.042, 47.060),\n     \"Perigee_km\": gaussian(502.082, 41.476),\n     \"Type_of_Orbit\": categorical([0.522, 0.043, 0.130, 0.174, 0.043, 0.043, 0.043]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.108, 0.027, 0.014, 0.081, 0.014, 0.041, 0.014, 0.095, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.774, 0.937),\n     \"Inclination_radians\": gaussian(1.252, 0.553),\n     \"Users\": categorical([0.022, 0.087, 0.022, 0.043, 0.022, 0.022, 0.065, 0.370, 0.065, 0.022, 0.022, 0.022, 0.022, 0.109, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.906, 0.031, 0.031, 0.031]),\n     \"Launch_Site\": categorical([0.075, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.132, 0.038, 0.038, 0.019, 0.019, 0.057, 0.019, 0.019, 0.113, 0.057, 0.019, 0.057, 0.019])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3019.735, 1640.334),\n     \"Apogee_km\": gaussian(86960.920, 116667.846),\n     \"Perigee_km\": gaussian(21409.838, 17741.672),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1312.202, 1244.805),\n     \"Inclination_radians\": gaussian(2.327, 6.235),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(805.034, 888.600),\n     \"Apogee_km\": gaussian(1024.846, 336.491),\n     \"Perigee_km\": gaussian(851.528, 400.398),\n     \"Type_of_Orbit\": categorical([0.400, 0.100, 0.100, 0.100, 0.100, 0.100, 0.100]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.038, 0.038, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(103.739, 6.140),\n     \"Inclination_radians\": gaussian(1.495, 0.608),\n     \"Users\": categorical([0.040, 0.040, 0.080, 0.040, 0.040, 0.040, 0.040, 0.160, 0.040, 0.040, 0.040, 0.120, 0.040, 0.080, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.636, 0.091, 0.182, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.063, 0.125, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.942, 0.043, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.604, 0.383)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.235, 0.428, 0.093, 0.067, 0.007, 0.100, 0.045, 0.027]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(603.991, 160.127),\n     \"Apogee_km\": gaussian(1077.693, 328.014),\n     \"Perigee_km\": gaussian(1014.322, 342.710),\n     \"Type_of_Orbit\": categorical([0.022, 0.007, 0.533, 0.415, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.684, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.027, 0.011, 0.005, 0.005, 0.005, 0.005, 0.005, 0.021, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(106.292, 6.860),\n     \"Inclination_radians\": gaussian(1.311, 0.336),\n     \"Users\": categorical([0.013, 0.006, 0.031, 0.006, 0.006, 0.013, 0.006, 0.038, 0.302, 0.006, 0.006, 0.013, 0.453, 0.025, 0.006, 0.006, 0.057, 0.006]),\n     \"Class_of_Orbit\": categorical([0.959, 0.007, 0.028, 0.007]),\n     \"Launch_Site\": categorical([0.343, 0.006, 0.012, 0.337, 0.060, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.048, 0.072, 0.006, 0.006, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3670.204, 1522.307),\n     \"Apogee_km\": gaussian(35682.291, 1560.614),\n     \"Perigee_km\": gaussian(35644.180, 1588.084),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1432.987, 58.324),\n     \"Inclination_radians\": gaussian(0.021, 0.091),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13.914, 23.077),\n     \"Apogee_km\": gaussian(725.254, 103.112),\n     \"Perigee_km\": gaussian(596.199, 96.100),\n     \"Type_of_Orbit\": categorical([0.878, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.078, 0.010, 0.343, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.033, 1.453),\n     \"Inclination_radians\": gaussian(1.607, 0.349),\n     \"Users\": categorical([0.014, 0.095, 0.027, 0.014, 0.014, 0.041, 0.014, 0.068, 0.243, 0.014, 0.027, 0.014, 0.014, 0.351, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.111, 0.025, 0.012, 0.210, 0.012, 0.025, 0.025, 0.012, 0.074, 0.012, 0.012, 0.012, 0.025, 0.222, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1536.119, 635.017),\n     \"Apogee_km\": gaussian(19680.028, 2532.183),\n     \"Perigee_km\": gaussian(19653.813, 2646.778),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(696.570, 93.567),\n     \"Inclination_radians\": gaussian(1.101, 0.106),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.853, 0.843),\n     \"Apogee_km\": gaussian(694.048, 8.333),\n     \"Perigee_km\": gaussian(675.669, 2.323),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.460, 0.498),\n     \"Inclination_radians\": gaussian(1.716, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1199.861, 1068.026),\n     \"Apogee_km\": gaussian(726.789, 93.007),\n     \"Perigee_km\": gaussian(707.100, 100.998),\n     \"Type_of_Orbit\": categorical([0.869, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.066, 0.009, 0.019, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.019, 0.019, 0.019, 0.009, 0.047, 0.009, 0.009, 0.132, 0.009, 0.009, 0.009, 0.047, 0.009, 0.009, 0.009, 0.123, 0.019, 0.028, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.104, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.122, 1.954),\n     \"Inclination_radians\": gaussian(1.715, 0.015),\n     \"Users\": categorical([0.013, 0.026, 0.154, 0.026, 0.013, 0.013, 0.013, 0.462, 0.038, 0.013, 0.013, 0.026, 0.013, 0.077, 0.013, 0.013, 0.026, 0.051]),\n     \"Class_of_Orbit\": categorical([0.953, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.047, 0.059, 0.012, 0.282, 0.118, 0.012, 0.035, 0.012, 0.094, 0.012, 0.012, 0.012, 0.059, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.047, 0.024])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1205.516, 2368.451),\n     \"Apogee_km\": gaussian(518.223, 47.460),\n     \"Perigee_km\": gaussian(503.355, 41.072),\n     \"Type_of_Orbit\": categorical([0.500, 0.045, 0.136, 0.182, 0.045, 0.045, 0.045]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.110, 0.027, 0.014, 0.082, 0.014, 0.041, 0.014, 0.082, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.055, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.858, 0.881),\n     \"Inclination_radians\": gaussian(1.236, 0.544),\n     \"Users\": categorical([0.022, 0.089, 0.022, 0.044, 0.022, 0.022, 0.067, 0.356, 0.067, 0.022, 0.022, 0.022, 0.022, 0.111, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.903, 0.032, 0.032, 0.032]),\n     \"Launch_Site\": categorical([0.077, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.115, 0.038, 0.038, 0.019, 0.019, 0.058, 0.019, 0.019, 0.115, 0.058, 0.019, 0.058, 0.019])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3027.391, 1642.479),\n     \"Apogee_km\": gaussian(85691.174, 113072.765),\n     \"Perigee_km\": gaussian(20935.176, 17169.519),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1327.683, 1291.524),\n     \"Inclination_radians\": gaussian(2.416, 6.418),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.945, 0.042, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.673, 0.299)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.027, 0.428, 0.186, 0.093, 0.067, 0.007, 0.131, 0.062]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3000.412, 1657.483),\n     \"Apogee_km\": gaussian(80033.329, 113458.680),\n     \"Perigee_km\": gaussian(21014.176, 17025.264),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1364.502, 1301.015),\n     \"Inclination_radians\": gaussian(2.306, 6.311),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3593.321, 1479.626),\n     \"Apogee_km\": gaussian(35726.043, 1562.616),\n     \"Perigee_km\": gaussian(35722.559, 1645.211),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1429.693, 60.146),\n     \"Inclination_radians\": gaussian(0.016, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(596.226, 309.606),\n     \"Apogee_km\": gaussian(830.014, 141.722),\n     \"Perigee_km\": gaussian(746.902, 146.016),\n     \"Type_of_Orbit\": categorical([0.192, 0.010, 0.727, 0.040, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.044, 0.006, 0.468, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.032, 0.006, 0.082, 0.013, 0.006, 0.044, 0.006, 0.006, 0.006, 0.025, 0.006, 0.006, 0.006, 0.019, 0.006, 0.019, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(100.716, 1.789),\n     \"Inclination_radians\": gaussian(1.542, 0.239),\n     \"Users\": categorical([0.008, 0.046, 0.092, 0.008, 0.008, 0.031, 0.008, 0.062, 0.062, 0.008, 0.008, 0.023, 0.554, 0.054, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.948, 0.009, 0.034, 0.009]),\n     \"Launch_Site\": categorical([0.146, 0.007, 0.007, 0.562, 0.088, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.036, 0.007, 0.007, 0.015])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(510.804, 177.069),\n     \"Apogee_km\": gaussian(1431.654, 83.520),\n     \"Perigee_km\": gaussian(1403.719, 107.161),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.261, 1.638),\n     \"Inclination_radians\": gaussian(1.033, 0.233),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1497.572, 640.589),\n     \"Apogee_km\": gaussian(19669.038, 2655.016),\n     \"Perigee_km\": gaussian(19566.450, 2542.802),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(698.206, 89.542),\n     \"Inclination_radians\": gaussian(1.095, 0.101),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.987, 0.529),\n     \"Apogee_km\": gaussian(694.594, 9.041),\n     \"Perigee_km\": gaussian(675.563, 2.170),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.583, 0.688),\n     \"Inclination_radians\": gaussian(1.711, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(634.836, 1104.711),\n     \"Apogee_km\": gaussian(694.586, 70.684),\n     \"Perigee_km\": gaussian(653.798, 65.956),\n     \"Type_of_Orbit\": categorical([0.900, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.032, 0.008, 0.056, 0.024, 0.008, 0.008, 0.008, 0.016, 0.008, 0.048, 0.008, 0.176, 0.008, 0.008, 0.104, 0.008, 0.008, 0.008, 0.032, 0.008, 0.008, 0.008, 0.104, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.088, 0.008, 0.016, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.152, 1.183),\n     \"Inclination_radians\": gaussian(1.711, 0.013),\n     \"Users\": categorical([0.010, 0.031, 0.052, 0.021, 0.010, 0.010, 0.010, 0.361, 0.134, 0.010, 0.021, 0.010, 0.010, 0.227, 0.010, 0.010, 0.021, 0.041]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.067, 0.058, 0.010, 0.154, 0.077, 0.010, 0.038, 0.010, 0.125, 0.010, 0.010, 0.010, 0.048, 0.183, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.067, 0.019])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(992.261, 2061.858),\n     \"Apogee_km\": gaussian(544.366, 84.501),\n     \"Perigee_km\": gaussian(507.265, 56.392),\n     \"Type_of_Orbit\": categorical([0.607, 0.036, 0.107, 0.143, 0.036, 0.036, 0.036]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.205, 0.024, 0.012, 0.072, 0.012, 0.036, 0.012, 0.084, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.048, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(95.162, 1.234),\n     \"Inclination_radians\": gaussian(1.151, 0.564),\n     \"Users\": categorical([0.018, 0.073, 0.036, 0.036, 0.018, 0.018, 0.055, 0.327, 0.091, 0.018, 0.018, 0.018, 0.018, 0.182, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.927, 0.024, 0.024, 0.024]),\n     \"Launch_Site\": categorical([0.129, 0.016, 0.032, 0.032, 0.065, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.113, 0.032, 0.032, 0.016, 0.032, 0.048, 0.016, 0.016, 0.097, 0.065, 0.016, 0.048, 0.016])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.942, 0.045, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.031)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.620, 0.358)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.093, 0.092, 0.428, 0.067, 0.007, 0.121, 0.025, 0.116, 0.027, 0.025]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(504.591, 175.352),\n     \"Apogee_km\": gaussian(1426.281, 83.301),\n     \"Perigee_km\": gaussian(1399.839, 107.465),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.539, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.147, 1.612),\n     \"Inclination_radians\": gaussian(1.040, 0.243),\n     \"Users\": categorical([0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.622, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.122, 0.014]),\n     \"Class_of_Orbit\": categorical([0.950, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.481, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.099, 0.123, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.656, 22.749),\n     \"Apogee_km\": gaussian(743.023, 98.091),\n     \"Perigee_km\": gaussian(603.776, 100.007),\n     \"Type_of_Orbit\": categorical([0.875, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.079, 0.010, 0.347, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.185, 1.390),\n     \"Inclination_radians\": gaussian(1.584, 0.365),\n     \"Users\": categorical([0.014, 0.082, 0.027, 0.014, 0.014, 0.041, 0.014, 0.068, 0.233, 0.014, 0.027, 0.014, 0.014, 0.370, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.113, 0.025, 0.013, 0.213, 0.013, 0.025, 0.025, 0.013, 0.075, 0.013, 0.013, 0.013, 0.025, 0.225, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.050, 0.013, 0.038, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3667.487, 1459.995),\n     \"Apogee_km\": gaussian(35813.296, 1596.701),\n     \"Perigee_km\": gaussian(35598.444, 1552.266),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1432.220, 58.874),\n     \"Inclination_radians\": gaussian(0.016, 0.089),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1539.675, 643.186),\n     \"Apogee_km\": gaussian(19565.391, 2595.971),\n     \"Perigee_km\": gaussian(19719.934, 2701.401),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(698.184, 86.979),\n     \"Inclination_radians\": gaussian(1.103, 0.103),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.007, 0.421),\n     \"Apogee_km\": gaussian(694.195, 8.427),\n     \"Perigee_km\": gaussian(675.887, 1.365),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.609, 0.789),\n     \"Inclination_radians\": gaussian(1.716, 0.065),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1041.219, 1055.186),\n     \"Apogee_km\": gaussian(680.699, 119.233),\n     \"Perigee_km\": gaussian(677.947, 117.587),\n     \"Type_of_Orbit\": categorical([0.886, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.059, 0.008, 0.025, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.008, 0.050, 0.017, 0.008, 0.160, 0.008, 0.008, 0.008, 0.084, 0.008, 0.008, 0.008, 0.109, 0.017, 0.025, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.092, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.166, 2.534),\n     \"Inclination_radians\": gaussian(1.712, 0.015),\n     \"Users\": categorical([0.011, 0.044, 0.132, 0.022, 0.011, 0.011, 0.033, 0.505, 0.033, 0.011, 0.011, 0.022, 0.011, 0.055, 0.011, 0.011, 0.022, 0.044]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.061, 0.051, 0.010, 0.245, 0.133, 0.010, 0.031, 0.010, 0.082, 0.010, 0.010, 0.010, 0.102, 0.020, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.031, 0.010, 0.061, 0.020])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1469.480, 3081.626),\n     \"Apogee_km\": gaussian(523.511, 69.746),\n     \"Perigee_km\": gaussian(497.331, 61.956),\n     \"Type_of_Orbit\": categorical([0.214, 0.071, 0.214, 0.286, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.115, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.066, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(94.822, 1.524),\n     \"Inclination_radians\": gaussian(0.849, 0.432),\n     \"Users\": categorical([0.030, 0.091, 0.030, 0.061, 0.030, 0.030, 0.030, 0.182, 0.121, 0.030, 0.030, 0.030, 0.030, 0.152, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.842, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.050, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.100, 0.025, 0.050, 0.050, 0.025, 0.050, 0.025, 0.025, 0.025, 0.150, 0.075, 0.025, 0.050, 0.025])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.381, 50.702),\n     \"Apogee_km\": gaussian(777.061, 8.504),\n     \"Perigee_km\": gaussian(773.012, 11.078),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.371, 0.159),\n     \"Inclination_radians\": gaussian(1.510, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2915.431, 1661.532),\n     \"Apogee_km\": gaussian(83346.481, 111345.501),\n     \"Perigee_km\": gaussian(20963.098, 17149.613),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1433.600, 1288.066),\n     \"Inclination_radians\": gaussian(2.189, 6.229),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(413.608, 278.243),\n     \"Apogee_km\": gaussian(1061.472, 277.359),\n     \"Perigee_km\": gaussian(705.234, 313.440),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.167, 0.333, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.066, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.082, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.066, 0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(102.927, 3.413),\n     \"Inclination_radians\": gaussian(1.404, 0.591),\n     \"Users\": categorical([0.030, 0.030, 0.152, 0.030, 0.030, 0.061, 0.030, 0.152, 0.091, 0.030, 0.030, 0.061, 0.061, 0.091, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.684, 0.053, 0.211, 0.053]),\n     \"Launch_Site\": categorical([0.125, 0.025, 0.050, 0.200, 0.050, 0.025, 0.050, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.050])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.947, 0.040, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.005)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.032)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.689, 0.296)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.428, 0.092, 0.233, 0.067, 0.007, 0.101, 0.047, 0.027]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3722.146, 1419.130),\n     \"Apogee_km\": gaussian(35746.779, 1512.750),\n     \"Perigee_km\": gaussian(35637.069, 1543.359),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1433.310, 59.374),\n     \"Inclination_radians\": gaussian(0.020, 0.088),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.156, 24.481),\n     \"Apogee_km\": gaussian(724.777, 100.312),\n     \"Perigee_km\": gaussian(600.514, 88.713),\n     \"Type_of_Orbit\": categorical([0.875, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.030, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.347, 0.010, 0.010, 0.059, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.021, 1.256),\n     \"Inclination_radians\": gaussian(1.608, 0.372),\n     \"Users\": categorical([0.014, 0.096, 0.027, 0.014, 0.014, 0.041, 0.014, 0.082, 0.219, 0.014, 0.027, 0.014, 0.014, 0.356, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.100, 0.025, 0.013, 0.213, 0.013, 0.025, 0.025, 0.013, 0.100, 0.013, 0.013, 0.013, 0.025, 0.225, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.038, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(599.358, 165.757),\n     \"Apogee_km\": gaussian(1059.524, 323.943),\n     \"Perigee_km\": gaussian(1009.100, 327.016),\n     \"Type_of_Orbit\": categorical([0.015, 0.007, 0.537, 0.418, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.688, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.027, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.022, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(106.527, 6.824),\n     \"Inclination_radians\": gaussian(1.321, 0.324),\n     \"Users\": categorical([0.013, 0.006, 0.032, 0.006, 0.006, 0.013, 0.006, 0.038, 0.304, 0.006, 0.006, 0.006, 0.456, 0.025, 0.006, 0.006, 0.057, 0.006]),\n     \"Class_of_Orbit\": categorical([0.958, 0.007, 0.028, 0.007]),\n     \"Launch_Site\": categorical([0.339, 0.006, 0.012, 0.339, 0.061, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.048, 0.073, 0.006, 0.006, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1500.420, 658.769),\n     \"Apogee_km\": gaussian(19650.960, 2507.195),\n     \"Perigee_km\": gaussian(19489.414, 2584.081),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(694.634, 93.422),\n     \"Inclination_radians\": gaussian(1.098, 0.108),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.930, 0.747),\n     \"Apogee_km\": gaussian(694.128, 8.024),\n     \"Perigee_km\": gaussian(675.883, 1.538),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.459, 0.624),\n     \"Inclination_radians\": gaussian(1.715, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1131.291, 1087.670),\n     \"Apogee_km\": gaussian(729.731, 100.609),\n     \"Perigee_km\": gaussian(714.918, 101.949),\n     \"Type_of_Orbit\": categorical([0.871, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.065, 0.009, 0.019, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.019, 0.028, 0.009, 0.037, 0.019, 0.009, 0.131, 0.009, 0.009, 0.009, 0.047, 0.009, 0.009, 0.009, 0.121, 0.019, 0.028, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.103, 0.009, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.231, 2.044),\n     \"Inclination_radians\": gaussian(1.715, 0.015),\n     \"Users\": categorical([0.013, 0.025, 0.152, 0.025, 0.013, 0.013, 0.013, 0.443, 0.051, 0.013, 0.013, 0.038, 0.013, 0.076, 0.013, 0.013, 0.025, 0.051]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.070, 0.058, 0.012, 0.279, 0.116, 0.012, 0.035, 0.012, 0.070, 0.012, 0.012, 0.012, 0.058, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.058, 0.023])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1104.721, 2391.026),\n     \"Apogee_km\": gaussian(512.657, 51.586),\n     \"Perigee_km\": gaussian(498.284, 45.528),\n     \"Type_of_Orbit\": categorical([0.522, 0.043, 0.130, 0.174, 0.043, 0.043, 0.043]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.122, 0.027, 0.014, 0.081, 0.014, 0.041, 0.014, 0.081, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.690, 0.999),\n     \"Inclination_radians\": gaussian(1.231, 0.562),\n     \"Users\": categorical([0.022, 0.087, 0.022, 0.043, 0.022, 0.022, 0.065, 0.348, 0.087, 0.022, 0.022, 0.022, 0.022, 0.109, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.906, 0.031, 0.031, 0.031]),\n     \"Launch_Site\": categorical([0.075, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.113, 0.038, 0.038, 0.019, 0.038, 0.057, 0.019, 0.019, 0.113, 0.057, 0.019, 0.057, 0.019])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3002.390, 1616.263),\n     \"Apogee_km\": gaussian(87190.947, 107571.487),\n     \"Perigee_km\": gaussian(21678.268, 17546.934),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1247.622, 1334.697),\n     \"Inclination_radians\": gaussian(2.298, 5.917),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.943, 0.038, 0.013, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.025, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.604, 0.381)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.086, 0.188)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.156, 0.087, 0.428, 0.116, 0.067, 0.007, 0.027, 0.100, 0.002, 0.012]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(952.937, 1058.075),\n     \"Apogee_km\": gaussian(672.260, 130.664),\n     \"Perigee_km\": gaussian(656.039, 132.546),\n     \"Type_of_Orbit\": categorical([0.825, 0.013, 0.075, 0.050, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.050, 0.007, 0.021, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.093, 0.021, 0.007, 0.171, 0.007, 0.021, 0.007, 0.071, 0.007, 0.021, 0.007, 0.107, 0.014, 0.021, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.100, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.008, 2.649),\n     \"Inclination_radians\": gaussian(1.520, 0.418),\n     \"Users\": categorical([0.009, 0.089, 0.116, 0.027, 0.009, 0.009, 0.027, 0.455, 0.045, 0.009, 0.009, 0.027, 0.018, 0.080, 0.009, 0.009, 0.018, 0.036]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.076, 0.042, 0.017, 0.252, 0.118, 0.008, 0.025, 0.008, 0.050, 0.008, 0.008, 0.034, 0.084, 0.025, 0.017, 0.008, 0.008, 0.025, 0.008, 0.008, 0.042, 0.050, 0.008, 0.050, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(10.109, 16.388),\n     \"Apogee_km\": gaussian(712.251, 106.779),\n     \"Perigee_km\": gaussian(582.862, 86.873),\n     \"Type_of_Orbit\": categorical([0.870, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.031, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.082, 0.010, 0.357, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.701, 1.300),\n     \"Inclination_radians\": gaussian(1.666, 0.284),\n     \"Users\": categorical([0.014, 0.029, 0.029, 0.014, 0.014, 0.043, 0.014, 0.071, 0.257, 0.014, 0.029, 0.014, 0.014, 0.386, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.117, 0.026, 0.013, 0.143, 0.013, 0.026, 0.026, 0.013, 0.104, 0.013, 0.013, 0.013, 0.026, 0.234, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.052, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3711.163, 1457.796),\n     \"Apogee_km\": gaussian(35741.095, 1570.940),\n     \"Perigee_km\": gaussian(35673.172, 1559.023),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.013, 0.003, 0.756, 0.007, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.007, 0.007, 0.003, 0.007, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.010, 0.003, 0.003, 0.007, 0.003, 0.003, 0.003, 0.013, 0.003, 0.013, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.003]),\n     \"Period_minutes\": gaussian(1430.252, 59.729),\n     \"Inclination_radians\": gaussian(0.014, 0.096),\n     \"Users\": categorical([0.004, 0.004, 0.105, 0.004, 0.011, 0.004, 0.022, 0.105, 0.695, 0.004, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.015, 0.004]),\n     \"Class_of_Orbit\": categorical([0.004, 0.989, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.248, 0.004, 0.004, 0.004, 0.004, 0.004, 0.340, 0.018, 0.018, 0.004, 0.004, 0.004, 0.007, 0.004, 0.004, 0.004, 0.004, 0.004, 0.067, 0.004, 0.184, 0.004, 0.053, 0.007, 0.004])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(682.865, 49.492),\n     \"Apogee_km\": gaussian(776.797, 8.343),\n     \"Perigee_km\": gaussian(773.266, 10.934),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.367, 0.183),\n     \"Inclination_radians\": gaussian(1.509, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1519.062, 667.481),\n     \"Apogee_km\": gaussian(19706.645, 2596.274),\n     \"Perigee_km\": gaussian(19667.683, 2582.785),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.477, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(698.320, 90.289),\n     \"Inclination_radians\": gaussian(1.101, 0.107),\n     \"Users\": categorical([0.017, 0.017, 0.103, 0.017, 0.017, 0.017, 0.552, 0.017, 0.069, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.023, 0.023, 0.932]),\n     \"Launch_Site\": categorical([0.431, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.910, 0.602),\n     \"Apogee_km\": gaussian(694.286, 8.208),\n     \"Perigee_km\": gaussian(675.795, 1.599),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.695, 1.074),\n     \"Inclination_radians\": gaussian(1.717, 0.077),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3038.799, 1666.892),\n     \"Apogee_km\": gaussian(88979.129, 107105.794),\n     \"Perigee_km\": gaussian(20725.583, 17250.553),\n     \"Type_of_Orbit\": categorical([0.077, 0.385, 0.077, 0.077, 0.231, 0.077, 0.077]),\n     \"Purpose\": categorical([0.097, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(1380.940, 1298.794),\n     \"Inclination_radians\": gaussian(2.060, 6.060),\n     \"Users\": categorical([0.029, 0.029, 0.294, 0.029, 0.029, 0.029, 0.029, 0.147, 0.088, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.500, 0.400, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.024, 0.073, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.146, 0.049, 0.122, 0.024, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(526.106, 175.441),\n     \"Apogee_km\": gaussian(1400.794, 129.720),\n     \"Perigee_km\": gaussian(1382.885, 147.637),\n     \"Type_of_Orbit\": categorical([0.032, 0.016, 0.016, 0.887, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.538, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(113.597, 2.865),\n     \"Inclination_radians\": gaussian(1.051, 0.293),\n     \"Users\": categorical([0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.038, 0.615, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.115, 0.013]),\n     \"Class_of_Orbit\": categorical([0.938, 0.016, 0.031, 0.016]),\n     \"Launch_Site\": categorical([0.482, 0.012, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.094, 0.118, 0.012, 0.012, 0.024])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(116.537, 6.447),\n     \"Apogee_km\": gaussian(710.578, 2.913),\n     \"Perigee_km\": gaussian(671.296, 5.022),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.134, 3.409),\n     \"Inclination_radians\": gaussian(1.710, 0.221),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2971.025, 8070.310),\n     \"Apogee_km\": gaussian(1196.268, 381.468),\n     \"Perigee_km\": gaussian(557.633, 376.747),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.250, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(102.707, 4.108),\n     \"Inclination_radians\": gaussian(1.437, 0.584),\n     \"Users\": categorical([0.040, 0.040, 0.120, 0.040, 0.040, 0.080, 0.040, 0.120, 0.040, 0.040, 0.040, 0.040, 0.040, 0.120, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.545, 0.091, 0.273, 0.091]),\n     \"Launch_Site\": categorical([0.031, 0.031, 0.031, 0.188, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.945, 0.040, 0.012, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.029)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.757, 0.238)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.116, 0.189)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.007, 0.001, 0.001, 0.010, 0.004, 0.003, 0.016, 0.004, 0.001, 0.001, 0.003, 0.001, 0.003, 0.007, 0.003, 0.001, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.018, 0.001, 0.003, 0.060, 0.009, 0.003, 0.001, 0.003, 0.001, 0.035, 0.001, 0.001, 0.001, 0.001, 0.003, 0.081, 0.012, 0.007, 0.003, 0.001, 0.001, 0.066, 0.003, 0.003, 0.003, 0.001, 0.003, 0.006, 0.004, 0.001, 0.026, 0.001, 0.006, 0.001, 0.012, 0.012, 0.004, 0.418, 0.001, 0.001, 0.003, 0.001, 0.007, 0.001, 0.032, 0.001, 0.001, 0.003, 0.001, 0.003, 0.010, 0.001, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.415, 0.081, 0.093, 0.006, 0.173, 0.083, 0.026, 0.021, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.238, 51.282),\n     \"Apogee_km\": gaussian(777.016, 8.273),\n     \"Perigee_km\": gaussian(773.880, 11.270),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.152),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3670.940, 1505.960),\n     \"Apogee_km\": gaussian(35758.507, 1417.563),\n     \"Perigee_km\": gaussian(35753.533, 1482.310),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1429.334, 57.728),\n     \"Inclination_radians\": gaussian(0.020, 0.080),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(498.918, 184.048),\n     \"Apogee_km\": gaussian(1423.527, 87.525),\n     \"Perigee_km\": gaussian(1404.660, 99.152),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.215, 1.594),\n     \"Inclination_radians\": gaussian(1.036, 0.248),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1687.719, 577.000),\n     \"Apogee_km\": gaussian(19797.291, 2120.623),\n     \"Perigee_km\": gaussian(19735.907, 2034.858),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(707.378, 69.538),\n     \"Inclination_radians\": gaussian(1.041, 0.109),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.972, 0.540),\n     \"Apogee_km\": gaussian(694.136, 9.308),\n     \"Perigee_km\": gaussian(675.772, 1.545),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.638, 0.796),\n     \"Inclination_radians\": gaussian(1.714, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(750.456, 1114.353),\n     \"Apogee_km\": gaussian(689.441, 105.106),\n     \"Perigee_km\": gaussian(660.064, 105.636),\n     \"Type_of_Orbit\": categorical([0.887, 0.009, 0.070, 0.009, 0.009, 0.009, 0.009]),\n     \"Purpose\": categorical([0.006, 0.054, 0.006, 0.030, 0.006, 0.042, 0.018, 0.006, 0.012, 0.006, 0.012, 0.012, 0.036, 0.006, 0.174, 0.006, 0.006, 0.114, 0.006, 0.006, 0.006, 0.060, 0.006, 0.012, 0.006, 0.090, 0.012, 0.024, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.078, 0.006, 0.012, 0.018, 0.006, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.402, 2.082),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.007, 0.036, 0.086, 0.014, 0.007, 0.007, 0.022, 0.403, 0.101, 0.007, 0.014, 0.022, 0.029, 0.187, 0.007, 0.007, 0.014, 0.029]),\n     \"Class_of_Orbit\": categorical([0.976, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.103, 0.041, 0.007, 0.185, 0.089, 0.007, 0.034, 0.007, 0.089, 0.007, 0.007, 0.007, 0.089, 0.130, 0.014, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.055, 0.007, 0.055, 0.014])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(213.730, 352.065),\n     \"Apogee_km\": gaussian(765.787, 265.542),\n     \"Perigee_km\": gaussian(567.395, 181.937),\n     \"Type_of_Orbit\": categorical([0.500, 0.031, 0.125, 0.250, 0.031, 0.031, 0.031]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.048, 0.010, 0.288, 0.029, 0.010, 0.067, 0.010, 0.029, 0.010, 0.010, 0.010, 0.019, 0.010, 0.038, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.058, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.196, 3.427),\n     \"Inclination_radians\": gaussian(1.198, 0.561),\n     \"Users\": categorical([0.013, 0.118, 0.039, 0.026, 0.013, 0.053, 0.013, 0.171, 0.171, 0.013, 0.013, 0.026, 0.026, 0.250, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.903, 0.016, 0.065, 0.016]),\n     \"Launch_Site\": categorical([0.157, 0.024, 0.024, 0.277, 0.024, 0.024, 0.036, 0.012, 0.036, 0.012, 0.012, 0.060, 0.012, 0.024, 0.024, 0.012, 0.024, 0.012, 0.012, 0.012, 0.048, 0.048, 0.012, 0.036, 0.024])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2553.863, 1394.028),\n     \"Apogee_km\": gaussian(65431.317, 77733.534),\n     \"Perigee_km\": gaussian(17023.491, 17087.030),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.094, 0.016, 0.016, 0.063, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.078, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1272.138, 1235.724),\n     \"Inclination_radians\": gaussian(0.827, 0.498),\n     \"Users\": categorical([0.028, 0.028, 0.361, 0.028, 0.028, 0.028, 0.028, 0.167, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.409, 0.500, 0.045]),\n     \"Launch_Site\": categorical([0.047, 0.023, 0.023, 0.070, 0.023, 0.023, 0.023, 0.023, 0.047, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.140, 0.047, 0.116, 0.093, 0.023, 0.023, 0.047])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12343.598, 6756.795),\n     \"Apogee_km\": gaussian(850.377, 223.427),\n     \"Perigee_km\": gaussian(643.725, 319.094),\n     \"Type_of_Orbit\": categorical([0.412, 0.059, 0.059, 0.294, 0.059, 0.059, 0.059]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.180, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.066, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(99.564, 4.564),\n     \"Inclination_radians\": gaussian(1.383, 0.573),\n     \"Users\": categorical([0.030, 0.030, 0.424, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.842, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.050, 0.025, 0.025, 0.275, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.100, 0.050, 0.025, 0.025, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3856.092, 3329.823),\n     \"Apogee_km\": gaussian(156847.405, 275623.736),\n     \"Perigee_km\": gaussian(28965.674, 25376.333),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1255.296, 995.359),\n     \"Inclination_radians\": gaussian(9.589, 19.866),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.111, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.047, 0.014, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.720, 0.247)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.538, 0.597)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.093, 0.100, 0.415, 0.081, 0.006, 0.116, 0.137, 0.027, 0.024, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1694.272, 577.399),\n     \"Apogee_km\": gaussian(19915.812, 2021.356),\n     \"Perigee_km\": gaussian(19781.967, 2121.673),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(709.038, 71.621),\n     \"Inclination_radians\": gaussian(1.045, 0.107),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.216, 48.361),\n     \"Apogee_km\": gaussian(777.778, 8.486),\n     \"Perigee_km\": gaussian(773.726, 10.633),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.350, 0.161),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3604.081, 1550.568),\n     \"Apogee_km\": gaussian(35761.802, 1444.997),\n     \"Perigee_km\": gaussian(35649.053, 1451.117),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1435.347, 57.547),\n     \"Inclination_radians\": gaussian(0.016, 0.081),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(493.643, 184.790),\n     \"Apogee_km\": gaussian(1426.131, 87.568),\n     \"Perigee_km\": gaussian(1403.222, 105.305),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.186, 1.548),\n     \"Inclination_radians\": gaussian(1.034, 0.244),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.955, 0.588),\n     \"Apogee_km\": gaussian(694.226, 8.622),\n     \"Perigee_km\": gaussian(675.827, 1.481),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.640, 0.834),\n     \"Inclination_radians\": gaussian(1.717, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(668.842, 1135.026),\n     \"Apogee_km\": gaussian(681.874, 60.350),\n     \"Perigee_km\": gaussian(640.364, 49.185),\n     \"Type_of_Orbit\": categorical([0.880, 0.012, 0.060, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.031, 0.008, 0.055, 0.024, 0.008, 0.008, 0.008, 0.016, 0.008, 0.047, 0.008, 0.181, 0.008, 0.008, 0.094, 0.008, 0.008, 0.008, 0.031, 0.008, 0.008, 0.008, 0.110, 0.016, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.079, 0.008, 0.016, 0.024, 0.008, 0.008, 0.016, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.904, 0.898),\n     \"Inclination_radians\": gaussian(1.709, 0.012),\n     \"Users\": categorical([0.010, 0.030, 0.051, 0.020, 0.010, 0.010, 0.010, 0.343, 0.121, 0.010, 0.020, 0.010, 0.040, 0.232, 0.010, 0.010, 0.020, 0.040]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.066, 0.047, 0.009, 0.170, 0.038, 0.009, 0.047, 0.009, 0.113, 0.009, 0.009, 0.009, 0.066, 0.179, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.047, 0.009, 0.066, 0.019])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(498.902, 623.293),\n     \"Apogee_km\": gaussian(756.710, 238.213),\n     \"Perigee_km\": gaussian(616.268, 187.887),\n     \"Type_of_Orbit\": categorical([0.721, 0.016, 0.082, 0.131, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.007, 0.042, 0.007, 0.049, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.014, 0.035, 0.007, 0.254, 0.021, 0.007, 0.099, 0.007, 0.021, 0.007, 0.056, 0.007, 0.021, 0.007, 0.035, 0.007, 0.028, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.063, 0.014, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.347, 3.457),\n     \"Inclination_radians\": gaussian(1.402, 0.483),\n     \"Users\": categorical([0.009, 0.079, 0.088, 0.018, 0.009, 0.035, 0.026, 0.307, 0.132, 0.009, 0.009, 0.035, 0.018, 0.193, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.940, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.165, 0.025, 0.017, 0.256, 0.091, 0.017, 0.025, 0.008, 0.033, 0.008, 0.008, 0.041, 0.058, 0.017, 0.017, 0.008, 0.017, 0.025, 0.008, 0.008, 0.033, 0.058, 0.008, 0.033, 0.017])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2773.836, 1507.802),\n     \"Apogee_km\": gaussian(81422.513, 105079.465),\n     \"Perigee_km\": gaussian(17641.419, 17202.423),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1237.128, 1208.281),\n     \"Inclination_radians\": gaussian(0.789, 0.512),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.162, 0.054, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045, 0.023, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(11002.202, 6815.054),\n     \"Apogee_km\": gaussian(865.368, 202.856),\n     \"Perigee_km\": gaussian(664.035, 306.612),\n     \"Type_of_Orbit\": categorical([0.400, 0.050, 0.150, 0.250, 0.050, 0.050, 0.050]),\n     \"Purpose\": categorical([0.016, 0.063, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.159, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(100.132, 4.178),\n     \"Inclination_radians\": gaussian(1.477, 0.541),\n     \"Users\": categorical([0.029, 0.086, 0.400, 0.029, 0.029, 0.029, 0.029, 0.086, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.857, 0.048, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.071, 0.024, 0.024, 0.286, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.095, 0.048, 0.024, 0.024, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3009.840, 6184.330),\n     \"Apogee_km\": gaussian(22332.071, 41364.066),\n     \"Perigee_km\": gaussian(24190.584, 53157.472),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1016.205, 1584.648),\n     \"Inclination_radians\": gaussian(18.466, 32.902),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.932, 0.053, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.029)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.698, 0.234)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.417, 0.093, 0.081, 0.093, 0.006, 0.127, 0.027, 0.057]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(687.214, 49.677),\n     \"Apogee_km\": gaussian(777.081, 8.235),\n     \"Perigee_km\": gaussian(773.402, 11.357),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.360, 0.152),\n     \"Inclination_radians\": gaussian(1.510, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3602.587, 1508.731),\n     \"Apogee_km\": gaussian(35818.166, 1485.693),\n     \"Perigee_km\": gaussian(35695.208, 1503.155),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.749, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1429.796, 54.967),\n     \"Inclination_radians\": gaussian(0.016, 0.087),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.116, 0.652, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.334, 0.016, 0.016, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.202, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(16.282, 23.194),\n     \"Apogee_km\": gaussian(715.644, 115.109),\n     \"Perigee_km\": gaussian(594.782, 101.190),\n     \"Type_of_Orbit\": categorical([0.880, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.018, 0.009, 0.063, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.072, 0.009, 0.387, 0.009, 0.009, 0.054, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.765, 1.647),\n     \"Inclination_radians\": gaussian(1.529, 0.455),\n     \"Users\": categorical([0.012, 0.084, 0.024, 0.024, 0.012, 0.036, 0.012, 0.060, 0.205, 0.012, 0.024, 0.012, 0.012, 0.422, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.089, 0.022, 0.011, 0.211, 0.011, 0.022, 0.022, 0.011, 0.089, 0.011, 0.011, 0.056, 0.033, 0.200, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.022, 0.044, 0.011, 0.033, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(495.998, 193.065),\n     \"Apogee_km\": gaussian(1422.299, 87.032),\n     \"Perigee_km\": gaussian(1402.689, 103.467),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.252, 1.531),\n     \"Inclination_radians\": gaussian(1.021, 0.244),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1721.383, 581.855),\n     \"Apogee_km\": gaussian(19852.570, 2015.396),\n     \"Perigee_km\": gaussian(19823.014, 2022.051),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(705.062, 70.574),\n     \"Inclination_radians\": gaussian(1.043, 0.107),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.006, 0.517),\n     \"Apogee_km\": gaussian(694.402, 9.955),\n     \"Perigee_km\": gaussian(675.825, 1.505),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.697, 0.870),\n     \"Inclination_radians\": gaussian(1.715, 0.056),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1102.932, 1150.445),\n     \"Apogee_km\": gaussian(686.155, 124.772),\n     \"Perigee_km\": gaussian(672.049, 122.934),\n     \"Type_of_Orbit\": categorical([0.849, 0.012, 0.093, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.067, 0.007, 0.030, 0.007, 0.007, 0.022, 0.007, 0.015, 0.007, 0.015, 0.015, 0.015, 0.007, 0.052, 0.022, 0.007, 0.141, 0.007, 0.007, 0.007, 0.074, 0.007, 0.015, 0.007, 0.111, 0.015, 0.030, 0.015, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.096, 0.007, 0.015, 0.022, 0.007, 0.007, 0.015, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.487, 2.591),\n     \"Inclination_radians\": gaussian(1.714, 0.014),\n     \"Users\": categorical([0.009, 0.056, 0.112, 0.019, 0.009, 0.009, 0.028, 0.505, 0.037, 0.009, 0.009, 0.037, 0.037, 0.047, 0.009, 0.009, 0.019, 0.037]),\n     \"Class_of_Orbit\": categorical([0.968, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.114, 0.044, 0.009, 0.237, 0.114, 0.009, 0.035, 0.009, 0.061, 0.009, 0.009, 0.009, 0.096, 0.018, 0.018, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.053, 0.009, 0.061, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2932.543, 1459.097),\n     \"Apogee_km\": gaussian(83551.538, 101846.758),\n     \"Perigee_km\": gaussian(17393.665, 17977.828),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1300.397, 1150.490),\n     \"Inclination_radians\": gaussian(2.318, 5.533),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.135, 0.081, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5178.136, 7526.594),\n     \"Apogee_km\": gaussian(846.392, 314.237),\n     \"Perigee_km\": gaussian(606.414, 280.943),\n     \"Type_of_Orbit\": categorical([0.286, 0.036, 0.143, 0.429, 0.036, 0.036, 0.036]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.070, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.116, 0.012, 0.012, 0.023, 0.012, 0.035, 0.012, 0.128, 0.012, 0.035, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.058, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(98.899, 4.430),\n     \"Inclination_radians\": gaussian(1.222, 0.516),\n     \"Users\": categorical([0.017, 0.034, 0.259, 0.017, 0.017, 0.034, 0.017, 0.224, 0.121, 0.017, 0.017, 0.017, 0.034, 0.103, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.864, 0.023, 0.091, 0.023]),\n     \"Launch_Site\": categorical([0.138, 0.031, 0.031, 0.231, 0.031, 0.015, 0.046, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.031, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.062, 0.015, 0.031, 0.031])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.047, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.696, 0.237)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.417, 0.081, 0.173, 0.093, 0.006, 0.067, 0.027, 0.037]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(681.880, 51.890),\n     \"Apogee_km\": gaussian(777.158, 8.570),\n     \"Perigee_km\": gaussian(773.568, 11.222),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.361, 0.158),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3582.879, 1575.205),\n     \"Apogee_km\": gaussian(35830.656, 1483.813),\n     \"Perigee_km\": gaussian(35690.785, 1474.384),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.749, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1433.132, 54.867),\n     \"Inclination_radians\": gaussian(0.020, 0.086),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.116, 0.652, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.334, 0.016, 0.016, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.202, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(511.094, 191.504),\n     \"Apogee_km\": gaussian(1422.809, 86.698),\n     \"Perigee_km\": gaussian(1402.584, 104.755),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.238, 1.570),\n     \"Inclination_radians\": gaussian(1.035, 0.256),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(748.130, 1043.341),\n     \"Apogee_km\": gaussian(692.307, 106.956),\n     \"Perigee_km\": gaussian(659.842, 103.940),\n     \"Type_of_Orbit\": categorical([0.896, 0.009, 0.061, 0.009, 0.009, 0.009, 0.009]),\n     \"Purpose\": categorical([0.006, 0.048, 0.006, 0.030, 0.006, 0.042, 0.018, 0.006, 0.012, 0.006, 0.012, 0.012, 0.036, 0.006, 0.174, 0.012, 0.006, 0.114, 0.006, 0.006, 0.006, 0.060, 0.006, 0.012, 0.006, 0.090, 0.012, 0.024, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.078, 0.006, 0.012, 0.018, 0.006, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.294, 2.095),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.007, 0.036, 0.086, 0.014, 0.007, 0.007, 0.022, 0.403, 0.101, 0.007, 0.014, 0.022, 0.029, 0.187, 0.007, 0.007, 0.014, 0.029]),\n     \"Class_of_Orbit\": categorical([0.976, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.096, 0.041, 0.007, 0.185, 0.089, 0.007, 0.034, 0.007, 0.089, 0.007, 0.007, 0.007, 0.089, 0.130, 0.014, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.055, 0.007, 0.062, 0.014])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1694.019, 577.197),\n     \"Apogee_km\": gaussian(19901.749, 2002.246),\n     \"Perigee_km\": gaussian(19839.462, 1973.490),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(707.319, 74.139),\n     \"Inclination_radians\": gaussian(1.042, 0.102),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.969, 0.560),\n     \"Apogee_km\": gaussian(694.546, 9.045),\n     \"Perigee_km\": gaussian(675.760, 1.942),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.610, 0.685),\n     \"Inclination_radians\": gaussian(1.711, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(122.618, 182.935),\n     \"Apogee_km\": gaussian(777.883, 274.698),\n     \"Perigee_km\": gaussian(539.497, 166.681),\n     \"Type_of_Orbit\": categorical([0.560, 0.040, 0.120, 0.160, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.054, 0.011, 0.290, 0.011, 0.011, 0.075, 0.011, 0.032, 0.011, 0.011, 0.011, 0.022, 0.011, 0.043, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.054, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.807, 3.438),\n     \"Inclination_radians\": gaussian(1.202, 0.560),\n     \"Users\": categorical([0.015, 0.123, 0.031, 0.031, 0.015, 0.062, 0.015, 0.185, 0.108, 0.015, 0.015, 0.015, 0.015, 0.292, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.882, 0.020, 0.078, 0.020]),\n     \"Launch_Site\": categorical([0.111, 0.028, 0.028, 0.306, 0.014, 0.028, 0.042, 0.014, 0.028, 0.014, 0.014, 0.069, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.056, 0.056, 0.014, 0.028, 0.028])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2945.212, 1546.334),\n     \"Apogee_km\": gaussian(82635.244, 106059.901),\n     \"Perigee_km\": gaussian(18431.016, 17075.515),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1272.490, 1214.355),\n     \"Inclination_radians\": gaussian(2.216, 5.694),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.135, 0.081, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7788.402, 7774.580),\n     \"Apogee_km\": gaussian(837.908, 197.034),\n     \"Perigee_km\": gaussian(673.113, 275.972),\n     \"Type_of_Orbit\": categorical([0.333, 0.042, 0.125, 0.375, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.014, 0.028, 0.014, 0.083, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.153, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.545, 3.832),\n     \"Inclination_radians\": gaussian(1.341, 0.536),\n     \"Users\": categorical([0.023, 0.045, 0.341, 0.023, 0.023, 0.023, 0.023, 0.091, 0.159, 0.023, 0.023, 0.045, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.900, 0.033, 0.033, 0.033]),\n     \"Launch_Site\": categorical([0.157, 0.020, 0.020, 0.235, 0.039, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.039, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.078, 0.039, 0.020, 0.020, 0.020])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.054, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.712, 0.229)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.093, 0.415, 0.077, 0.081, 0.006, 0.068, 0.100, 0.044, 0.027, 0.068, 0.019, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1708.330, 567.028),\n     \"Apogee_km\": gaussian(19979.260, 2003.815),\n     \"Perigee_km\": gaussian(19836.685, 2046.860),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(705.324, 69.467),\n     \"Inclination_radians\": gaussian(1.043, 0.108),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3631.605, 1510.586),\n     \"Apogee_km\": gaussian(35784.671, 1395.308),\n     \"Perigee_km\": gaussian(35691.441, 1429.411),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1432.522, 57.448),\n     \"Inclination_radians\": gaussian(0.016, 0.081),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.389, 15.928),\n     \"Apogee_km\": gaussian(733.303, 102.548),\n     \"Perigee_km\": gaussian(581.428, 85.215),\n     \"Type_of_Orbit\": categorical([0.800, 0.022, 0.044, 0.067, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.040, 0.010, 0.070, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.080, 0.010, 0.360, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.876, 1.014),\n     \"Inclination_radians\": gaussian(1.605, 0.376),\n     \"Users\": categorical([0.014, 0.014, 0.028, 0.014, 0.014, 0.042, 0.014, 0.083, 0.264, 0.014, 0.028, 0.014, 0.014, 0.389, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.152, 0.025, 0.013, 0.177, 0.013, 0.025, 0.013, 0.013, 0.089, 0.013, 0.013, 0.013, 0.025, 0.228, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.038, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(502.010, 186.932),\n     \"Apogee_km\": gaussian(1425.436, 90.087),\n     \"Perigee_km\": gaussian(1405.521, 104.666),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.123, 1.612),\n     \"Inclination_radians\": gaussian(1.034, 0.247),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.965, 0.595),\n     \"Apogee_km\": gaussian(693.843, 9.335),\n     \"Perigee_km\": gaussian(675.632, 1.746),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.653, 0.870),\n     \"Inclination_radians\": gaussian(1.711, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1023.265, 1242.047),\n     \"Apogee_km\": gaussian(669.315, 36.796),\n     \"Perigee_km\": gaussian(654.820, 37.520),\n     \"Type_of_Orbit\": categorical([0.824, 0.020, 0.078, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.043, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011, 0.021, 0.011, 0.021, 0.011, 0.043, 0.011, 0.011, 0.128, 0.011, 0.011, 0.011, 0.043, 0.011, 0.011, 0.011, 0.128, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.106, 0.011, 0.021, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(97.949, 0.771),\n     \"Inclination_radians\": gaussian(1.711, 0.015),\n     \"Users\": categorical([0.015, 0.045, 0.076, 0.030, 0.015, 0.015, 0.015, 0.455, 0.030, 0.015, 0.015, 0.015, 0.045, 0.091, 0.015, 0.015, 0.030, 0.061]),\n     \"Class_of_Orbit\": categorical([0.942, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.041, 0.041, 0.014, 0.247, 0.055, 0.014, 0.068, 0.014, 0.082, 0.014, 0.014, 0.014, 0.082, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.055, 0.014, 0.082, 0.027])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.474, 49.346),\n     \"Apogee_km\": gaussian(777.366, 8.427),\n     \"Perigee_km\": gaussian(773.797, 10.805),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.368, 0.155),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(608.910, 558.747),\n     \"Apogee_km\": gaussian(518.021, 46.645),\n     \"Perigee_km\": gaussian(505.437, 40.408),\n     \"Type_of_Orbit\": categorical([0.640, 0.040, 0.120, 0.080, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.156, 0.026, 0.013, 0.078, 0.013, 0.026, 0.013, 0.104, 0.013, 0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.052, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.862, 1.010),\n     \"Inclination_radians\": gaussian(1.319, 0.518),\n     \"Users\": categorical([0.020, 0.082, 0.041, 0.041, 0.020, 0.020, 0.061, 0.306, 0.082, 0.020, 0.020, 0.041, 0.041, 0.122, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.071, 0.018, 0.018, 0.036, 0.089, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.089, 0.125, 0.036, 0.054, 0.018, 0.036, 0.054, 0.018, 0.018, 0.071, 0.054, 0.018, 0.054, 0.018])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2695.050, 1411.267),\n     \"Apogee_km\": gaussian(82150.486, 101798.250),\n     \"Perigee_km\": gaussian(17273.078, 17313.682),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1224.793, 1189.051),\n     \"Inclination_radians\": gaussian(0.829, 0.538),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.162, 0.054, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045, 0.023, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(916.619, 1240.255),\n     \"Apogee_km\": gaussian(920.655, 202.378),\n     \"Perigee_km\": gaussian(794.748, 184.612),\n     \"Type_of_Orbit\": categorical([0.675, 0.025, 0.125, 0.100, 0.025, 0.025, 0.025]),\n     \"Purpose\": categorical([0.011, 0.096, 0.011, 0.043, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.021, 0.021, 0.011, 0.085, 0.021, 0.011, 0.085, 0.011, 0.011, 0.011, 0.053, 0.011, 0.021, 0.011, 0.064, 0.011, 0.043, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.064, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.057, 2.051),\n     \"Inclination_radians\": gaussian(1.506, 0.413),\n     \"Users\": categorical([0.015, 0.121, 0.182, 0.015, 0.015, 0.030, 0.015, 0.273, 0.061, 0.015, 0.015, 0.045, 0.030, 0.106, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.885, 0.019, 0.077, 0.019]),\n     \"Launch_Site\": categorical([0.151, 0.041, 0.014, 0.288, 0.096, 0.014, 0.041, 0.014, 0.055, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.068, 0.014, 0.014, 0.027])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12992.628, 6983.083),\n     \"Apogee_km\": gaussian(731.812, 249.715),\n     \"Perigee_km\": gaussian(461.844, 217.425),\n     \"Type_of_Orbit\": categorical([0.353, 0.059, 0.059, 0.353, 0.059, 0.059, 0.059]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.034, 0.017, 0.034, 0.017, 0.102, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.068, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(96.719, 2.788),\n     \"Inclination_radians\": gaussian(1.175, 0.574),\n     \"Users\": categorical([0.032, 0.032, 0.323, 0.032, 0.032, 0.032, 0.032, 0.161, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.053, 0.053, 0.053, 0.211, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.105, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3414.232, 6549.910),\n     \"Apogee_km\": gaussian(21450.845, 54422.064),\n     \"Perigee_km\": gaussian(27401.411, 76516.503),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1032.117, 2947.732),\n     \"Inclination_radians\": gaussian(18.890, 39.597),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.047, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.695, 0.253)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.415, 0.098, 0.100, 0.093, 0.006, 0.019, 0.126, 0.010, 0.081, 0.053]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3561.415, 1556.745),\n     \"Apogee_km\": gaussian(35742.377, 1411.483),\n     \"Perigee_km\": gaussian(35773.396, 1494.340),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1432.876, 58.772),\n     \"Inclination_radians\": gaussian(0.019, 0.079),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14.338, 23.636),\n     \"Apogee_km\": gaussian(717.600, 120.063),\n     \"Perigee_km\": gaussian(586.666, 93.253),\n     \"Type_of_Orbit\": categorical([0.852, 0.019, 0.019, 0.056, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.043, 0.009, 0.061, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.070, 0.009, 0.365, 0.009, 0.009, 0.052, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.821, 1.727),\n     \"Inclination_radians\": gaussian(1.496, 0.438),\n     \"Users\": categorical([0.011, 0.092, 0.023, 0.023, 0.011, 0.034, 0.011, 0.069, 0.230, 0.011, 0.023, 0.011, 0.011, 0.391, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.117, 0.021, 0.011, 0.202, 0.011, 0.021, 0.021, 0.011, 0.096, 0.011, 0.011, 0.053, 0.032, 0.191, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.021, 0.032, 0.011, 0.043, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.516, 49.388),\n     \"Apogee_km\": gaussian(776.889, 8.295),\n     \"Perigee_km\": gaussian(773.968, 10.766),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.362, 0.154),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1696.258, 577.842),\n     \"Apogee_km\": gaussian(19997.748, 2151.950),\n     \"Perigee_km\": gaussian(19783.982, 2039.121),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(704.626, 73.940),\n     \"Inclination_radians\": gaussian(1.045, 0.104),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.954, 0.677),\n     \"Apogee_km\": gaussian(694.593, 8.758),\n     \"Perigee_km\": gaussian(675.855, 1.413),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.615, 0.770),\n     \"Inclination_radians\": gaussian(1.714, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2656.913, 1258.268),\n     \"Apogee_km\": gaussian(35818.635, 8029.499),\n     \"Perigee_km\": gaussian(22303.875, 18905.848),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.102, 0.017, 0.017, 0.068, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.068, 0.017]),\n     \"Period_minutes\": gaussian(912.575, 584.693),\n     \"Inclination_radians\": gaussian(0.913, 0.478),\n     \"Users\": categorical([0.032, 0.032, 0.419, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.529, 0.353, 0.059]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.158, 0.026, 0.079, 0.105, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1075.424, 1115.501),\n     \"Apogee_km\": gaussian(696.512, 123.928),\n     \"Perigee_km\": gaussian(686.680, 127.765),\n     \"Type_of_Orbit\": categorical([0.847, 0.012, 0.094, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.067, 0.007, 0.022, 0.007, 0.007, 0.022, 0.007, 0.015, 0.007, 0.007, 0.015, 0.015, 0.007, 0.067, 0.022, 0.007, 0.142, 0.007, 0.007, 0.007, 0.075, 0.007, 0.015, 0.007, 0.112, 0.015, 0.030, 0.015, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.097, 0.007, 0.015, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.464, 2.483),\n     \"Inclination_radians\": gaussian(1.712, 0.014),\n     \"Users\": categorical([0.009, 0.047, 0.113, 0.019, 0.009, 0.009, 0.028, 0.509, 0.028, 0.009, 0.009, 0.038, 0.038, 0.057, 0.009, 0.009, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.115, 0.044, 0.009, 0.239, 0.115, 0.009, 0.035, 0.009, 0.053, 0.009, 0.009, 0.009, 0.097, 0.018, 0.018, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.062, 0.009, 0.053, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3040.104, 2484.291),\n     \"Apogee_km\": gaussian(148555.250, 156807.229),\n     \"Perigee_km\": gaussian(12479.392, 17330.761),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.094, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(1625.952, 1821.866),\n     \"Inclination_radians\": gaussian(4.111, 9.698),\n     \"Users\": categorical([0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.040, 0.200, 0.120, 0.040, 0.040, 0.040, 0.040, 0.080, 0.040, 0.040, 0.040, 0.040]),\n     \"Class_of_Orbit\": categorical([0.091, 0.273, 0.545, 0.091]),\n     \"Launch_Site\": categorical([0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.063, 0.094, 0.031, 0.031, 0.031, 0.063])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(495.462, 193.742),\n     \"Apogee_km\": gaussian(1426.027, 84.838),\n     \"Perigee_km\": gaussian(1405.189, 103.977),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.226, 1.653),\n     \"Inclination_radians\": gaussian(1.020, 0.252),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5602.878, 7442.997),\n     \"Apogee_km\": gaussian(824.344, 327.290),\n     \"Perigee_km\": gaussian(581.073, 260.390),\n     \"Type_of_Orbit\": categorical([0.280, 0.040, 0.160, 0.400, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.108, 0.012, 0.012, 0.024, 0.012, 0.036, 0.012, 0.133, 0.012, 0.036, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.060, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(98.758, 4.562),\n     \"Inclination_radians\": gaussian(1.232, 0.529),\n     \"Users\": categorical([0.018, 0.036, 0.273, 0.018, 0.018, 0.036, 0.018, 0.218, 0.091, 0.018, 0.018, 0.018, 0.036, 0.109, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.854, 0.024, 0.098, 0.024]),\n     \"Launch_Site\": categorical([0.097, 0.032, 0.032, 0.242, 0.032, 0.016, 0.048, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.032, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.097, 0.065, 0.016, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.929, 0.056, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.714, 0.237)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.043, 0.091, 0.417, 0.190, 0.093, 0.006, 0.098, 0.026, 0.036, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(618.324, 554.035),\n     \"Apogee_km\": gaussian(511.751, 45.631),\n     \"Perigee_km\": gaussian(496.120, 42.241),\n     \"Type_of_Orbit\": categorical([0.583, 0.042, 0.125, 0.125, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.145, 0.026, 0.013, 0.079, 0.013, 0.039, 0.013, 0.092, 0.013, 0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.705, 0.933),\n     \"Inclination_radians\": gaussian(1.292, 0.523),\n     \"Users\": categorical([0.021, 0.083, 0.042, 0.042, 0.021, 0.021, 0.063, 0.292, 0.083, 0.021, 0.021, 0.042, 0.042, 0.125, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.912, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.091, 0.018, 0.018, 0.036, 0.073, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.091, 0.109, 0.036, 0.055, 0.018, 0.036, 0.055, 0.018, 0.018, 0.073, 0.055, 0.018, 0.055, 0.018])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(17.302, 24.353),\n     \"Apogee_km\": gaussian(726.150, 98.458),\n     \"Perigee_km\": gaussian(600.511, 89.542),\n     \"Type_of_Orbit\": categorical([0.852, 0.019, 0.056, 0.019, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.036, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.073, 0.009, 0.355, 0.009, 0.009, 0.055, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.043, 1.208),\n     \"Inclination_radians\": gaussian(1.618, 0.350),\n     \"Users\": categorical([0.012, 0.085, 0.024, 0.012, 0.012, 0.037, 0.012, 0.110, 0.207, 0.012, 0.024, 0.012, 0.012, 0.378, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.112, 0.022, 0.011, 0.213, 0.011, 0.022, 0.034, 0.011, 0.090, 0.011, 0.011, 0.011, 0.034, 0.202, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.056, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3565.772, 1430.347),\n     \"Apogee_km\": gaussian(35721.517, 1502.670),\n     \"Perigee_km\": gaussian(35666.754, 1453.953),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.749, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1433.012, 57.558),\n     \"Inclination_radians\": gaussian(0.012, 0.087),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.116, 0.652, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.334, 0.016, 0.016, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.202, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(609.705, 155.848),\n     \"Apogee_km\": gaussian(1060.839, 326.525),\n     \"Perigee_km\": gaussian(1045.285, 332.049),\n     \"Type_of_Orbit\": categorical([0.015, 0.007, 0.533, 0.422, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.726, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(106.320, 6.920),\n     \"Inclination_radians\": gaussian(1.297, 0.284),\n     \"Users\": categorical([0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020, 0.331, 0.007, 0.007, 0.007, 0.477, 0.020, 0.007, 0.007, 0.060, 0.007]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.367, 0.006, 0.006, 0.310, 0.063, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.051, 0.082, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1687.709, 566.838),\n     \"Apogee_km\": gaussian(19945.019, 2215.906),\n     \"Perigee_km\": gaussian(19791.194, 2068.253),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(702.886, 71.589),\n     \"Inclination_radians\": gaussian(1.046, 0.104),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.958, 0.505),\n     \"Apogee_km\": gaussian(694.198, 7.685),\n     \"Perigee_km\": gaussian(675.748, 1.683),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.439, 0.493),\n     \"Inclination_radians\": gaussian(1.715, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1248.992, 1217.400),\n     \"Apogee_km\": gaussian(736.072, 104.094),\n     \"Perigee_km\": gaussian(726.258, 101.029),\n     \"Type_of_Orbit\": categorical([0.843, 0.014, 0.086, 0.014, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.009, 0.078, 0.009, 0.017, 0.009, 0.009, 0.026, 0.009, 0.017, 0.009, 0.009, 0.017, 0.017, 0.009, 0.043, 0.017, 0.009, 0.122, 0.009, 0.009, 0.009, 0.043, 0.009, 0.017, 0.009, 0.122, 0.017, 0.035, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.113, 0.009, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.426, 2.114),\n     \"Inclination_radians\": gaussian(1.716, 0.015),\n     \"Users\": categorical([0.011, 0.046, 0.138, 0.023, 0.011, 0.011, 0.011, 0.471, 0.034, 0.011, 0.011, 0.034, 0.034, 0.057, 0.011, 0.011, 0.023, 0.046]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.106, 0.053, 0.011, 0.277, 0.106, 0.011, 0.032, 0.011, 0.064, 0.011, 0.011, 0.011, 0.064, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.064, 0.011, 0.043, 0.021])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2864.448, 1480.375),\n     \"Apogee_km\": gaussian(84670.996, 103536.271),\n     \"Perigee_km\": gaussian(15674.687, 17564.427),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.094, 0.016, 0.016, 0.078, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.078, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016]),\n     \"Period_minutes\": gaussian(1203.182, 1251.894),\n     \"Inclination_radians\": gaussian(0.806, 0.520),\n     \"Users\": categorical([0.028, 0.028, 0.361, 0.028, 0.028, 0.028, 0.028, 0.139, 0.056, 0.028, 0.028, 0.028, 0.028, 0.056, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.409, 0.500, 0.045]),\n     \"Launch_Site\": categorical([0.047, 0.023, 0.023, 0.070, 0.023, 0.023, 0.047, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.140, 0.047, 0.116, 0.093, 0.023, 0.023, 0.047])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7816.552, 8237.724),\n     \"Apogee_km\": gaussian(963.075, 315.903),\n     \"Perigee_km\": gaussian(573.598, 305.864),\n     \"Type_of_Orbit\": categorical([0.389, 0.056, 0.056, 0.333, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.085, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.141, 0.014, 0.028, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.340, 4.342),\n     \"Inclination_radians\": gaussian(1.235, 0.570),\n     \"Users\": categorical([0.023, 0.023, 0.326, 0.023, 0.023, 0.047, 0.023, 0.186, 0.023, 0.023, 0.023, 0.023, 0.023, 0.116, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.793, 0.034, 0.138, 0.034]),\n     \"Launch_Site\": categorical([0.020, 0.040, 0.040, 0.300, 0.020, 0.020, 0.060, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.080, 0.040, 0.020, 0.020, 0.040])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3317.055, 5222.263),\n     \"Apogee_km\": gaussian(23054.872, 40053.543),\n     \"Perigee_km\": gaussian(23813.953, 47490.705),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1174.043, 7337.191),\n     \"Inclination_radians\": gaussian(17.345, 38.900),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.049, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.708, 0.233)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.999, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.001, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.046, 0.078, 0.415, 0.100, 0.090, 0.006, 0.023, 0.116, 0.081, 0.034, 0.009, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6340.936, 7882.047),\n     \"Apogee_km\": gaussian(926.395, 277.816),\n     \"Perigee_km\": gaussian(622.925, 288.177),\n     \"Type_of_Orbit\": categorical([0.458, 0.042, 0.042, 0.333, 0.042, 0.042, 0.042]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.090, 0.013, 0.013, 0.077, 0.013, 0.013, 0.013, 0.128, 0.013, 0.026, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.051, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.527, 3.846),\n     \"Inclination_radians\": gaussian(1.225, 0.561),\n     \"Users\": categorical([0.020, 0.100, 0.280, 0.020, 0.020, 0.040, 0.020, 0.180, 0.060, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.833, 0.028, 0.111, 0.028]),\n     \"Launch_Site\": categorical([0.053, 0.035, 0.035, 0.351, 0.018, 0.018, 0.053, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.070, 0.035, 0.018, 0.018, 0.035])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12.524, 18.872),\n     \"Apogee_km\": gaussian(725.380, 102.642),\n     \"Perigee_km\": gaussian(581.543, 76.253),\n     \"Type_of_Orbit\": categorical([0.809, 0.021, 0.043, 0.064, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.050, 0.010, 0.069, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.347, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.780, 0.871),\n     \"Inclination_radians\": gaussian(1.668, 0.289),\n     \"Users\": categorical([0.014, 0.041, 0.027, 0.014, 0.014, 0.041, 0.014, 0.082, 0.260, 0.014, 0.027, 0.014, 0.014, 0.370, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.949, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.138, 0.025, 0.013, 0.175, 0.013, 0.025, 0.025, 0.013, 0.100, 0.013, 0.013, 0.013, 0.038, 0.225, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.025, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3652.716, 1498.464),\n     \"Apogee_km\": gaussian(35720.789, 1463.759),\n     \"Perigee_km\": gaussian(35693.855, 1489.051),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1433.662, 59.724),\n     \"Inclination_radians\": gaussian(0.017, 0.078),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.272, 50.026),\n     \"Apogee_km\": gaussian(777.148, 8.226),\n     \"Perigee_km\": gaussian(773.522, 11.389),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.353, 0.169),\n     \"Inclination_radians\": gaussian(1.509, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1631.844, 440.879),\n     \"Apogee_km\": gaussian(19804.162, 2007.595),\n     \"Perigee_km\": gaussian(19705.131, 2003.623),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.587, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(703.246, 70.830),\n     \"Inclination_radians\": gaussian(1.043, 0.110),\n     \"Users\": categorical([0.012, 0.012, 0.049, 0.012, 0.012, 0.012, 0.704, 0.012, 0.049, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.025, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.015, 0.015, 0.015, 0.955]),\n     \"Launch_Site\": categorical([0.318, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.295, 0.057, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.955, 0.672),\n     \"Apogee_km\": gaussian(693.759, 9.586),\n     \"Perigee_km\": gaussian(675.835, 1.458),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.620, 0.809),\n     \"Inclination_radians\": gaussian(1.708, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2791.492, 1197.594),\n     \"Apogee_km\": gaussian(32123.974, 11241.778),\n     \"Perigee_km\": gaussian(20686.424, 17626.253),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.129, 0.016, 0.016, 0.065, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.065, 0.016]),\n     \"Period_minutes\": gaussian(826.566, 559.958),\n     \"Inclination_radians\": gaussian(0.948, 0.469),\n     \"Users\": categorical([0.029, 0.029, 0.441, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.450, 0.350, 0.150]),\n     \"Launch_Site\": categorical([0.024, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.195, 0.024, 0.073, 0.098, 0.024, 0.024, 0.049])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1130.465, 1169.570),\n     \"Apogee_km\": gaussian(721.931, 117.683),\n     \"Perigee_km\": gaussian(705.169, 113.573),\n     \"Type_of_Orbit\": categorical([0.852, 0.012, 0.086, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.071, 0.008, 0.024, 0.008, 0.008, 0.024, 0.008, 0.016, 0.008, 0.008, 0.016, 0.024, 0.008, 0.055, 0.016, 0.008, 0.118, 0.008, 0.008, 0.008, 0.079, 0.008, 0.016, 0.008, 0.118, 0.016, 0.031, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.102, 0.008, 0.016, 0.024, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.948, 2.468),\n     \"Inclination_radians\": gaussian(1.714, 0.015),\n     \"Users\": categorical([0.010, 0.040, 0.121, 0.020, 0.010, 0.010, 0.010, 0.495, 0.030, 0.010, 0.010, 0.030, 0.040, 0.081, 0.010, 0.010, 0.020, 0.040]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.104, 0.047, 0.009, 0.245, 0.094, 0.009, 0.038, 0.009, 0.057, 0.009, 0.009, 0.009, 0.104, 0.019, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.066, 0.009, 0.066, 0.019])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(495.408, 191.222),\n     \"Apogee_km\": gaussian(1426.409, 88.503),\n     \"Perigee_km\": gaussian(1399.456, 100.410),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.226, 1.635),\n     \"Inclination_radians\": gaussian(1.033, 0.243),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(394.673, 465.687),\n     \"Apogee_km\": gaussian(517.844, 53.777),\n     \"Perigee_km\": gaussian(499.032, 48.653),\n     \"Type_of_Orbit\": categorical([0.444, 0.056, 0.167, 0.167, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.171, 0.029, 0.014, 0.071, 0.014, 0.043, 0.014, 0.029, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.057, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(94.797, 1.115),\n     \"Inclination_radians\": gaussian(1.134, 0.505),\n     \"Users\": categorical([0.024, 0.095, 0.048, 0.048, 0.024, 0.024, 0.071, 0.190, 0.095, 0.024, 0.024, 0.048, 0.024, 0.167, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.893, 0.036, 0.036, 0.036]),\n     \"Launch_Site\": categorical([0.102, 0.020, 0.020, 0.041, 0.082, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.102, 0.020, 0.041, 0.041, 0.020, 0.041, 0.061, 0.020, 0.020, 0.082, 0.061, 0.020, 0.061, 0.020])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3030.949, 2308.487),\n     \"Apogee_km\": gaussian(167407.097, 151673.705),\n     \"Perigee_km\": gaussian(14869.905, 17592.831),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.058, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(2026.024, 1783.424),\n     \"Inclination_radians\": gaussian(4.525, 9.974),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.300, 0.500, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.097, 0.032, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(594.533, 429.639),\n     \"Apogee_km\": gaussian(716.971, 10.876),\n     \"Perigee_km\": gaussian(700.779, 45.847),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.221, 1.021),\n     \"Inclination_radians\": gaussian(1.591, 0.177),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.923, 0.061, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.030)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.695, 0.241)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.100, 0.174, 0.417, 0.081, 0.093, 0.006, 0.083, 0.027, 0.020]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.130, 49.938),\n     \"Apogee_km\": gaussian(777.279, 8.395),\n     \"Perigee_km\": gaussian(773.958, 11.186),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.372, 0.155),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(760.023, 1037.851),\n     \"Apogee_km\": gaussian(696.931, 108.346),\n     \"Perigee_km\": gaussian(666.315, 109.329),\n     \"Type_of_Orbit\": categorical([0.888, 0.009, 0.069, 0.009, 0.009, 0.009, 0.009]),\n     \"Purpose\": categorical([0.006, 0.054, 0.006, 0.030, 0.006, 0.042, 0.018, 0.006, 0.012, 0.006, 0.012, 0.012, 0.036, 0.006, 0.173, 0.012, 0.006, 0.113, 0.006, 0.006, 0.006, 0.060, 0.006, 0.012, 0.006, 0.089, 0.012, 0.024, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.077, 0.006, 0.012, 0.018, 0.006, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.411, 2.089),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.007, 0.043, 0.086, 0.014, 0.007, 0.007, 0.021, 0.400, 0.100, 0.007, 0.014, 0.021, 0.029, 0.186, 0.007, 0.007, 0.014, 0.029]),\n     \"Class_of_Orbit\": categorical([0.976, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.102, 0.041, 0.007, 0.184, 0.088, 0.007, 0.034, 0.007, 0.088, 0.007, 0.007, 0.007, 0.088, 0.129, 0.014, 0.007, 0.007, 0.020, 0.007, 0.007, 0.007, 0.054, 0.007, 0.061, 0.014])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3646.981, 1507.644),\n     \"Apogee_km\": gaussian(35768.200, 1427.434),\n     \"Perigee_km\": gaussian(35748.821, 1482.492),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.749, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1433.510, 56.472),\n     \"Inclination_radians\": gaussian(0.020, 0.087),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.116, 0.652, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.334, 0.016, 0.016, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.202, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(497.513, 183.090),\n     \"Apogee_km\": gaussian(1424.600, 87.169),\n     \"Perigee_km\": gaussian(1402.641, 106.148),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.208, 1.553),\n     \"Inclination_radians\": gaussian(1.019, 0.242),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1692.360, 555.124),\n     \"Apogee_km\": gaussian(19884.296, 2067.968),\n     \"Perigee_km\": gaussian(19815.686, 2010.541),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(704.270, 71.432),\n     \"Inclination_radians\": gaussian(1.046, 0.106),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.035, 0.626),\n     \"Apogee_km\": gaussian(694.187, 9.338),\n     \"Perigee_km\": gaussian(675.869, 1.412),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.665, 1.011),\n     \"Inclination_radians\": gaussian(1.712, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(240.887, 382.008),\n     \"Apogee_km\": gaussian(769.678, 269.320),\n     \"Perigee_km\": gaussian(569.909, 182.152),\n     \"Type_of_Orbit\": categorical([0.484, 0.032, 0.129, 0.258, 0.032, 0.032, 0.032]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.048, 0.010, 0.288, 0.019, 0.010, 0.067, 0.010, 0.029, 0.010, 0.019, 0.010, 0.019, 0.010, 0.038, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.058, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.267, 3.366),\n     \"Inclination_radians\": gaussian(1.234, 0.557),\n     \"Users\": categorical([0.013, 0.105, 0.053, 0.026, 0.013, 0.053, 0.013, 0.171, 0.171, 0.013, 0.013, 0.026, 0.026, 0.250, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.903, 0.016, 0.065, 0.016]),\n     \"Launch_Site\": categorical([0.169, 0.024, 0.024, 0.277, 0.024, 0.024, 0.036, 0.012, 0.036, 0.012, 0.012, 0.060, 0.012, 0.024, 0.024, 0.012, 0.024, 0.012, 0.012, 0.012, 0.048, 0.048, 0.012, 0.024, 0.024])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3030.077, 1491.940),\n     \"Apogee_km\": gaussian(79565.209, 104709.993),\n     \"Perigee_km\": gaussian(18007.250, 17666.103),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1239.305, 1176.029),\n     \"Inclination_radians\": gaussian(2.100, 5.636),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.135, 0.081, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(13453.797, 6196.081),\n     \"Apogee_km\": gaussian(864.134, 211.623),\n     \"Perigee_km\": gaussian(644.941, 324.537),\n     \"Type_of_Orbit\": categorical([0.412, 0.059, 0.059, 0.294, 0.059, 0.059, 0.059]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.167, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(99.973, 4.550),\n     \"Inclination_radians\": gaussian(1.447, 0.570),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.833, 0.056, 0.056, 0.056]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.282, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.051, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.049, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.037, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.670, 0.313)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.081, 0.415, 0.074, 0.093, 0.006, 0.103, 0.100, 0.041, 0.029, 0.058]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(496.664, 189.353),\n     \"Apogee_km\": gaussian(1423.912, 88.461),\n     \"Perigee_km\": gaussian(1407.942, 103.033),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.246, 1.612),\n     \"Inclination_radians\": gaussian(1.035, 0.238),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3615.937, 1465.678),\n     \"Apogee_km\": gaussian(35698.999, 1503.101),\n     \"Perigee_km\": gaussian(35740.864, 1498.288),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1433.895, 56.980),\n     \"Inclination_radians\": gaussian(0.017, 0.082),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(25.794, 36.292),\n     \"Apogee_km\": gaussian(813.655, 216.267),\n     \"Perigee_km\": gaussian(581.469, 168.623),\n     \"Type_of_Orbit\": categorical([0.789, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.031, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.061, 0.010, 0.316, 0.010, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.782, 2.611),\n     \"Inclination_radians\": gaussian(1.512, 0.439),\n     \"Users\": categorical([0.014, 0.086, 0.029, 0.014, 0.014, 0.057, 0.014, 0.143, 0.229, 0.014, 0.014, 0.014, 0.014, 0.286, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.929, 0.018, 0.036, 0.018]),\n     \"Launch_Site\": categorical([0.169, 0.052, 0.013, 0.273, 0.013, 0.026, 0.039, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.091, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.039, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1696.576, 585.424),\n     \"Apogee_km\": gaussian(19911.367, 2037.035),\n     \"Perigee_km\": gaussian(19717.581, 2133.379),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(707.083, 67.423),\n     \"Inclination_radians\": gaussian(1.046, 0.105),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.829, 0.946),\n     \"Apogee_km\": gaussian(694.333, 9.479),\n     \"Perigee_km\": gaussian(675.811, 1.688),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.664, 0.830),\n     \"Inclination_radians\": gaussian(1.712, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(773.359, 1113.654),\n     \"Apogee_km\": gaussian(670.271, 38.356),\n     \"Perigee_km\": gaussian(643.397, 42.734),\n     \"Type_of_Orbit\": categorical([0.865, 0.014, 0.068, 0.014, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.042, 0.008, 0.051, 0.025, 0.008, 0.008, 0.008, 0.017, 0.008, 0.034, 0.008, 0.153, 0.008, 0.008, 0.102, 0.008, 0.008, 0.008, 0.042, 0.008, 0.008, 0.008, 0.102, 0.017, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.085, 0.008, 0.017, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.878, 0.775),\n     \"Inclination_radians\": gaussian(1.710, 0.013),\n     \"Users\": categorical([0.011, 0.033, 0.056, 0.022, 0.011, 0.011, 0.011, 0.378, 0.078, 0.011, 0.022, 0.011, 0.033, 0.222, 0.011, 0.011, 0.022, 0.044]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.052, 0.041, 0.010, 0.186, 0.052, 0.010, 0.052, 0.010, 0.124, 0.010, 0.010, 0.010, 0.082, 0.134, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.062, 0.021])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.831, 53.493),\n     \"Apogee_km\": gaussian(777.100, 8.456),\n     \"Perigee_km\": gaussian(773.031, 11.150),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.359, 0.154),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(598.502, 569.337),\n     \"Apogee_km\": gaussian(517.076, 43.461),\n     \"Perigee_km\": gaussian(501.798, 38.668),\n     \"Type_of_Orbit\": categorical([0.565, 0.043, 0.130, 0.130, 0.043, 0.043, 0.043]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.133, 0.027, 0.013, 0.080, 0.013, 0.040, 0.013, 0.093, 0.013, 0.027, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.814, 1.013),\n     \"Inclination_radians\": gaussian(1.297, 0.515),\n     \"Users\": categorical([0.021, 0.085, 0.043, 0.043, 0.021, 0.021, 0.064, 0.298, 0.064, 0.021, 0.021, 0.043, 0.043, 0.128, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.909, 0.030, 0.030, 0.030]),\n     \"Launch_Site\": categorical([0.093, 0.019, 0.019, 0.037, 0.074, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.111, 0.037, 0.056, 0.019, 0.019, 0.056, 0.019, 0.019, 0.074, 0.056, 0.019, 0.056, 0.019])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2868.459, 1530.422),\n     \"Apogee_km\": gaussian(78802.531, 93701.838),\n     \"Perigee_km\": gaussian(18905.155, 17433.257),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.091, 0.015, 0.015, 0.091, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.061, 0.015]),\n     \"Period_minutes\": gaussian(1269.510, 1142.921),\n     \"Inclination_radians\": gaussian(1.857, 5.411),\n     \"Users\": categorical([0.026, 0.026, 0.342, 0.026, 0.026, 0.026, 0.026, 0.158, 0.079, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026]),\n     \"Class_of_Orbit\": categorical([0.042, 0.458, 0.458, 0.042]),\n     \"Launch_Site\": categorical([0.044, 0.022, 0.022, 0.067, 0.022, 0.022, 0.067, 0.022, 0.044, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.133, 0.044, 0.111, 0.089, 0.022, 0.022, 0.044])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4752.653, 6715.768),\n     \"Apogee_km\": gaussian(874.886, 168.395),\n     \"Perigee_km\": gaussian(741.308, 233.279),\n     \"Type_of_Orbit\": categorical([0.528, 0.028, 0.139, 0.222, 0.028, 0.028, 0.028]),\n     \"Purpose\": categorical([0.011, 0.103, 0.011, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.023, 0.023, 0.011, 0.034, 0.011, 0.011, 0.011, 0.115, 0.011, 0.023, 0.011, 0.034, 0.011, 0.046, 0.011, 0.023, 0.046, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.069, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(101.245, 2.976),\n     \"Inclination_radians\": gaussian(1.432, 0.510),\n     \"Users\": categorical([0.017, 0.051, 0.356, 0.017, 0.017, 0.017, 0.017, 0.254, 0.051, 0.017, 0.017, 0.051, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.889, 0.022, 0.067, 0.022]),\n     \"Launch_Site\": categorical([0.121, 0.015, 0.030, 0.318, 0.106, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.061, 0.030, 0.015, 0.015, 0.030])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.924, 0.060, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.689, 0.258)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.190, 0.415, 0.088, 0.093, 0.006, 0.101, 0.044, 0.027, 0.034, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(615.123, 148.279),\n     \"Apogee_km\": gaussian(1061.965, 330.779),\n     \"Perigee_km\": gaussian(1034.283, 326.139),\n     \"Type_of_Orbit\": categorical([0.007, 0.007, 0.533, 0.430, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.726, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(105.734, 6.854),\n     \"Inclination_radians\": gaussian(1.279, 0.300),\n     \"Users\": categorical([0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.033, 0.331, 0.007, 0.007, 0.007, 0.477, 0.007, 0.007, 0.007, 0.060, 0.007]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.367, 0.006, 0.006, 0.310, 0.063, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.051, 0.076, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3647.549, 1500.128),\n     \"Apogee_km\": gaussian(35804.393, 1454.791),\n     \"Perigee_km\": gaussian(35688.191, 1494.596),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1431.551, 58.713),\n     \"Inclination_radians\": gaussian(0.011, 0.081),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.826, 23.041),\n     \"Apogee_km\": gaussian(732.491, 100.058),\n     \"Perigee_km\": gaussian(601.959, 91.695),\n     \"Type_of_Orbit\": categorical([0.863, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.028, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.074, 0.009, 0.352, 0.009, 0.009, 0.056, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.073, 1.297),\n     \"Inclination_radians\": gaussian(1.596, 0.382),\n     \"Users\": categorical([0.013, 0.088, 0.025, 0.013, 0.013, 0.038, 0.013, 0.100, 0.200, 0.013, 0.025, 0.013, 0.013, 0.388, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.103, 0.023, 0.011, 0.218, 0.011, 0.023, 0.023, 0.011, 0.092, 0.011, 0.011, 0.011, 0.034, 0.207, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.046, 0.011, 0.057, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1694.592, 568.431),\n     \"Apogee_km\": gaussian(19993.485, 2043.288),\n     \"Perigee_km\": gaussian(19781.146, 1985.916),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(705.373, 70.198),\n     \"Inclination_radians\": gaussian(1.039, 0.108),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.998, 0.666),\n     \"Apogee_km\": gaussian(695.124, 9.970),\n     \"Perigee_km\": gaussian(675.576, 2.194),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.501, 0.615),\n     \"Inclination_radians\": gaussian(1.712, 0.073),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1250.092, 1213.469),\n     \"Apogee_km\": gaussian(739.842, 100.017),\n     \"Perigee_km\": gaussian(724.155, 104.498),\n     \"Type_of_Orbit\": categorical([0.833, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.009, 0.077, 0.009, 0.026, 0.009, 0.009, 0.026, 0.009, 0.017, 0.009, 0.009, 0.017, 0.017, 0.009, 0.051, 0.017, 0.009, 0.120, 0.009, 0.009, 0.009, 0.034, 0.009, 0.017, 0.009, 0.120, 0.017, 0.034, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.111, 0.009, 0.017, 0.017, 0.009, 0.009, 0.017, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.409, 2.133),\n     \"Inclination_radians\": gaussian(1.715, 0.015),\n     \"Users\": categorical([0.011, 0.045, 0.135, 0.022, 0.011, 0.011, 0.011, 0.461, 0.045, 0.011, 0.011, 0.034, 0.034, 0.067, 0.011, 0.011, 0.022, 0.045]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.115, 0.052, 0.010, 0.271, 0.104, 0.010, 0.042, 0.010, 0.073, 0.010, 0.010, 0.010, 0.052, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.063, 0.010, 0.042, 0.021])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(607.237, 566.099),\n     \"Apogee_km\": gaussian(513.334, 46.587),\n     \"Perigee_km\": gaussian(496.334, 41.816),\n     \"Type_of_Orbit\": categorical([0.600, 0.040, 0.120, 0.120, 0.040, 0.040, 0.040]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.143, 0.026, 0.013, 0.078, 0.013, 0.039, 0.013, 0.104, 0.013, 0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.052, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.730, 0.963),\n     \"Inclination_radians\": gaussian(1.330, 0.518),\n     \"Users\": categorical([0.020, 0.082, 0.041, 0.041, 0.020, 0.020, 0.061, 0.306, 0.082, 0.020, 0.020, 0.041, 0.041, 0.122, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.089, 0.018, 0.018, 0.036, 0.071, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.089, 0.125, 0.036, 0.054, 0.018, 0.036, 0.054, 0.018, 0.018, 0.071, 0.054, 0.018, 0.054, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2735.286, 1424.827),\n     \"Apogee_km\": gaussian(78453.864, 98814.622),\n     \"Perigee_km\": gaussian(17862.850, 18366.018),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1209.405, 1145.157),\n     \"Inclination_radians\": gaussian(0.803, 0.510),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.162, 0.054, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045, 0.023, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8654.730, 8376.247),\n     \"Apogee_km\": gaussian(1011.662, 348.509),\n     \"Perigee_km\": gaussian(631.877, 403.475),\n     \"Type_of_Orbit\": categorical([0.444, 0.056, 0.056, 0.278, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.029, 0.014, 0.086, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.143, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.057, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(101.478, 6.298),\n     \"Inclination_radians\": gaussian(1.332, 0.561),\n     \"Users\": categorical([0.024, 0.024, 0.333, 0.024, 0.024, 0.048, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024, 0.024, 0.143, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.786, 0.036, 0.143, 0.036]),\n     \"Launch_Site\": categorical([0.020, 0.041, 0.041, 0.306, 0.020, 0.020, 0.061, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.082, 0.061, 0.020, 0.020, 0.041])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3045.634, 5660.464),\n     \"Apogee_km\": gaussian(24968.898, 38095.052),\n     \"Perigee_km\": gaussian(22609.265, 51375.078),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1018.524, 1418.815),\n     \"Inclination_radians\": gaussian(16.515, 35.597),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.926, 0.058, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.711, 0.248)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.027, 0.417, 0.100, 0.081, 0.093, 0.006, 0.133, 0.049, 0.096]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2941.318, 1493.962),\n     \"Apogee_km\": gaussian(80738.252, 97749.480),\n     \"Perigee_km\": gaussian(18042.080, 17983.417),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1280.425, 1174.582),\n     \"Inclination_radians\": gaussian(2.319, 5.459),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.135, 0.081, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.068, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3625.732, 1508.870),\n     \"Apogee_km\": gaussian(35714.669, 1469.690),\n     \"Perigee_km\": gaussian(35700.635, 1433.166),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.749, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1432.166, 56.617),\n     \"Inclination_radians\": gaussian(0.021, 0.086),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.116, 0.652, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.334, 0.016, 0.016, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.202, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.744, 49.376),\n     \"Apogee_km\": gaussian(777.743, 8.628),\n     \"Perigee_km\": gaussian(774.043, 11.322),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.371, 0.159),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(500.684, 186.762),\n     \"Apogee_km\": gaussian(1423.457, 86.571),\n     \"Perigee_km\": gaussian(1404.084, 100.218),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.138, 1.570),\n     \"Inclination_radians\": gaussian(1.036, 0.247),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1671.154, 578.450),\n     \"Apogee_km\": gaussian(19950.792, 2044.884),\n     \"Perigee_km\": gaussian(19743.920, 2072.781),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(706.650, 72.501),\n     \"Inclination_radians\": gaussian(1.046, 0.103),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.851, 0.792),\n     \"Apogee_km\": gaussian(694.285, 8.039),\n     \"Perigee_km\": gaussian(675.536, 2.029),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.717, 0.896),\n     \"Inclination_radians\": gaussian(1.711, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(584.311, 916.747),\n     \"Apogee_km\": gaussian(699.287, 77.408),\n     \"Perigee_km\": gaussian(660.970, 78.607),\n     \"Type_of_Orbit\": categorical([0.891, 0.011, 0.054, 0.011, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.007, 0.007, 0.007, 0.036, 0.007, 0.050, 0.022, 0.007, 0.014, 0.007, 0.014, 0.014, 0.043, 0.007, 0.187, 0.007, 0.007, 0.094, 0.007, 0.007, 0.007, 0.014, 0.007, 0.014, 0.007, 0.108, 0.014, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.094, 0.007, 0.014, 0.022, 0.007, 0.007, 0.022, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.417, 1.398),\n     \"Inclination_radians\": gaussian(1.711, 0.012),\n     \"Users\": categorical([0.009, 0.027, 0.027, 0.018, 0.009, 0.009, 0.009, 0.387, 0.126, 0.009, 0.018, 0.009, 0.036, 0.234, 0.009, 0.009, 0.018, 0.036]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.085, 0.051, 0.008, 0.153, 0.076, 0.008, 0.025, 0.008, 0.110, 0.008, 0.008, 0.008, 0.059, 0.161, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.068, 0.008, 0.068, 0.017])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(496.213, 553.120),\n     \"Apogee_km\": gaussian(524.536, 52.521),\n     \"Perigee_km\": gaussian(504.907, 46.945),\n     \"Type_of_Orbit\": categorical([0.615, 0.038, 0.115, 0.115, 0.038, 0.038, 0.038]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.200, 0.025, 0.013, 0.075, 0.013, 0.038, 0.013, 0.088, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.050, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.983, 1.135),\n     \"Inclination_radians\": gaussian(1.251, 0.475),\n     \"Users\": categorical([0.019, 0.077, 0.038, 0.038, 0.019, 0.019, 0.058, 0.269, 0.096, 0.019, 0.019, 0.038, 0.019, 0.192, 0.019, 0.019, 0.019, 0.019]),\n     \"Class_of_Orbit\": categorical([0.921, 0.026, 0.026, 0.026]),\n     \"Launch_Site\": categorical([0.153, 0.017, 0.017, 0.034, 0.068, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.085, 0.102, 0.034, 0.034, 0.017, 0.034, 0.051, 0.017, 0.017, 0.068, 0.068, 0.017, 0.051, 0.017])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3130.911, 5570.704),\n     \"Apogee_km\": gaussian(882.393, 211.092),\n     \"Perigee_km\": gaussian(651.754, 236.831),\n     \"Type_of_Orbit\": categorical([0.587, 0.022, 0.109, 0.217, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.009, 0.080, 0.009, 0.053, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.044, 0.009, 0.159, 0.018, 0.009, 0.071, 0.009, 0.009, 0.009, 0.115, 0.009, 0.018, 0.009, 0.035, 0.009, 0.027, 0.009, 0.018, 0.035, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.176, 3.136),\n     \"Inclination_radians\": gaussian(1.445, 0.519),\n     \"Users\": categorical([0.012, 0.094, 0.282, 0.012, 0.012, 0.047, 0.012, 0.176, 0.106, 0.012, 0.012, 0.035, 0.024, 0.118, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.915, 0.014, 0.056, 0.014]),\n     \"Launch_Site\": categorical([0.120, 0.022, 0.022, 0.446, 0.033, 0.022, 0.054, 0.011, 0.033, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.043, 0.022, 0.011, 0.011, 0.022])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.932, 0.053, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.686, 0.251)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.081, 0.077, 0.415, 0.093, 0.006, 0.126, 0.024, 0.100, 0.029, 0.036, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(489.533, 187.619),\n     \"Apogee_km\": gaussian(1423.699, 84.840),\n     \"Perigee_km\": gaussian(1399.154, 99.462),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.254, 1.562),\n     \"Inclination_radians\": gaussian(1.047, 0.254),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.256, 16.371),\n     \"Apogee_km\": gaussian(730.551, 95.659),\n     \"Perigee_km\": gaussian(586.992, 85.427),\n     \"Type_of_Orbit\": categorical([0.826, 0.022, 0.022, 0.065, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.040, 0.010, 0.070, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.080, 0.010, 0.360, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.912, 1.016),\n     \"Inclination_radians\": gaussian(1.677, 0.285),\n     \"Users\": categorical([0.014, 0.014, 0.028, 0.014, 0.014, 0.042, 0.014, 0.069, 0.264, 0.014, 0.028, 0.014, 0.014, 0.403, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.127, 0.025, 0.013, 0.165, 0.013, 0.025, 0.025, 0.013, 0.089, 0.013, 0.013, 0.013, 0.038, 0.228, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.051, 0.013, 0.038, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3690.104, 1493.829),\n     \"Apogee_km\": gaussian(35756.858, 1487.214),\n     \"Perigee_km\": gaussian(35644.048, 1502.210),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1432.856, 58.265),\n     \"Inclination_radians\": gaussian(0.012, 0.083),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1659.005, 571.014),\n     \"Apogee_km\": gaussian(19913.744, 1954.217),\n     \"Perigee_km\": gaussian(19859.964, 2053.490),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(704.373, 67.933),\n     \"Inclination_radians\": gaussian(1.041, 0.105),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.980, 0.649),\n     \"Apogee_km\": gaussian(694.563, 9.077),\n     \"Perigee_km\": gaussian(675.716, 1.557),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.626, 0.705),\n     \"Inclination_radians\": gaussian(1.710, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1123.032, 1159.189),\n     \"Apogee_km\": gaussian(688.331, 120.736),\n     \"Perigee_km\": gaussian(672.799, 126.793),\n     \"Type_of_Orbit\": categorical([0.845, 0.012, 0.095, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.067, 0.007, 0.030, 0.007, 0.007, 0.022, 0.007, 0.015, 0.007, 0.007, 0.015, 0.015, 0.007, 0.060, 0.015, 0.007, 0.149, 0.007, 0.007, 0.007, 0.075, 0.007, 0.015, 0.007, 0.112, 0.015, 0.030, 0.015, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.097, 0.007, 0.015, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.216, 2.552),\n     \"Inclination_radians\": gaussian(1.713, 0.014),\n     \"Users\": categorical([0.009, 0.057, 0.113, 0.019, 0.009, 0.009, 0.028, 0.509, 0.028, 0.009, 0.009, 0.028, 0.038, 0.057, 0.009, 0.009, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.097, 0.053, 0.009, 0.239, 0.115, 0.009, 0.035, 0.009, 0.062, 0.009, 0.009, 0.009, 0.097, 0.018, 0.018, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.053, 0.009, 0.062, 0.018])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(701.225, 1172.602),\n     \"Apogee_km\": gaussian(523.571, 64.953),\n     \"Perigee_km\": gaussian(502.874, 57.515),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.231, 0.231, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.143, 0.016, 0.016, 0.016, 0.016, 0.048, 0.016, 0.032, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(94.844, 1.428),\n     \"Inclination_radians\": gaussian(0.912, 0.428),\n     \"Users\": categorical([0.029, 0.086, 0.057, 0.057, 0.029, 0.029, 0.029, 0.143, 0.114, 0.029, 0.029, 0.029, 0.029, 0.200, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.857, 0.048, 0.048, 0.048]),\n     \"Launch_Site\": categorical([0.095, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.119, 0.024, 0.048, 0.048, 0.024, 0.048, 0.024, 0.024, 0.024, 0.119, 0.071, 0.024, 0.048, 0.024])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.791, 48.763),\n     \"Apogee_km\": gaussian(777.086, 8.549),\n     \"Perigee_km\": gaussian(774.042, 10.998),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.356, 0.154),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2886.007, 1538.696),\n     \"Apogee_km\": gaussian(79123.789, 98097.848),\n     \"Perigee_km\": gaussian(18455.148, 17555.622),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.091, 0.015, 0.015, 0.091, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.076, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.061, 0.015]),\n     \"Period_minutes\": gaussian(1239.737, 1188.379),\n     \"Inclination_radians\": gaussian(2.070, 5.423),\n     \"Users\": categorical([0.026, 0.026, 0.342, 0.026, 0.026, 0.026, 0.026, 0.158, 0.079, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026]),\n     \"Class_of_Orbit\": categorical([0.042, 0.458, 0.458, 0.042]),\n     \"Launch_Site\": categorical([0.044, 0.022, 0.022, 0.067, 0.022, 0.022, 0.067, 0.022, 0.044, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.133, 0.044, 0.111, 0.089, 0.022, 0.022, 0.044])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(298.625, 314.426),\n     \"Apogee_km\": gaussian(1004.674, 243.920),\n     \"Perigee_km\": gaussian(718.714, 268.519),\n     \"Type_of_Orbit\": categorical([0.444, 0.056, 0.111, 0.222, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.056, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.113, 0.028, 0.014, 0.085, 0.014, 0.014, 0.014, 0.056, 0.014, 0.014, 0.014, 0.056, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(102.158, 2.998),\n     \"Inclination_radians\": gaussian(1.236, 0.618),\n     \"Users\": categorical([0.023, 0.140, 0.116, 0.023, 0.023, 0.047, 0.023, 0.186, 0.070, 0.023, 0.023, 0.047, 0.047, 0.116, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.793, 0.034, 0.138, 0.034]),\n     \"Launch_Site\": categorical([0.120, 0.020, 0.040, 0.280, 0.040, 0.020, 0.060, 0.020, 0.060, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(14368.744, 5700.539),\n     \"Apogee_km\": gaussian(844.893, 186.913),\n     \"Perigee_km\": gaussian(519.868, 278.646),\n     \"Type_of_Orbit\": categorical([0.412, 0.059, 0.059, 0.294, 0.059, 0.059, 0.059]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.125, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.071, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(98.278, 2.349),\n     \"Inclination_radians\": gaussian(1.291, 0.444),\n     \"Users\": categorical([0.036, 0.036, 0.357, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036]),\n     \"Class_of_Orbit\": categorical([0.786, 0.071, 0.071, 0.071]),\n     \"Launch_Site\": categorical([0.029, 0.029, 0.029, 0.229, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.086, 0.057, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.047, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.709, 0.251)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.415, 0.081, 0.190, 0.093, 0.006, 0.106, 0.041, 0.027, 0.040, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3577.383, 1513.187),\n     \"Apogee_km\": gaussian(35710.152, 1415.249),\n     \"Perigee_km\": gaussian(35705.664, 1452.323),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1432.748, 56.240),\n     \"Inclination_radians\": gaussian(0.015, 0.084),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(15.154, 24.397),\n     \"Apogee_km\": gaussian(727.297, 100.935),\n     \"Perigee_km\": gaussian(592.255, 89.961),\n     \"Type_of_Orbit\": categorical([0.875, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.029, 0.010, 0.068, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.058, 0.010, 0.359, 0.010, 0.010, 0.058, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(98.010, 1.214),\n     \"Inclination_radians\": gaussian(1.622, 0.291),\n     \"Users\": categorical([0.013, 0.093, 0.027, 0.013, 0.013, 0.040, 0.013, 0.067, 0.213, 0.013, 0.027, 0.013, 0.013, 0.387, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.098, 0.024, 0.012, 0.220, 0.012, 0.024, 0.024, 0.012, 0.098, 0.012, 0.012, 0.012, 0.037, 0.207, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.037, 0.012, 0.049, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(600.496, 148.941),\n     \"Apogee_km\": gaussian(1062.472, 322.984),\n     \"Perigee_km\": gaussian(1034.486, 317.089),\n     \"Type_of_Orbit\": categorical([0.007, 0.007, 0.533, 0.430, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.726, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(106.521, 6.822),\n     \"Inclination_radians\": gaussian(1.279, 0.283),\n     \"Users\": categorical([0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.026, 0.331, 0.007, 0.007, 0.007, 0.477, 0.013, 0.007, 0.007, 0.060, 0.007]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.367, 0.006, 0.006, 0.310, 0.063, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.051, 0.082, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1695.734, 576.410),\n     \"Apogee_km\": gaussian(19788.700, 2014.181),\n     \"Perigee_km\": gaussian(19774.729, 2013.937),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(704.191, 71.147),\n     \"Inclination_radians\": gaussian(1.044, 0.103),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.993, 0.613),\n     \"Apogee_km\": gaussian(694.554, 8.349),\n     \"Perigee_km\": gaussian(675.824, 1.533),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.463, 0.544),\n     \"Inclination_radians\": gaussian(1.717, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1198.233, 1197.674),\n     \"Apogee_km\": gaussian(724.971, 93.047),\n     \"Perigee_km\": gaussian(708.175, 94.387),\n     \"Type_of_Orbit\": categorical([0.827, 0.013, 0.107, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.075, 0.008, 0.025, 0.008, 0.008, 0.025, 0.008, 0.017, 0.008, 0.008, 0.017, 0.033, 0.008, 0.042, 0.008, 0.008, 0.117, 0.008, 0.008, 0.008, 0.042, 0.008, 0.017, 0.008, 0.125, 0.017, 0.033, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.108, 0.008, 0.017, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(99.210, 1.842),\n     \"Inclination_radians\": gaussian(1.716, 0.014),\n     \"Users\": categorical([0.011, 0.043, 0.130, 0.022, 0.011, 0.011, 0.011, 0.467, 0.043, 0.011, 0.011, 0.022, 0.043, 0.076, 0.011, 0.011, 0.022, 0.043]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.101, 0.051, 0.010, 0.263, 0.101, 0.010, 0.040, 0.010, 0.061, 0.010, 0.010, 0.010, 0.061, 0.030, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.071, 0.010, 0.051, 0.020])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(570.695, 548.282),\n     \"Apogee_km\": gaussian(510.124, 48.770),\n     \"Perigee_km\": gaussian(497.944, 42.045),\n     \"Type_of_Orbit\": categorical([0.565, 0.043, 0.130, 0.130, 0.043, 0.043, 0.043]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.147, 0.027, 0.013, 0.080, 0.013, 0.040, 0.013, 0.093, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(94.741, 0.956),\n     \"Inclination_radians\": gaussian(1.302, 0.514),\n     \"Users\": categorical([0.021, 0.085, 0.043, 0.043, 0.021, 0.021, 0.064, 0.298, 0.085, 0.021, 0.021, 0.043, 0.021, 0.128, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.909, 0.030, 0.030, 0.030]),\n     \"Launch_Site\": categorical([0.093, 0.019, 0.019, 0.037, 0.074, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.093, 0.111, 0.037, 0.037, 0.019, 0.037, 0.056, 0.019, 0.019, 0.074, 0.056, 0.019, 0.056, 0.019])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2710.875, 1524.942),\n     \"Apogee_km\": gaussian(81262.810, 105341.532),\n     \"Perigee_km\": gaussian(17930.506, 17612.289),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1267.034, 1220.355),\n     \"Inclination_radians\": gaussian(0.820, 0.525),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.162, 0.054, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045, 0.023, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6839.822, 7705.207),\n     \"Apogee_km\": gaussian(971.627, 309.946),\n     \"Perigee_km\": gaussian(637.766, 345.981),\n     \"Type_of_Orbit\": categorical([0.500, 0.050, 0.050, 0.250, 0.050, 0.050, 0.050]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.027, 0.014, 0.108, 0.027, 0.014, 0.027, 0.014, 0.014, 0.014, 0.135, 0.014, 0.027, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(101.036, 5.118),\n     \"Inclination_radians\": gaussian(1.254, 0.608),\n     \"Users\": categorical([0.022, 0.022, 0.304, 0.022, 0.022, 0.043, 0.022, 0.196, 0.022, 0.022, 0.022, 0.043, 0.022, 0.130, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.813, 0.031, 0.125, 0.031]),\n     \"Launch_Site\": categorical([0.057, 0.038, 0.038, 0.302, 0.019, 0.019, 0.057, 0.019, 0.057, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.075, 0.038, 0.019, 0.019, 0.038])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3512.947, 8118.687),\n     \"Apogee_km\": gaussian(26941.050, 47551.930),\n     \"Perigee_km\": gaussian(21968.052, 39006.301),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(919.432, 1715.215),\n     \"Inclination_radians\": gaussian(17.430, 28.991),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.939, 0.046, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.039, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.639, 0.323)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.128, 0.094, 0.415, 0.100, 0.093, 0.006, 0.027, 0.081, 0.054, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1048.080, 1108.749),\n     \"Apogee_km\": gaussian(692.117, 129.685),\n     \"Perigee_km\": gaussian(680.786, 130.817),\n     \"Type_of_Orbit\": categorical([0.826, 0.012, 0.116, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.066, 0.007, 0.029, 0.007, 0.007, 0.022, 0.007, 0.015, 0.007, 0.007, 0.015, 0.015, 0.007, 0.059, 0.022, 0.007, 0.140, 0.007, 0.007, 0.007, 0.074, 0.007, 0.015, 0.007, 0.118, 0.015, 0.029, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.110, 0.007, 0.015, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.511, 2.676),\n     \"Inclination_radians\": gaussian(1.707, 0.038),\n     \"Users\": categorical([0.009, 0.046, 0.111, 0.019, 0.009, 0.009, 0.028, 0.500, 0.028, 0.009, 0.009, 0.037, 0.046, 0.065, 0.009, 0.009, 0.019, 0.037]),\n     \"Class_of_Orbit\": categorical([0.968, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.113, 0.043, 0.009, 0.235, 0.122, 0.009, 0.035, 0.009, 0.052, 0.009, 0.009, 0.009, 0.096, 0.017, 0.017, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.070, 0.009, 0.052, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(9.549, 16.959),\n     \"Apogee_km\": gaussian(712.087, 119.477),\n     \"Perigee_km\": gaussian(580.114, 90.730),\n     \"Type_of_Orbit\": categorical([0.824, 0.020, 0.039, 0.059, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.045, 0.009, 0.063, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.071, 0.009, 0.384, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.018, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.649, 1.504),\n     \"Inclination_radians\": gaussian(1.524, 0.466),\n     \"Users\": categorical([0.012, 0.036, 0.024, 0.024, 0.012, 0.036, 0.012, 0.083, 0.238, 0.012, 0.024, 0.012, 0.012, 0.417, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.132, 0.022, 0.011, 0.154, 0.011, 0.022, 0.022, 0.011, 0.099, 0.011, 0.011, 0.055, 0.033, 0.198, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.022, 0.044, 0.011, 0.044, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3592.990, 1554.641),\n     \"Apogee_km\": gaussian(35750.032, 1473.009),\n     \"Perigee_km\": gaussian(35762.919, 1440.505),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.018, 0.024, 0.003, 0.751, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.018, 0.009, 0.003, 0.009, 0.006, 0.003, 0.006, 0.003, 0.012, 0.003, 0.012, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.015, 0.003]),\n     \"Period_minutes\": gaussian(1430.100, 57.165),\n     \"Inclination_radians\": gaussian(0.015, 0.082),\n     \"Users\": categorical([0.003, 0.016, 0.129, 0.003, 0.010, 0.003, 0.023, 0.113, 0.654, 0.003, 0.003, 0.006, 0.003, 0.006, 0.003, 0.003, 0.013, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.990, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.335, 0.016, 0.013, 0.006, 0.003, 0.003, 0.019, 0.003, 0.003, 0.003, 0.003, 0.003, 0.060, 0.003, 0.203, 0.003, 0.054, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.471, 47.937),\n     \"Apogee_km\": gaussian(777.030, 8.200),\n     \"Perigee_km\": gaussian(773.905, 11.146),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.367, 0.142),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1690.165, 562.273),\n     \"Apogee_km\": gaussian(19829.048, 2084.159),\n     \"Perigee_km\": gaussian(19759.594, 2001.050),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.595, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(704.411, 68.511),\n     \"Inclination_radians\": gaussian(1.054, 0.107),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.012, 0.687, 0.012, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.957]),\n     \"Launch_Site\": categorical([0.311, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.067, 0.011, 0.289, 0.056, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.884, 0.826),\n     \"Apogee_km\": gaussian(694.398, 10.609),\n     \"Perigee_km\": gaussian(675.714, 1.891),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.621, 0.818),\n     \"Inclination_radians\": gaussian(1.715, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2796.196, 1483.448),\n     \"Apogee_km\": gaussian(78768.158, 99493.118),\n     \"Perigee_km\": gaussian(19087.939, 17815.316),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.092, 0.015, 0.015, 0.077, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.077, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.062, 0.015]),\n     \"Period_minutes\": gaussian(1261.319, 1186.680),\n     \"Inclination_radians\": gaussian(0.810, 0.497),\n     \"Users\": categorical([0.027, 0.027, 0.351, 0.027, 0.027, 0.027, 0.027, 0.162, 0.054, 0.027, 0.027, 0.027, 0.027, 0.054, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.435, 0.478, 0.043]),\n     \"Launch_Site\": categorical([0.045, 0.023, 0.023, 0.068, 0.023, 0.023, 0.045, 0.023, 0.045, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.045, 0.114, 0.091, 0.023, 0.023, 0.045])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(500.482, 184.972),\n     \"Apogee_km\": gaussian(1427.104, 88.092),\n     \"Perigee_km\": gaussian(1403.414, 101.070),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.280, 1.649),\n     \"Inclination_radians\": gaussian(1.032, 0.249),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5430.526, 7665.541),\n     \"Apogee_km\": gaussian(871.603, 300.041),\n     \"Perigee_km\": gaussian(612.493, 282.787),\n     \"Type_of_Orbit\": categorical([0.444, 0.037, 0.037, 0.370, 0.037, 0.037, 0.037]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.107, 0.012, 0.012, 0.083, 0.012, 0.036, 0.012, 0.131, 0.012, 0.036, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.048, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(99.579, 3.980),\n     \"Inclination_radians\": gaussian(1.145, 0.524),\n     \"Users\": categorical([0.018, 0.125, 0.268, 0.018, 0.018, 0.036, 0.018, 0.196, 0.089, 0.018, 0.018, 0.018, 0.018, 0.071, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.857, 0.024, 0.095, 0.024]),\n     \"Launch_Site\": categorical([0.079, 0.032, 0.032, 0.317, 0.016, 0.016, 0.048, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.032, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.032, 0.016, 0.032, 0.032])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2908.973, 6872.881),\n     \"Apogee_km\": gaussian(24356.144, 45307.421),\n     \"Perigee_km\": gaussian(24915.017, 48614.335),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(986.011, 1596.700),\n     \"Inclination_radians\": gaussian(17.591, 32.442),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.934, 0.050, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.699, 0.240)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.003, 0.004, 0.003, 0.001, 0.009, 0.003, 0.001, 0.009, 0.004, 0.003, 0.015, 0.004, 0.001, 0.003, 0.006, 0.001, 0.003, 0.006, 0.003, 0.003, 0.003, 0.001, 0.004, 0.003, 0.001, 0.001, 0.017, 0.001, 0.004, 0.060, 0.008, 0.003, 0.001, 0.003, 0.001, 0.042, 0.001, 0.003, 0.003, 0.001, 0.003, 0.085, 0.010, 0.006, 0.003, 0.001, 0.001, 0.059, 0.003, 0.003, 0.009, 0.001, 0.003, 0.005, 0.004, 0.001, 0.023, 0.001, 0.005, 0.001, 0.013, 0.010, 0.004, 0.426, 0.001, 0.001, 0.003, 0.001, 0.006, 0.003, 0.031, 0.001, 0.001, 0.003, 0.004, 0.003, 0.009, 0.001, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.087, 0.396, 0.071, 0.087, 0.005, 0.169, 0.137, 0.025, 0.015, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.957, 48.403),\n     \"Apogee_km\": gaussian(777.052, 8.669),\n     \"Perigee_km\": gaussian(773.851, 11.290),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.148),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3587.785, 1528.072),\n     \"Apogee_km\": gaussian(35717.606, 1370.005),\n     \"Perigee_km\": gaussian(35659.184, 1399.555),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1434.043, 54.248),\n     \"Inclination_radians\": gaussian(0.014, 0.079),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(499.631, 191.556),\n     \"Apogee_km\": gaussian(1425.765, 85.405),\n     \"Perigee_km\": gaussian(1404.821, 104.802),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.108, 1.605),\n     \"Inclination_radians\": gaussian(1.021, 0.251),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1672.713, 437.739),\n     \"Apogee_km\": gaussian(19856.453, 1904.782),\n     \"Perigee_km\": gaussian(19842.947, 1860.477),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(705.559, 68.157),\n     \"Inclination_radians\": gaussian(1.036, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.727, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.959]),\n     \"Launch_Site\": categorical([0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.042, 0.011, 0.347, 0.053, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.954, 0.640),\n     \"Apogee_km\": gaussian(694.349, 9.837),\n     \"Perigee_km\": gaussian(675.812, 1.751),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.666, 0.907),\n     \"Inclination_radians\": gaussian(1.710, 0.055),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(801.075, 1041.425),\n     \"Apogee_km\": gaussian(702.332, 106.503),\n     \"Perigee_km\": gaussian(669.219, 104.801),\n     \"Type_of_Orbit\": categorical([0.891, 0.008, 0.070, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.061, 0.006, 0.028, 0.006, 0.039, 0.017, 0.006, 0.011, 0.006, 0.011, 0.011, 0.033, 0.006, 0.166, 0.011, 0.006, 0.110, 0.006, 0.006, 0.006, 0.055, 0.006, 0.011, 0.006, 0.088, 0.011, 0.039, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.083, 0.006, 0.011, 0.022, 0.006, 0.011, 0.017, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.449, 2.189),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.007, 0.039, 0.078, 0.013, 0.007, 0.007, 0.020, 0.451, 0.092, 0.007, 0.013, 0.020, 0.026, 0.170, 0.007, 0.007, 0.013, 0.026]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.094, 0.038, 0.006, 0.206, 0.081, 0.006, 0.038, 0.006, 0.088, 0.006, 0.006, 0.006, 0.081, 0.138, 0.013, 0.006, 0.006, 0.025, 0.006, 0.006, 0.006, 0.050, 0.006, 0.063, 0.013])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(251.075, 352.409),\n     \"Apogee_km\": gaussian(772.414, 229.520),\n     \"Perigee_km\": gaussian(654.426, 205.921),\n     \"Type_of_Orbit\": categorical([0.280, 0.013, 0.053, 0.600, 0.013, 0.027, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.205, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.038, 0.006, 0.231, 0.013, 0.071, 0.045, 0.006, 0.026, 0.006, 0.038, 0.026, 0.013, 0.006, 0.026, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.038, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(99.143, 3.697),\n     \"Inclination_radians\": gaussian(1.135, 0.572),\n     \"Users\": categorical([0.008, 0.063, 0.195, 0.016, 0.008, 0.039, 0.008, 0.125, 0.305, 0.008, 0.008, 0.016, 0.016, 0.148, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.947, 0.009, 0.035, 0.009]),\n     \"Launch_Site\": categorical([0.104, 0.015, 0.015, 0.200, 0.015, 0.030, 0.022, 0.007, 0.022, 0.007, 0.030, 0.274, 0.007, 0.015, 0.015, 0.007, 0.015, 0.007, 0.007, 0.015, 0.030, 0.104, 0.007, 0.015, 0.015])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2390.101, 1350.525),\n     \"Apogee_km\": gaussian(27417.650, 14048.280),\n     \"Perigee_km\": gaussian(17737.653, 15977.042),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.121, 0.015, 0.015, 0.121, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.061, 0.015]),\n     \"Period_minutes\": gaussian(734.610, 553.184),\n     \"Inclination_radians\": gaussian(0.753, 0.554),\n     \"Users\": categorical([0.026, 0.026, 0.395, 0.026, 0.026, 0.026, 0.026, 0.053, 0.132, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026]),\n     \"Class_of_Orbit\": categorical([0.042, 0.375, 0.292, 0.292]),\n     \"Launch_Site\": categorical([0.022, 0.022, 0.022, 0.067, 0.022, 0.022, 0.111, 0.022, 0.044, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.178, 0.022, 0.067, 0.089, 0.022, 0.022, 0.044])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(12975.625, 6310.025),\n     \"Apogee_km\": gaussian(813.575, 193.432),\n     \"Perigee_km\": gaussian(537.309, 258.960),\n     \"Type_of_Orbit\": categorical([0.444, 0.056, 0.056, 0.278, 0.056, 0.056, 0.056]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.138, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.069, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(98.342, 2.431),\n     \"Inclination_radians\": gaussian(1.265, 0.507),\n     \"Users\": categorical([0.033, 0.033, 0.367, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033]),\n     \"Class_of_Orbit\": categorical([0.813, 0.063, 0.063, 0.063]),\n     \"Launch_Site\": categorical([0.027, 0.027, 0.027, 0.216, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.108, 0.081, 0.027, 0.027, 0.027])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2983.940, 2294.671),\n     \"Apogee_km\": gaussian(167529.775, 142723.536),\n     \"Perigee_km\": gaussian(15414.583, 17248.448),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.058, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(2007.481, 1781.512),\n     \"Inclination_radians\": gaussian(4.749, 10.088),\n     \"Users\": categorical([0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.208, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.100, 0.300, 0.500, 0.100]),\n     \"Launch_Site\": categorical([0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.097, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.928, 0.059, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.703, 0.261)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.090, 0.087, 0.396, 0.071, 0.005, 0.169, 0.119, 0.029, 0.034, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1749.199, 566.026),\n     \"Apogee_km\": gaussian(19895.943, 1923.008),\n     \"Perigee_km\": gaussian(19842.892, 1940.847),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.766, 68.788),\n     \"Inclination_radians\": gaussian(1.040, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.953, 49.459),\n     \"Apogee_km\": gaussian(777.038, 8.837),\n     \"Perigee_km\": gaussian(773.347, 10.924),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.163),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3599.838, 1489.802),\n     \"Apogee_km\": gaussian(35733.477, 1384.820),\n     \"Perigee_km\": gaussian(35634.109, 1405.826),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.130, 53.805),\n     \"Inclination_radians\": gaussian(0.015, 0.078),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(498.277, 199.826),\n     \"Apogee_km\": gaussian(1431.261, 88.020),\n     \"Perigee_km\": gaussian(1406.319, 102.161),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.197, 1.568),\n     \"Inclination_radians\": gaussian(1.028, 0.243),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.912, 0.733),\n     \"Apogee_km\": gaussian(694.314, 8.555),\n     \"Perigee_km\": gaussian(675.795, 1.640),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.705, 0.827),\n     \"Inclination_radians\": gaussian(1.712, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(750.378, 1103.479),\n     \"Apogee_km\": gaussian(701.930, 108.389),\n     \"Perigee_km\": gaussian(670.532, 100.746),\n     \"Type_of_Orbit\": categorical([0.891, 0.008, 0.070, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.061, 0.006, 0.028, 0.006, 0.039, 0.017, 0.006, 0.011, 0.006, 0.011, 0.011, 0.033, 0.006, 0.166, 0.011, 0.006, 0.110, 0.006, 0.006, 0.006, 0.055, 0.006, 0.011, 0.006, 0.088, 0.011, 0.039, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.083, 0.006, 0.011, 0.022, 0.006, 0.011, 0.017, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.367, 2.150),\n     \"Inclination_radians\": gaussian(1.713, 0.012),\n     \"Users\": categorical([0.007, 0.039, 0.078, 0.013, 0.007, 0.007, 0.020, 0.451, 0.092, 0.007, 0.013, 0.020, 0.026, 0.170, 0.007, 0.007, 0.013, 0.026]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.094, 0.038, 0.006, 0.206, 0.081, 0.006, 0.038, 0.006, 0.088, 0.006, 0.006, 0.006, 0.081, 0.138, 0.013, 0.006, 0.006, 0.025, 0.006, 0.006, 0.006, 0.050, 0.006, 0.063, 0.013])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(134.938, 246.898),\n     \"Apogee_km\": gaussian(762.649, 222.015),\n     \"Perigee_km\": gaussian(604.708, 177.167),\n     \"Type_of_Orbit\": categorical([0.323, 0.015, 0.062, 0.538, 0.015, 0.031, 0.015]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.227, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.043, 0.007, 0.248, 0.014, 0.007, 0.050, 0.007, 0.028, 0.007, 0.014, 0.028, 0.014, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.043, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.469, 3.178),\n     \"Inclination_radians\": gaussian(1.106, 0.550),\n     \"Users\": categorical([0.009, 0.071, 0.097, 0.018, 0.009, 0.044, 0.009, 0.142, 0.336, 0.009, 0.009, 0.018, 0.018, 0.168, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.939, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.108, 0.017, 0.017, 0.200, 0.017, 0.033, 0.025, 0.008, 0.025, 0.008, 0.033, 0.308, 0.008, 0.008, 0.017, 0.008, 0.017, 0.008, 0.008, 0.017, 0.033, 0.033, 0.008, 0.017, 0.017])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2344.442, 1516.229),\n     \"Apogee_km\": gaussian(68489.834, 96300.723),\n     \"Perigee_km\": gaussian(17501.667, 16226.361),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1058.225, 1063.485),\n     \"Inclination_radians\": gaussian(0.684, 0.568),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6726.853, 7471.772),\n     \"Apogee_km\": gaussian(889.063, 207.799),\n     \"Perigee_km\": gaussian(747.578, 278.571),\n     \"Type_of_Orbit\": categorical([0.286, 0.036, 0.036, 0.536, 0.036, 0.036, 0.036]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.151, 0.014, 0.014, 0.014, 0.014, 0.164, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.055, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(101.229, 4.339),\n     \"Inclination_radians\": gaussian(1.448, 0.437),\n     \"Users\": categorical([0.022, 0.022, 0.556, 0.022, 0.022, 0.022, 0.022, 0.067, 0.044, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.903, 0.032, 0.032, 0.032]),\n     \"Launch_Site\": categorical([0.038, 0.019, 0.019, 0.212, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.077, 0.250, 0.019, 0.019, 0.019])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2789.461, 7090.039),\n     \"Apogee_km\": gaussian(26014.104, 41639.271),\n     \"Perigee_km\": gaussian(23212.402, 52219.785),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(996.453, 1468.227),\n     \"Inclination_radians\": gaussian(17.796, 26.804),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.056, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.682, 0.261)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.087, 0.396, 0.119, 0.071, 0.090, 0.005, 0.135, 0.029, 0.067, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(682.540, 49.484),\n     \"Apogee_km\": gaussian(777.363, 8.436),\n     \"Perigee_km\": gaussian(774.001, 10.907),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.354, 0.146),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3608.925, 1476.447),\n     \"Apogee_km\": gaussian(35787.699, 1454.070),\n     \"Perigee_km\": gaussian(35677.960, 1376.246),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1434.154, 54.300),\n     \"Inclination_radians\": gaussian(0.016, 0.081),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(23.828, 25.630),\n     \"Apogee_km\": gaussian(730.657, 120.298),\n     \"Perigee_km\": gaussian(636.364, 127.310),\n     \"Type_of_Orbit\": categorical([0.573, 0.012, 0.012, 0.366, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.220, 0.007, 0.050, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.050, 0.007, 0.284, 0.014, 0.007, 0.043, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.443, 2.134),\n     \"Inclination_radians\": gaussian(1.233, 0.523),\n     \"Users\": categorical([0.009, 0.080, 0.044, 0.018, 0.009, 0.035, 0.009, 0.062, 0.416, 0.009, 0.018, 0.009, 0.009, 0.230, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.108, 0.017, 0.008, 0.167, 0.008, 0.033, 0.017, 0.008, 0.042, 0.008, 0.008, 0.292, 0.008, 0.142, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.008, 0.025, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(508.324, 191.048),\n     \"Apogee_km\": gaussian(1427.187, 87.124),\n     \"Perigee_km\": gaussian(1405.951, 105.167),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.188, 1.583),\n     \"Inclination_radians\": gaussian(1.031, 0.247),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1731.404, 569.135),\n     \"Apogee_km\": gaussian(19964.351, 1968.962),\n     \"Perigee_km\": gaussian(19734.333, 1900.874),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.137, 68.807),\n     \"Inclination_radians\": gaussian(1.030, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.945, 0.397),\n     \"Apogee_km\": gaussian(693.985, 8.854),\n     \"Perigee_km\": gaussian(675.903, 1.477),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.686, 0.813),\n     \"Inclination_radians\": gaussian(1.714, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1023.444, 1092.557),\n     \"Apogee_km\": gaussian(693.805, 118.295),\n     \"Perigee_km\": gaussian(672.913, 115.762),\n     \"Type_of_Orbit\": categorical([0.863, 0.010, 0.088, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.071, 0.006, 0.019, 0.006, 0.006, 0.019, 0.006, 0.013, 0.006, 0.013, 0.006, 0.019, 0.006, 0.110, 0.006, 0.006, 0.136, 0.006, 0.006, 0.006, 0.065, 0.006, 0.013, 0.006, 0.104, 0.013, 0.045, 0.013, 0.013, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.097, 0.006, 0.013, 0.026, 0.006, 0.013, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.524, 2.415),\n     \"Inclination_radians\": gaussian(1.713, 0.014),\n     \"Users\": categorical([0.008, 0.032, 0.095, 0.016, 0.008, 0.008, 0.024, 0.548, 0.016, 0.008, 0.008, 0.024, 0.032, 0.111, 0.008, 0.008, 0.016, 0.032]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.075, 0.045, 0.008, 0.248, 0.098, 0.008, 0.038, 0.008, 0.083, 0.008, 0.008, 0.008, 0.098, 0.045, 0.015, 0.008, 0.008, 0.030, 0.008, 0.008, 0.008, 0.060, 0.008, 0.060, 0.015])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2393.047, 1577.670),\n     \"Apogee_km\": gaussian(70944.421, 94103.728),\n     \"Perigee_km\": gaussian(16340.015, 16498.326),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1138.722, 1131.674),\n     \"Inclination_radians\": gaussian(0.696, 0.568),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3424.982, 6329.318),\n     \"Apogee_km\": gaussian(848.524, 292.087),\n     \"Perigee_km\": gaussian(642.427, 279.552),\n     \"Type_of_Orbit\": categorical([0.237, 0.026, 0.105, 0.526, 0.026, 0.053, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.100, 0.020, 0.110, 0.010, 0.010, 0.030, 0.010, 0.130, 0.040, 0.030, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.802, 4.342),\n     \"Inclination_radians\": gaussian(1.276, 0.562),\n     \"Users\": categorical([0.014, 0.028, 0.431, 0.014, 0.014, 0.028, 0.014, 0.167, 0.069, 0.014, 0.014, 0.028, 0.028, 0.083, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.897, 0.017, 0.069, 0.017]),\n     \"Launch_Site\": categorical([0.089, 0.013, 0.025, 0.190, 0.025, 0.013, 0.038, 0.013, 0.025, 0.013, 0.051, 0.038, 0.013, 0.025, 0.025, 0.013, 0.013, 0.013, 0.013, 0.025, 0.076, 0.190, 0.013, 0.025, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3605.296, 9672.803),\n     \"Apogee_km\": gaussian(22628.381, 46743.427),\n     \"Perigee_km\": gaussian(21928.382, 44789.378),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(991.822, 1668.277),\n     \"Inclination_radians\": gaussian(18.166, 27.117),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.047, 0.014, 0.004, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.034, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.647, 0.301)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.017, 0.064)\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Eccentricity\": gaussian(0.007, 0.079)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.087, 0.396, 0.071, 0.167, 0.090, 0.005, 0.112, 0.029, 0.039, 0.001, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.655, 46.483),\n     \"Apogee_km\": gaussian(777.532, 8.233),\n     \"Perigee_km\": gaussian(773.761, 11.164),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.366, 0.162),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3611.970, 1488.404),\n     \"Apogee_km\": gaussian(35826.094, 1415.000),\n     \"Perigee_km\": gaussian(35655.529, 1405.835),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1434.866, 53.200),\n     \"Inclination_radians\": gaussian(0.015, 0.079),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(497.511, 184.415),\n     \"Apogee_km\": gaussian(1427.990, 85.916),\n     \"Perigee_km\": gaussian(1406.849, 100.476),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.250, 1.594),\n     \"Inclination_radians\": gaussian(1.035, 0.243),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(774.880, 1058.717),\n     \"Apogee_km\": gaussian(704.410, 102.329),\n     \"Perigee_km\": gaussian(666.150, 102.060),\n     \"Type_of_Orbit\": categorical([0.891, 0.008, 0.070, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.061, 0.006, 0.028, 0.006, 0.039, 0.017, 0.006, 0.011, 0.006, 0.011, 0.011, 0.033, 0.006, 0.167, 0.011, 0.006, 0.111, 0.006, 0.006, 0.006, 0.056, 0.006, 0.011, 0.006, 0.089, 0.011, 0.033, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.083, 0.006, 0.011, 0.022, 0.006, 0.011, 0.017, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.318, 2.053),\n     \"Inclination_radians\": gaussian(1.712, 0.012),\n     \"Users\": categorical([0.007, 0.039, 0.079, 0.013, 0.007, 0.007, 0.020, 0.447, 0.092, 0.007, 0.013, 0.020, 0.026, 0.171, 0.007, 0.007, 0.013, 0.026]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.094, 0.038, 0.006, 0.208, 0.075, 0.006, 0.038, 0.006, 0.088, 0.006, 0.006, 0.006, 0.082, 0.138, 0.013, 0.006, 0.006, 0.025, 0.006, 0.006, 0.006, 0.050, 0.006, 0.063, 0.013])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1720.125, 579.433),\n     \"Apogee_km\": gaussian(20000.412, 1877.925),\n     \"Perigee_km\": gaussian(19764.923, 1925.745),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.232, 67.415),\n     \"Inclination_radians\": gaussian(1.043, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.029, 0.654),\n     \"Apogee_km\": gaussian(693.925, 8.364),\n     \"Perigee_km\": gaussian(675.763, 1.520),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.638, 1.047),\n     \"Inclination_radians\": gaussian(1.713, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(110.759, 165.473),\n     \"Apogee_km\": gaussian(756.127, 230.215),\n     \"Perigee_km\": gaussian(617.413, 180.429),\n     \"Type_of_Orbit\": categorical([0.317, 0.016, 0.048, 0.556, 0.016, 0.032, 0.016]),\n     \"Purpose\": categorical([0.007, 0.007, 0.015, 0.228, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.044, 0.007, 0.250, 0.007, 0.007, 0.051, 0.007, 0.029, 0.007, 0.015, 0.029, 0.015, 0.007, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.037, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.225, 3.112),\n     \"Inclination_radians\": gaussian(1.082, 0.549),\n     \"Users\": categorical([0.009, 0.074, 0.102, 0.019, 0.009, 0.046, 0.009, 0.130, 0.343, 0.009, 0.009, 0.009, 0.009, 0.176, 0.019, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.936, 0.011, 0.043, 0.011]),\n     \"Launch_Site\": categorical([0.096, 0.017, 0.017, 0.209, 0.009, 0.035, 0.026, 0.009, 0.017, 0.009, 0.035, 0.322, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.017, 0.035, 0.035, 0.009, 0.017, 0.017])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2311.949, 1551.970),\n     \"Apogee_km\": gaussian(68791.728, 95155.795),\n     \"Perigee_km\": gaussian(17032.035, 16091.390),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1065.015, 1104.748),\n     \"Inclination_radians\": gaussian(0.656, 0.566),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5788.243, 7464.834),\n     \"Apogee_km\": gaussian(891.246, 194.596),\n     \"Perigee_km\": gaussian(772.079, 274.789),\n     \"Type_of_Orbit\": categorical([0.310, 0.034, 0.034, 0.517, 0.034, 0.034, 0.034]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.026, 0.143, 0.013, 0.013, 0.013, 0.013, 0.156, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.052, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(101.353, 4.120),\n     \"Inclination_radians\": gaussian(1.415, 0.446),\n     \"Users\": categorical([0.020, 0.020, 0.510, 0.020, 0.020, 0.020, 0.020, 0.102, 0.061, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.054, 0.018, 0.018, 0.196, 0.036, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.036, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.071, 0.232, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3281.595, 8655.938),\n     \"Apogee_km\": gaussian(25416.169, 40083.156),\n     \"Perigee_km\": gaussian(24326.354, 43268.041),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1014.502, 1346.981),\n     \"Inclination_radians\": gaussian(16.759, 25.538),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(594.649, 448.815),\n     \"Apogee_km\": gaussian(716.161, 11.603),\n     \"Perigee_km\": gaussian(702.687, 22.990),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.497, 1.283),\n     \"Inclination_radians\": gaussian(1.592, 0.147),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.934, 0.052, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.693, 0.251)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.090, 0.396, 0.086, 0.071, 0.005, 0.095, 0.087, 0.059, 0.029, 0.055, 0.026, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1719.612, 531.940),\n     \"Apogee_km\": gaussian(19920.240, 1959.497),\n     \"Perigee_km\": gaussian(19856.245, 1971.416),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.516, 68.823),\n     \"Inclination_radians\": gaussian(1.039, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3620.918, 1500.153),\n     \"Apogee_km\": gaussian(35839.198, 1444.699),\n     \"Perigee_km\": gaussian(35649.712, 1409.250),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1431.967, 53.341),\n     \"Inclination_radians\": gaussian(0.016, 0.080),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(37.074, 31.392),\n     \"Apogee_km\": gaussian(804.174, 49.994),\n     \"Perigee_km\": gaussian(696.145, 131.040),\n     \"Type_of_Orbit\": categorical([0.435, 0.016, 0.016, 0.484, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.009, 0.009, 0.017, 0.261, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.017, 0.052, 0.009, 0.165, 0.009, 0.009, 0.052, 0.009, 0.017, 0.009, 0.009, 0.009, 0.017, 0.009, 0.035, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.818, 1.372),\n     \"Inclination_radians\": gaussian(1.293, 0.526),\n     \"Users\": categorical([0.011, 0.069, 0.023, 0.011, 0.011, 0.046, 0.011, 0.149, 0.437, 0.011, 0.011, 0.011, 0.011, 0.138, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.074, 0.032, 0.011, 0.223, 0.021, 0.043, 0.011, 0.011, 0.021, 0.011, 0.011, 0.277, 0.011, 0.064, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.043, 0.011, 0.043, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(502.945, 195.564),\n     \"Apogee_km\": gaussian(1424.061, 87.186),\n     \"Perigee_km\": gaussian(1404.156, 104.250),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.271, 1.612),\n     \"Inclination_radians\": gaussian(1.032, 0.250),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.871, 0.834),\n     \"Apogee_km\": gaussian(694.334, 8.935),\n     \"Perigee_km\": gaussian(675.805, 1.394),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.627, 0.736),\n     \"Inclination_radians\": gaussian(1.714, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(729.539, 1099.293),\n     \"Apogee_km\": gaussian(671.904, 40.810),\n     \"Perigee_km\": gaussian(644.794, 41.822),\n     \"Type_of_Orbit\": categorical([0.873, 0.013, 0.063, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.033, 0.008, 0.057, 0.025, 0.008, 0.008, 0.008, 0.016, 0.008, 0.033, 0.008, 0.164, 0.008, 0.008, 0.107, 0.008, 0.008, 0.008, 0.033, 0.008, 0.008, 0.008, 0.107, 0.016, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.082, 0.008, 0.016, 0.033, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.899, 0.736),\n     \"Inclination_radians\": gaussian(1.710, 0.012),\n     \"Users\": categorical([0.011, 0.032, 0.053, 0.021, 0.011, 0.011, 0.011, 0.372, 0.096, 0.011, 0.021, 0.011, 0.032, 0.223, 0.011, 0.011, 0.021, 0.043]),\n     \"Class_of_Orbit\": categorical([0.963, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.059, 0.040, 0.010, 0.168, 0.040, 0.010, 0.059, 0.010, 0.129, 0.010, 0.010, 0.010, 0.069, 0.168, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.059, 0.020])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.349, 49.853),\n     \"Apogee_km\": gaussian(777.040, 8.698),\n     \"Perigee_km\": gaussian(773.370, 11.008),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.366, 0.166),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(422.917, 491.450),\n     \"Apogee_km\": gaussian(522.866, 56.804),\n     \"Perigee_km\": gaussian(497.764, 60.735),\n     \"Type_of_Orbit\": categorical([0.697, 0.030, 0.091, 0.091, 0.030, 0.030, 0.030]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.237, 0.022, 0.011, 0.065, 0.011, 0.032, 0.011, 0.086, 0.032, 0.022, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.054, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(94.999, 1.157),\n     \"Inclination_radians\": gaussian(1.224, 0.551),\n     \"Users\": categorical([0.015, 0.062, 0.138, 0.031, 0.015, 0.015, 0.046, 0.277, 0.077, 0.015, 0.015, 0.031, 0.031, 0.154, 0.031, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.941, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.125, 0.014, 0.014, 0.042, 0.056, 0.014, 0.014, 0.014, 0.014, 0.014, 0.042, 0.167, 0.083, 0.028, 0.042, 0.014, 0.028, 0.056, 0.014, 0.028, 0.056, 0.056, 0.014, 0.042, 0.014])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2418.038, 1564.450),\n     \"Apogee_km\": gaussian(68381.257, 98096.399),\n     \"Perigee_km\": gaussian(16432.047, 16109.116),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1049.104, 1143.094),\n     \"Inclination_radians\": gaussian(0.672, 0.562),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1365.936, 1143.656),\n     \"Apogee_km\": gaussian(910.339, 106.731),\n     \"Perigee_km\": gaussian(884.980, 95.166),\n     \"Type_of_Orbit\": categorical([0.455, 0.023, 0.136, 0.318, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.011, 0.122, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.022, 0.122, 0.033, 0.011, 0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.033, 0.011, 0.078, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.884, 2.030),\n     \"Inclination_radians\": gaussian(1.621, 0.268),\n     \"Users\": categorical([0.016, 0.048, 0.355, 0.016, 0.016, 0.016, 0.016, 0.274, 0.048, 0.016, 0.016, 0.048, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.938, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.130, 0.014, 0.014, 0.261, 0.101, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.174, 0.014, 0.014, 0.014])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8419.759, 8279.512),\n     \"Apogee_km\": gaussian(931.361, 340.265),\n     \"Perigee_km\": gaussian(484.935, 248.285),\n     \"Type_of_Orbit\": categorical([0.389, 0.056, 0.056, 0.278, 0.056, 0.111, 0.056]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.090, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.104, 0.030, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.060, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.045, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(98.872, 3.650),\n     \"Inclination_radians\": gaussian(1.251, 0.576),\n     \"Users\": categorical([0.026, 0.026, 0.308, 0.026, 0.026, 0.051, 0.026, 0.179, 0.026, 0.026, 0.026, 0.026, 0.026, 0.103, 0.026, 0.026, 0.026, 0.026]),\n     \"Class_of_Orbit\": categorical([0.760, 0.040, 0.160, 0.040]),\n     \"Launch_Site\": categorical([0.022, 0.043, 0.043, 0.239, 0.022, 0.022, 0.065, 0.022, 0.043, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.087, 0.043, 0.022, 0.022, 0.043])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3194.673, 8274.008),\n     \"Apogee_km\": gaussian(24416.245, 61773.061),\n     \"Perigee_km\": gaussian(25513.391, 55531.606),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1038.028, 1592.555),\n     \"Inclination_radians\": gaussian(16.722, 27.025),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.935, 0.051, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.713, 0.233)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.396, 0.122, 0.087, 0.090, 0.005, 0.016, 0.130, 0.014, 0.071, 0.069]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3677.083, 1431.790),\n     \"Apogee_km\": gaussian(35750.505, 1353.883),\n     \"Perigee_km\": gaussian(35589.768, 1371.921),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.435, 55.401),\n     \"Inclination_radians\": gaussian(0.017, 0.077),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(22.733, 25.132),\n     \"Apogee_km\": gaussian(732.554, 117.762),\n     \"Perigee_km\": gaussian(637.128, 129.473),\n     \"Type_of_Orbit\": categorical([0.583, 0.012, 0.012, 0.357, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.215, 0.007, 0.049, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.056, 0.007, 0.306, 0.007, 0.007, 0.042, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.418, 2.206),\n     \"Inclination_radians\": gaussian(1.259, 0.521),\n     \"Users\": categorical([0.009, 0.069, 0.043, 0.017, 0.009, 0.034, 0.009, 0.078, 0.397, 0.009, 0.009, 0.009, 0.009, 0.259, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.098, 0.016, 0.008, 0.163, 0.008, 0.033, 0.008, 0.008, 0.049, 0.008, 0.008, 0.285, 0.008, 0.154, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.016, 0.024, 0.008, 0.033, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.069, 52.458),\n     \"Apogee_km\": gaussian(776.943, 8.285),\n     \"Perigee_km\": gaussian(773.221, 11.510),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.368, 0.148),\n     \"Inclination_radians\": gaussian(1.510, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1728.239, 558.692),\n     \"Apogee_km\": gaussian(19904.972, 1923.016),\n     \"Perigee_km\": gaussian(19712.178, 1923.889),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.687, 69.107),\n     \"Inclination_radians\": gaussian(1.042, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.986, 0.592),\n     \"Apogee_km\": gaussian(693.602, 9.038),\n     \"Perigee_km\": gaussian(675.476, 2.387),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.657, 0.858),\n     \"Inclination_radians\": gaussian(1.713, 0.067),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2657.896, 1250.483),\n     \"Apogee_km\": gaussian(35755.393, 7910.005),\n     \"Perigee_km\": gaussian(21792.186, 18670.755),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.102, 0.017, 0.017, 0.068, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.068, 0.017]),\n     \"Period_minutes\": gaussian(935.076, 553.996),\n     \"Inclination_radians\": gaussian(0.924, 0.501),\n     \"Users\": categorical([0.032, 0.032, 0.419, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.529, 0.353, 0.059]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.053, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.158, 0.026, 0.079, 0.105, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1040.420, 1082.041),\n     \"Apogee_km\": gaussian(697.406, 114.439),\n     \"Perigee_km\": gaussian(683.705, 120.782),\n     \"Type_of_Orbit\": categorical([0.860, 0.010, 0.090, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.073, 0.007, 0.020, 0.007, 0.007, 0.020, 0.007, 0.013, 0.007, 0.013, 0.013, 0.013, 0.007, 0.087, 0.020, 0.007, 0.133, 0.007, 0.007, 0.007, 0.067, 0.007, 0.007, 0.007, 0.107, 0.013, 0.047, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.100, 0.007, 0.013, 0.027, 0.007, 0.013, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.585, 2.407),\n     \"Inclination_radians\": gaussian(1.713, 0.014),\n     \"Users\": categorical([0.008, 0.041, 0.098, 0.016, 0.008, 0.008, 0.025, 0.533, 0.025, 0.008, 0.016, 0.033, 0.033, 0.082, 0.008, 0.008, 0.016, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.093, 0.039, 0.008, 0.256, 0.101, 0.008, 0.047, 0.008, 0.078, 0.008, 0.008, 0.008, 0.101, 0.031, 0.016, 0.008, 0.008, 0.031, 0.008, 0.008, 0.008, 0.047, 0.008, 0.054, 0.016])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2229.100, 2136.067),\n     \"Apogee_km\": gaussian(100225.622, 134943.516),\n     \"Perigee_km\": gaussian(10667.860, 12938.752),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.123, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.088, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(1221.116, 1558.422),\n     \"Inclination_radians\": gaussian(2.750, 7.954),\n     \"Users\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.241, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034]),\n     \"Class_of_Orbit\": categorical([0.067, 0.200, 0.400, 0.333]),\n     \"Launch_Site\": categorical([0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.194, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.083, 0.028, 0.028, 0.028, 0.056])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(506.687, 195.076),\n     \"Apogee_km\": gaussian(1427.901, 84.755),\n     \"Perigee_km\": gaussian(1409.874, 104.933),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.174, 1.554),\n     \"Inclination_radians\": gaussian(1.048, 0.254),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3674.100, 6301.655),\n     \"Apogee_km\": gaussian(829.036, 291.095),\n     \"Perigee_km\": gaussian(647.194, 277.123),\n     \"Type_of_Orbit\": categorical([0.237, 0.026, 0.105, 0.526, 0.026, 0.053, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.099, 0.010, 0.109, 0.020, 0.010, 0.030, 0.010, 0.129, 0.040, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.562, 4.402),\n     \"Inclination_radians\": gaussian(1.282, 0.597),\n     \"Users\": categorical([0.014, 0.027, 0.425, 0.014, 0.014, 0.027, 0.014, 0.192, 0.068, 0.014, 0.014, 0.014, 0.027, 0.082, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.898, 0.017, 0.068, 0.017]),\n     \"Launch_Site\": categorical([0.075, 0.025, 0.025, 0.188, 0.025, 0.013, 0.038, 0.013, 0.025, 0.013, 0.050, 0.038, 0.013, 0.025, 0.025, 0.013, 0.013, 0.013, 0.013, 0.025, 0.075, 0.200, 0.013, 0.025, 0.025])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.934, 0.051, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.622, 0.337)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.057, 0.062, 0.396, 0.175, 0.090, 0.005, 0.144, 0.029, 0.041, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(426.422, 506.179),\n     \"Apogee_km\": gaussian(524.745, 54.431),\n     \"Perigee_km\": gaussian(500.660, 58.579),\n     \"Type_of_Orbit\": categorical([0.735, 0.029, 0.088, 0.059, 0.029, 0.029, 0.029]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.239, 0.022, 0.011, 0.065, 0.011, 0.022, 0.011, 0.098, 0.033, 0.022, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.043, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(94.930, 1.077),\n     \"Inclination_radians\": gaussian(1.204, 0.558),\n     \"Users\": categorical([0.016, 0.063, 0.141, 0.031, 0.016, 0.016, 0.047, 0.281, 0.078, 0.016, 0.016, 0.031, 0.031, 0.141, 0.031, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.940, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.113, 0.014, 0.014, 0.028, 0.070, 0.014, 0.014, 0.014, 0.014, 0.014, 0.042, 0.169, 0.099, 0.028, 0.042, 0.014, 0.028, 0.056, 0.014, 0.028, 0.056, 0.042, 0.014, 0.042, 0.014])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(33.224, 25.221),\n     \"Apogee_km\": gaussian(804.928, 51.291),\n     \"Perigee_km\": gaussian(685.357, 138.761),\n     \"Type_of_Orbit\": categorical([0.227, 0.023, 0.023, 0.659, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.010, 0.010, 0.021, 0.292, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.042, 0.010, 0.125, 0.010, 0.010, 0.063, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.714, 1.408),\n     \"Inclination_radians\": gaussian(1.136, 0.550),\n     \"Users\": categorical([0.015, 0.088, 0.029, 0.015, 0.015, 0.059, 0.015, 0.059, 0.485, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.944, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.040, 0.013, 0.013, 0.267, 0.013, 0.053, 0.013, 0.013, 0.027, 0.013, 0.013, 0.347, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3600.634, 1505.730),\n     \"Apogee_km\": gaussian(35790.276, 1384.725),\n     \"Perigee_km\": gaussian(35768.228, 1381.409),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.978, 54.850),\n     \"Inclination_radians\": gaussian(0.018, 0.081),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(627.827, 145.352),\n     \"Apogee_km\": gaussian(1040.200, 314.948),\n     \"Perigee_km\": gaussian(1041.639, 315.997),\n     \"Type_of_Orbit\": categorical([0.007, 0.007, 0.503, 0.462, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.694, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.059, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(105.882, 6.802),\n     \"Inclination_radians\": gaussian(1.320, 0.266),\n     \"Users\": categorical([0.013, 0.006, 0.070, 0.006, 0.006, 0.006, 0.006, 0.019, 0.310, 0.006, 0.006, 0.006, 0.456, 0.006, 0.006, 0.006, 0.057, 0.006]),\n     \"Class_of_Orbit\": categorical([0.979, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.345, 0.006, 0.006, 0.291, 0.061, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.048, 0.133, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1721.378, 547.984),\n     \"Apogee_km\": gaussian(19872.661, 1996.726),\n     \"Perigee_km\": gaussian(19694.653, 1867.689),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.573, 67.292),\n     \"Inclination_radians\": gaussian(1.042, 0.110),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.977, 0.540),\n     \"Apogee_km\": gaussian(694.649, 10.067),\n     \"Perigee_km\": gaussian(675.916, 1.437),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.507, 0.660),\n     \"Inclination_radians\": gaussian(1.712, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(850.200, 1111.149),\n     \"Apogee_km\": gaussian(725.963, 84.691),\n     \"Perigee_km\": gaussian(686.577, 89.741),\n     \"Type_of_Orbit\": categorical([0.877, 0.009, 0.079, 0.009, 0.009, 0.009, 0.009]),\n     \"Purpose\": categorical([0.006, 0.068, 0.006, 0.031, 0.006, 0.043, 0.019, 0.006, 0.012, 0.006, 0.012, 0.012, 0.037, 0.006, 0.161, 0.006, 0.006, 0.093, 0.006, 0.006, 0.006, 0.025, 0.006, 0.012, 0.006, 0.093, 0.012, 0.037, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.006, 0.093, 0.006, 0.012, 0.025, 0.006, 0.006, 0.012, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.866, 1.615),\n     \"Inclination_radians\": gaussian(1.714, 0.012),\n     \"Users\": categorical([0.008, 0.038, 0.090, 0.015, 0.008, 0.008, 0.008, 0.414, 0.098, 0.008, 0.015, 0.015, 0.023, 0.195, 0.008, 0.008, 0.015, 0.030]),\n     \"Class_of_Orbit\": categorical([0.975, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.086, 0.043, 0.007, 0.229, 0.057, 0.007, 0.043, 0.007, 0.100, 0.007, 0.007, 0.007, 0.050, 0.157, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.057, 0.007, 0.064, 0.014])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2332.748, 1556.576),\n     \"Apogee_km\": gaussian(70498.738, 94094.306),\n     \"Perigee_km\": gaussian(15748.661, 16323.001),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1080.369, 1137.106),\n     \"Inclination_radians\": gaussian(0.696, 0.564),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5765.534, 7660.396),\n     \"Apogee_km\": gaussian(987.889, 331.597),\n     \"Perigee_km\": gaussian(649.760, 357.464),\n     \"Type_of_Orbit\": categorical([0.458, 0.042, 0.042, 0.292, 0.042, 0.083, 0.042]),\n     \"Purpose\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.025, 0.013, 0.101, 0.025, 0.013, 0.025, 0.013, 0.025, 0.013, 0.139, 0.025, 0.025, 0.013, 0.025, 0.013, 0.025, 0.013, 0.013, 0.051, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(101.101, 5.912),\n     \"Inclination_radians\": gaussian(1.380, 0.582),\n     \"Users\": categorical([0.020, 0.020, 0.314, 0.020, 0.020, 0.039, 0.020, 0.216, 0.020, 0.020, 0.020, 0.039, 0.020, 0.137, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.838, 0.027, 0.108, 0.027]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.276, 0.034, 0.017, 0.052, 0.017, 0.034, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.069, 0.086, 0.017, 0.017, 0.034])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3243.829, 5344.160),\n     \"Apogee_km\": gaussian(22418.382, 39717.361),\n     \"Perigee_km\": gaussian(24771.486, 58391.823),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(929.662, 1968.769),\n     \"Inclination_radians\": gaussian(18.322, 53.459),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.054, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.697, 0.245)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.999, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.001, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.094, 0.065, 0.396, 0.087, 0.089, 0.005, 0.017, 0.110, 0.071, 0.052, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2612.309, 5334.076),\n     \"Apogee_km\": gaussian(873.554, 194.255),\n     \"Perigee_km\": gaussian(737.264, 213.842),\n     \"Type_of_Orbit\": categorical([0.209, 0.015, 0.030, 0.701, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.017, 0.264, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.050, 0.017, 0.091, 0.050, 0.008, 0.008, 0.008, 0.091, 0.008, 0.017, 0.008, 0.033, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.040, 2.731),\n     \"Inclination_radians\": gaussian(1.109, 0.457),\n     \"Users\": categorical([0.011, 0.065, 0.258, 0.011, 0.011, 0.022, 0.011, 0.118, 0.333, 0.011, 0.011, 0.022, 0.022, 0.054, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.924, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.070, 0.010, 0.010, 0.220, 0.020, 0.020, 0.030, 0.010, 0.030, 0.010, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.040, 0.130, 0.010, 0.010, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7.136, 14.211),\n     \"Apogee_km\": gaussian(726.931, 102.866),\n     \"Perigee_km\": gaussian(578.490, 76.579),\n     \"Type_of_Orbit\": categorical([0.844, 0.022, 0.044, 0.022, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.357, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.774, 0.888),\n     \"Inclination_radians\": gaussian(1.676, 0.269),\n     \"Users\": categorical([0.014, 0.014, 0.029, 0.014, 0.014, 0.057, 0.014, 0.086, 0.243, 0.014, 0.029, 0.014, 0.014, 0.386, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.117, 0.026, 0.013, 0.169, 0.013, 0.039, 0.026, 0.013, 0.104, 0.013, 0.013, 0.013, 0.039, 0.234, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3670.399, 1489.454),\n     \"Apogee_km\": gaussian(35766.459, 1439.352),\n     \"Perigee_km\": gaussian(35670.828, 1442.706),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.612, 54.845),\n     \"Inclination_radians\": gaussian(0.016, 0.079),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.800, 48.968),\n     \"Apogee_km\": gaussian(777.062, 8.509),\n     \"Perigee_km\": gaussian(773.617, 11.711),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.359, 0.148),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1702.251, 494.274),\n     \"Apogee_km\": gaussian(19847.859, 1951.431),\n     \"Perigee_km\": gaussian(19752.648, 1981.590),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.615, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(707.961, 69.025),\n     \"Inclination_radians\": gaussian(1.040, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.719, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.960]),\n     \"Launch_Site\": categorical([0.292, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.344, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.919, 0.637),\n     \"Apogee_km\": gaussian(694.077, 9.009),\n     \"Perigee_km\": gaussian(675.555, 2.404),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.610, 0.877),\n     \"Inclination_radians\": gaussian(1.714, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2668.990, 1258.689),\n     \"Apogee_km\": gaussian(34733.891, 8374.563),\n     \"Perigee_km\": gaussian(21530.733, 18624.907),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.117, 0.017, 0.017, 0.067, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017]),\n     \"Period_minutes\": gaussian(933.544, 545.677),\n     \"Inclination_radians\": gaussian(0.910, 0.483),\n     \"Users\": categorical([0.031, 0.031, 0.438, 0.031, 0.031, 0.031, 0.031, 0.063, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.500, 0.333, 0.111]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.077, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.179, 0.026, 0.077, 0.103, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1089.592, 1134.593),\n     \"Apogee_km\": gaussian(733.682, 96.644),\n     \"Perigee_km\": gaussian(720.114, 97.886),\n     \"Type_of_Orbit\": categorical([0.852, 0.011, 0.091, 0.011, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.007, 0.082, 0.007, 0.030, 0.007, 0.007, 0.022, 0.007, 0.015, 0.007, 0.007, 0.015, 0.022, 0.007, 0.060, 0.007, 0.007, 0.112, 0.007, 0.007, 0.007, 0.045, 0.007, 0.015, 0.007, 0.119, 0.015, 0.052, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007, 0.007, 0.112, 0.007, 0.015, 0.030, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(99.322, 2.085),\n     \"Inclination_radians\": gaussian(1.716, 0.013),\n     \"Users\": categorical([0.009, 0.047, 0.113, 0.019, 0.009, 0.009, 0.009, 0.528, 0.028, 0.009, 0.009, 0.019, 0.038, 0.075, 0.009, 0.009, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.080, 0.044, 0.009, 0.283, 0.088, 0.009, 0.044, 0.009, 0.062, 0.009, 0.009, 0.009, 0.062, 0.044, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.062, 0.009, 0.080, 0.018])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(504.381, 183.257),\n     \"Apogee_km\": gaussian(1425.375, 87.515),\n     \"Perigee_km\": gaussian(1405.171, 100.363),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.211, 1.575),\n     \"Inclination_radians\": gaussian(1.042, 0.240),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(423.525, 473.464),\n     \"Apogee_km\": gaussian(517.711, 83.456),\n     \"Perigee_km\": gaussian(478.911, 66.895),\n     \"Type_of_Orbit\": categorical([0.621, 0.034, 0.103, 0.103, 0.034, 0.069, 0.034]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.216, 0.023, 0.011, 0.080, 0.011, 0.034, 0.011, 0.080, 0.045, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.045, 0.023, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(94.755, 1.340),\n     \"Inclination_radians\": gaussian(1.260, 0.629),\n     \"Users\": categorical([0.017, 0.067, 0.183, 0.033, 0.017, 0.017, 0.050, 0.267, 0.067, 0.017, 0.017, 0.033, 0.017, 0.117, 0.033, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.935, 0.022, 0.022, 0.022]),\n     \"Launch_Site\": categorical([0.090, 0.030, 0.030, 0.030, 0.060, 0.015, 0.015, 0.015, 0.015, 0.015, 0.060, 0.179, 0.075, 0.030, 0.030, 0.015, 0.030, 0.060, 0.015, 0.015, 0.060, 0.045, 0.015, 0.045, 0.015])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2161.126, 2185.059),\n     \"Apogee_km\": gaussian(111730.822, 136037.552),\n     \"Perigee_km\": gaussian(11074.320, 13450.070),\n     \"Type_of_Orbit\": categorical([0.091, 0.455, 0.091, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.123, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.088, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(1280.967, 1639.342),\n     \"Inclination_radians\": gaussian(2.387, 7.851),\n     \"Users\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.241, 0.034, 0.034, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034]),\n     \"Class_of_Orbit\": categorical([0.067, 0.200, 0.400, 0.333]),\n     \"Launch_Site\": categorical([0.056, 0.028, 0.028, 0.028, 0.028, 0.028, 0.194, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.056, 0.083, 0.028, 0.028, 0.028, 0.056])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.050, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.036, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.703, 0.235)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.087, 0.164, 0.396, 0.071, 0.089, 0.005, 0.087, 0.030, 0.067, 0.001, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.581, 48.724),\n     \"Apogee_km\": gaussian(777.496, 8.974),\n     \"Perigee_km\": gaussian(773.061, 11.319),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.364, 0.155),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(825.827, 1010.849),\n     \"Apogee_km\": gaussian(710.758, 114.234),\n     \"Perigee_km\": gaussian(681.506, 110.173),\n     \"Type_of_Orbit\": categorical([0.888, 0.008, 0.072, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.062, 0.006, 0.023, 0.006, 0.034, 0.017, 0.006, 0.011, 0.006, 0.011, 0.011, 0.028, 0.006, 0.175, 0.006, 0.006, 0.113, 0.006, 0.006, 0.006, 0.051, 0.006, 0.011, 0.006, 0.090, 0.011, 0.040, 0.011, 0.011, 0.006, 0.006, 0.006, 0.006, 0.011, 0.006, 0.006, 0.085, 0.006, 0.011, 0.023, 0.006, 0.011, 0.017, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.532, 2.224),\n     \"Inclination_radians\": gaussian(1.712, 0.013),\n     \"Users\": categorical([0.007, 0.027, 0.074, 0.013, 0.007, 0.007, 0.020, 0.470, 0.087, 0.007, 0.013, 0.020, 0.027, 0.168, 0.007, 0.007, 0.013, 0.027]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.096, 0.038, 0.006, 0.212, 0.083, 0.006, 0.032, 0.006, 0.090, 0.006, 0.006, 0.006, 0.083, 0.135, 0.013, 0.006, 0.006, 0.026, 0.006, 0.006, 0.006, 0.051, 0.006, 0.051, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3637.717, 1481.453),\n     \"Apogee_km\": gaussian(35789.362, 1414.900),\n     \"Perigee_km\": gaussian(35670.057, 1350.269),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1431.121, 53.463),\n     \"Inclination_radians\": gaussian(0.016, 0.077),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(503.270, 192.132),\n     \"Apogee_km\": gaussian(1430.293, 86.088),\n     \"Perigee_km\": gaussian(1402.106, 103.417),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.169, 1.613),\n     \"Inclination_radians\": gaussian(1.038, 0.261),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1719.689, 504.788),\n     \"Apogee_km\": gaussian(19977.908, 1990.181),\n     \"Perigee_km\": gaussian(19815.375, 1915.982),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.615, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(708.126, 66.983),\n     \"Inclination_radians\": gaussian(1.033, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.719, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.960]),\n     \"Launch_Site\": categorical([0.292, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.344, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.804, 0.830),\n     \"Apogee_km\": gaussian(694.131, 8.211),\n     \"Perigee_km\": gaussian(675.851, 1.630),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.644, 0.681),\n     \"Inclination_radians\": gaussian(1.714, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(29.997, 25.552),\n     \"Apogee_km\": gaussian(732.883, 130.072),\n     \"Perigee_km\": gaussian(641.801, 146.555),\n     \"Type_of_Orbit\": categorical([0.397, 0.017, 0.017, 0.517, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.009, 0.009, 0.017, 0.259, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.224, 0.017, 0.009, 0.052, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.355, 2.325),\n     \"Inclination_radians\": gaussian(1.103, 0.494),\n     \"Users\": categorical([0.011, 0.102, 0.057, 0.023, 0.011, 0.045, 0.011, 0.057, 0.409, 0.011, 0.011, 0.011, 0.011, 0.170, 0.023, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.084, 0.011, 0.011, 0.211, 0.011, 0.042, 0.011, 0.011, 0.021, 0.011, 0.011, 0.368, 0.011, 0.021, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.021, 0.021, 0.011, 0.032, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2458.782, 1575.170),\n     \"Apogee_km\": gaussian(68366.011, 93125.613),\n     \"Perigee_km\": gaussian(15682.032, 15647.222),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.100, 0.014, 0.014, 0.129, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.071, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.057, 0.014]),\n     \"Period_minutes\": gaussian(1102.596, 1113.120),\n     \"Inclination_radians\": gaussian(0.668, 0.552),\n     \"Users\": categorical([0.024, 0.024, 0.333, 0.024, 0.024, 0.024, 0.024, 0.143, 0.143, 0.024, 0.024, 0.024, 0.024, 0.048, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.036, 0.357, 0.393, 0.214]),\n     \"Launch_Site\": categorical([0.041, 0.020, 0.020, 0.061, 0.020, 0.020, 0.122, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.143, 0.041, 0.102, 0.082, 0.020, 0.020, 0.041])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3802.971, 6366.351),\n     \"Apogee_km\": gaussian(840.064, 289.818),\n     \"Perigee_km\": gaussian(642.020, 279.504),\n     \"Type_of_Orbit\": categorical([0.263, 0.026, 0.079, 0.526, 0.026, 0.053, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.100, 0.020, 0.110, 0.020, 0.010, 0.030, 0.010, 0.140, 0.040, 0.030, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.793, 4.598),\n     \"Inclination_radians\": gaussian(1.284, 0.588),\n     \"Users\": categorical([0.014, 0.028, 0.444, 0.014, 0.014, 0.028, 0.014, 0.167, 0.069, 0.014, 0.014, 0.028, 0.014, 0.083, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.897, 0.017, 0.069, 0.017]),\n     \"Launch_Site\": categorical([0.076, 0.025, 0.025, 0.190, 0.013, 0.013, 0.051, 0.013, 0.025, 0.013, 0.051, 0.038, 0.013, 0.025, 0.025, 0.013, 0.013, 0.013, 0.013, 0.025, 0.076, 0.190, 0.013, 0.025, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2906.133, 6080.652),\n     \"Apogee_km\": gaussian(24057.127, 101512.818),\n     \"Perigee_km\": gaussian(25478.763, 47702.059),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(970.590, 2181.374),\n     \"Inclination_radians\": gaussian(17.782, 21.385),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(560.326, 417.530),\n     \"Apogee_km\": gaussian(716.111, 11.470),\n     \"Perigee_km\": gaussian(703.125, 28.171),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.290, 0.843),\n     \"Inclination_radians\": gaussian(1.584, 0.150),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.931, 0.055, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.690, 0.239)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.979, 0.005, 0.014, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.001, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.007, 0.003, 0.002, 0.017, 0.002, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.001, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.003, 0.054, 0.006, 0.002, 0.002, 0.001, 0.001, 0.038, 0.003, 0.005, 0.002, 0.001, 0.002, 0.089, 0.009, 0.007, 0.002, 0.001, 0.001, 0.053, 0.002, 0.002, 0.007, 0.001, 0.002, 0.005, 0.005, 0.001, 0.021, 0.001, 0.015, 0.001, 0.013, 0.009, 0.002, 0.438, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.029, 0.001, 0.001, 0.001, 0.003, 0.001, 0.008, 0.001, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.071, 0.396, 0.076, 0.090, 0.005, 0.101, 0.087, 0.061, 0.029, 0.082, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(505.500, 184.341),\n     \"Apogee_km\": gaussian(1428.984, 86.133),\n     \"Perigee_km\": gaussian(1403.780, 100.825),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.260, 1.622),\n     \"Inclination_radians\": gaussian(1.033, 0.255),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3645.000, 1525.306),\n     \"Apogee_km\": gaussian(35718.692, 1419.563),\n     \"Perigee_km\": gaussian(35626.885, 1416.440),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.990, 56.403),\n     \"Inclination_radians\": gaussian(0.016, 0.077),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.811, 29.277),\n     \"Apogee_km\": gaussian(804.650, 49.134),\n     \"Perigee_km\": gaussian(688.205, 131.322),\n     \"Type_of_Orbit\": categorical([0.352, 0.019, 0.019, 0.556, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.271, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.056, 0.009, 0.140, 0.009, 0.009, 0.056, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.777, 1.343),\n     \"Inclination_radians\": gaussian(1.241, 0.518),\n     \"Users\": categorical([0.013, 0.076, 0.025, 0.013, 0.013, 0.051, 0.013, 0.101, 0.481, 0.013, 0.013, 0.013, 0.013, 0.114, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.081, 0.023, 0.012, 0.233, 0.012, 0.035, 0.012, 0.012, 0.023, 0.012, 0.012, 0.302, 0.012, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.047, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1749.847, 552.018),\n     \"Apogee_km\": gaussian(19930.778, 1886.777),\n     \"Perigee_km\": gaussian(19836.097, 2007.414),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.296, 70.914),\n     \"Inclination_radians\": gaussian(1.034, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.974, 0.491),\n     \"Apogee_km\": gaussian(694.719, 9.095),\n     \"Perigee_km\": gaussian(675.843, 1.582),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.635, 0.891),\n     \"Inclination_radians\": gaussian(1.718, 0.065),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(520.745, 781.347),\n     \"Apogee_km\": gaussian(674.811, 54.082),\n     \"Perigee_km\": gaussian(641.867, 46.581),\n     \"Type_of_Orbit\": categorical([0.880, 0.012, 0.060, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.039, 0.008, 0.055, 0.024, 0.008, 0.008, 0.008, 0.016, 0.008, 0.031, 0.008, 0.173, 0.008, 0.008, 0.102, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.118, 0.016, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.087, 0.008, 0.016, 0.031, 0.008, 0.016, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.905, 0.863),\n     \"Inclination_radians\": gaussian(1.709, 0.012),\n     \"Users\": categorical([0.010, 0.030, 0.030, 0.020, 0.010, 0.010, 0.010, 0.404, 0.091, 0.010, 0.020, 0.010, 0.040, 0.222, 0.010, 0.010, 0.020, 0.040]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.057, 0.047, 0.009, 0.170, 0.047, 0.009, 0.038, 0.009, 0.123, 0.009, 0.009, 0.009, 0.066, 0.179, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.047, 0.009, 0.057, 0.019])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.301, 48.989),\n     \"Apogee_km\": gaussian(776.987, 8.379),\n     \"Perigee_km\": gaussian(773.539, 11.319),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.367, 0.157),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(407.843, 517.377),\n     \"Apogee_km\": gaussian(532.203, 85.237),\n     \"Perigee_km\": gaussian(489.289, 71.436),\n     \"Type_of_Orbit\": categorical([0.676, 0.029, 0.088, 0.088, 0.029, 0.059, 0.029]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.253, 0.021, 0.011, 0.074, 0.011, 0.032, 0.011, 0.095, 0.042, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.042, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(95.017, 1.409),\n     \"Inclination_radians\": gaussian(1.244, 0.580),\n     \"Users\": categorical([0.015, 0.060, 0.164, 0.030, 0.015, 0.015, 0.045, 0.269, 0.075, 0.015, 0.015, 0.030, 0.015, 0.164, 0.030, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.943, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.122, 0.027, 0.027, 0.027, 0.054, 0.027, 0.014, 0.014, 0.014, 0.014, 0.054, 0.162, 0.095, 0.027, 0.027, 0.014, 0.027, 0.041, 0.014, 0.027, 0.054, 0.054, 0.014, 0.041, 0.014])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2289.454, 1547.581),\n     \"Apogee_km\": gaussian(70349.838, 93201.651),\n     \"Perigee_km\": gaussian(16349.848, 16014.349),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1032.463, 1120.030),\n     \"Inclination_radians\": gaussian(0.636, 0.571),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3434.580, 5505.214),\n     \"Apogee_km\": gaussian(913.100, 190.094),\n     \"Perigee_km\": gaussian(760.388, 231.996),\n     \"Type_of_Orbit\": categorical([0.517, 0.017, 0.103, 0.310, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.009, 0.098, 0.009, 0.036, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.063, 0.018, 0.098, 0.027, 0.009, 0.009, 0.009, 0.116, 0.009, 0.027, 0.009, 0.027, 0.009, 0.063, 0.009, 0.018, 0.036, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.063, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(101.760, 2.819),\n     \"Inclination_radians\": gaussian(1.516, 0.391),\n     \"Users\": categorical([0.012, 0.036, 0.393, 0.012, 0.012, 0.024, 0.012, 0.274, 0.036, 0.012, 0.012, 0.036, 0.024, 0.060, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.914, 0.014, 0.057, 0.014]),\n     \"Launch_Site\": categorical([0.099, 0.011, 0.011, 0.319, 0.077, 0.011, 0.055, 0.011, 0.033, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.044, 0.165, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3213.348, 6716.343),\n     \"Apogee_km\": gaussian(25681.529, 46686.163),\n     \"Perigee_km\": gaussian(23844.672, 48500.922),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(930.811, 2188.090),\n     \"Inclination_radians\": gaussian(18.542, 29.921),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.934, 0.052, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.679, 0.256)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.180, 0.396, 0.106, 0.090, 0.005, 0.107, 0.055, 0.029, 0.031, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(612.511, 161.849),\n     \"Apogee_km\": gaussian(1047.944, 316.089),\n     \"Perigee_km\": gaussian(1027.203, 306.357),\n     \"Type_of_Orbit\": categorical([0.014, 0.007, 0.500, 0.458, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.674, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.058, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(106.370, 6.700),\n     \"Inclination_radians\": gaussian(1.304, 0.302),\n     \"Users\": categorical([0.012, 0.006, 0.074, 0.006, 0.006, 0.006, 0.006, 0.031, 0.296, 0.006, 0.006, 0.006, 0.444, 0.019, 0.006, 0.006, 0.056, 0.006]),\n     \"Class_of_Orbit\": categorical([0.973, 0.007, 0.014, 0.007]),\n     \"Launch_Site\": categorical([0.331, 0.006, 0.006, 0.302, 0.059, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.047, 0.136, 0.006, 0.006, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3604.876, 1449.281),\n     \"Apogee_km\": gaussian(35707.031, 1423.259),\n     \"Perigee_km\": gaussian(35631.088, 1458.263),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1432.697, 54.992),\n     \"Inclination_radians\": gaussian(0.015, 0.080),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(22.521, 23.138),\n     \"Apogee_km\": gaussian(764.220, 80.359),\n     \"Perigee_km\": gaussian(662.259, 118.683),\n     \"Type_of_Orbit\": categorical([0.533, 0.013, 0.013, 0.400, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.015, 0.237, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.061, 0.008, 0.252, 0.008, 0.008, 0.046, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.983, 1.520),\n     \"Inclination_radians\": gaussian(1.343, 0.501),\n     \"Users\": categorical([0.010, 0.068, 0.019, 0.010, 0.010, 0.039, 0.010, 0.049, 0.437, 0.010, 0.019, 0.010, 0.010, 0.262, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.966, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.073, 0.018, 0.009, 0.182, 0.009, 0.036, 0.018, 0.009, 0.064, 0.009, 0.009, 0.236, 0.027, 0.155, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.036, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1720.313, 545.887),\n     \"Apogee_km\": gaussian(20027.806, 1929.762),\n     \"Perigee_km\": gaussian(19718.349, 1903.003),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.216, 69.668),\n     \"Inclination_radians\": gaussian(1.036, 0.101),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.874, 0.726),\n     \"Apogee_km\": gaussian(694.164, 7.498),\n     \"Perigee_km\": gaussian(675.671, 1.819),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.506, 0.686),\n     \"Inclination_radians\": gaussian(1.710, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1180.998, 1149.336),\n     \"Apogee_km\": gaussian(732.517, 92.936),\n     \"Perigee_km\": gaussian(711.961, 95.332),\n     \"Type_of_Orbit\": categorical([0.839, 0.011, 0.103, 0.011, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.008, 0.083, 0.008, 0.023, 0.008, 0.008, 0.023, 0.008, 0.015, 0.008, 0.015, 0.015, 0.015, 0.008, 0.061, 0.008, 0.008, 0.114, 0.008, 0.008, 0.008, 0.030, 0.008, 0.015, 0.008, 0.121, 0.015, 0.053, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.114, 0.008, 0.015, 0.030, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(99.253, 1.936),\n     \"Inclination_radians\": gaussian(1.715, 0.014),\n     \"Users\": categorical([0.010, 0.038, 0.115, 0.019, 0.010, 0.010, 0.010, 0.538, 0.029, 0.010, 0.010, 0.019, 0.038, 0.067, 0.010, 0.010, 0.019, 0.038]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.081, 0.045, 0.009, 0.288, 0.090, 0.009, 0.045, 0.009, 0.081, 0.009, 0.009, 0.009, 0.045, 0.054, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.063, 0.009, 0.054, 0.018])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(452.430, 499.228),\n     \"Apogee_km\": gaussian(516.563, 56.485),\n     \"Perigee_km\": gaussian(493.318, 61.421),\n     \"Type_of_Orbit\": categorical([0.688, 0.031, 0.094, 0.094, 0.031, 0.031, 0.031]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.222, 0.022, 0.011, 0.067, 0.011, 0.033, 0.011, 0.100, 0.033, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.044, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(94.879, 1.125),\n     \"Inclination_radians\": gaussian(1.204, 0.594),\n     \"Users\": categorical([0.016, 0.065, 0.145, 0.032, 0.016, 0.016, 0.048, 0.290, 0.065, 0.016, 0.016, 0.032, 0.016, 0.145, 0.032, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.938, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.116, 0.014, 0.014, 0.029, 0.058, 0.014, 0.014, 0.014, 0.014, 0.014, 0.043, 0.174, 0.101, 0.029, 0.029, 0.014, 0.029, 0.058, 0.014, 0.029, 0.058, 0.043, 0.014, 0.043, 0.014])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2317.881, 1598.098),\n     \"Apogee_km\": gaussian(72870.506, 100502.767),\n     \"Perigee_km\": gaussian(15688.140, 16363.908),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1127.088, 1112.072),\n     \"Inclination_radians\": gaussian(0.674, 0.558),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8228.007, 7927.763),\n     \"Apogee_km\": gaussian(934.629, 315.071),\n     \"Perigee_km\": gaussian(561.709, 303.734),\n     \"Type_of_Orbit\": categorical([0.476, 0.048, 0.048, 0.238, 0.048, 0.095, 0.048]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.099, 0.028, 0.014, 0.028, 0.014, 0.014, 0.014, 0.141, 0.028, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.889, 4.142),\n     \"Inclination_radians\": gaussian(1.380, 0.585),\n     \"Users\": categorical([0.023, 0.023, 0.349, 0.023, 0.023, 0.047, 0.023, 0.163, 0.023, 0.023, 0.023, 0.047, 0.023, 0.093, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.828, 0.034, 0.103, 0.034]),\n     \"Launch_Site\": categorical([0.060, 0.040, 0.040, 0.260, 0.020, 0.020, 0.060, 0.020, 0.040, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.080, 0.060, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3083.139, 6288.665),\n     \"Apogee_km\": gaussian(23329.731, 48286.846),\n     \"Perigee_km\": gaussian(19966.484, 81874.752),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(944.366, 1717.623),\n     \"Inclination_radians\": gaussian(18.747, 24.735),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.931, 0.054, 0.015]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.639, 0.326)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.029, 0.396, 0.087, 0.071, 0.090, 0.005, 0.152, 0.076, 0.092, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2406.993, 1615.251),\n     \"Apogee_km\": gaussian(68915.245, 102509.567),\n     \"Perigee_km\": gaussian(15950.464, 16476.260),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1025.330, 1105.252),\n     \"Inclination_radians\": gaussian(0.695, 0.568),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3621.394, 1478.085),\n     \"Apogee_km\": gaussian(35797.097, 1451.503),\n     \"Perigee_km\": gaussian(35628.195, 1404.178),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.746, 54.130),\n     \"Inclination_radians\": gaussian(0.016, 0.078),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.183, 47.276),\n     \"Apogee_km\": gaussian(776.864, 8.610),\n     \"Perigee_km\": gaussian(774.028, 11.123),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.372, 0.162),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(506.230, 183.833),\n     \"Apogee_km\": gaussian(1426.080, 83.335),\n     \"Perigee_km\": gaussian(1406.908, 104.068),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.222, 1.596),\n     \"Inclination_radians\": gaussian(1.036, 0.247),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1731.297, 599.807),\n     \"Apogee_km\": gaussian(19961.698, 1871.190),\n     \"Perigee_km\": gaussian(19886.714, 2026.108),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.992, 70.377),\n     \"Inclination_radians\": gaussian(1.031, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.889, 0.745),\n     \"Apogee_km\": gaussian(694.087, 8.507),\n     \"Perigee_km\": gaussian(675.919, 1.397),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.693, 0.897),\n     \"Inclination_radians\": gaussian(1.714, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(838.768, 1129.458),\n     \"Apogee_km\": gaussian(717.681, 88.963),\n     \"Perigee_km\": gaussian(684.573, 94.982),\n     \"Type_of_Orbit\": categorical([0.883, 0.008, 0.075, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.065, 0.006, 0.030, 0.006, 0.042, 0.018, 0.006, 0.012, 0.006, 0.012, 0.012, 0.036, 0.006, 0.161, 0.006, 0.006, 0.095, 0.006, 0.006, 0.006, 0.048, 0.006, 0.012, 0.006, 0.089, 0.012, 0.036, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.006, 0.089, 0.006, 0.012, 0.024, 0.006, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.767, 1.851),\n     \"Inclination_radians\": gaussian(1.713, 0.012),\n     \"Users\": categorical([0.007, 0.036, 0.086, 0.014, 0.007, 0.007, 0.007, 0.436, 0.100, 0.007, 0.014, 0.014, 0.021, 0.186, 0.007, 0.007, 0.014, 0.029]),\n     \"Class_of_Orbit\": categorical([0.976, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.088, 0.041, 0.007, 0.218, 0.068, 0.007, 0.041, 0.007, 0.095, 0.007, 0.007, 0.007, 0.075, 0.150, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.054, 0.007, 0.061, 0.014])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(245.308, 351.684),\n     \"Apogee_km\": gaussian(605.825, 157.713),\n     \"Perigee_km\": gaussian(483.758, 68.425),\n     \"Type_of_Orbit\": categorical([0.686, 0.029, 0.086, 0.086, 0.029, 0.057, 0.029]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.047, 0.009, 0.318, 0.019, 0.009, 0.065, 0.009, 0.037, 0.009, 0.047, 0.037, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(95.778, 1.836),\n     \"Inclination_radians\": gaussian(1.309, 0.641),\n     \"Users\": categorical([0.013, 0.063, 0.152, 0.025, 0.013, 0.051, 0.038, 0.203, 0.114, 0.013, 0.013, 0.025, 0.025, 0.190, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.105, 0.023, 0.023, 0.186, 0.035, 0.035, 0.012, 0.012, 0.012, 0.012, 0.047, 0.140, 0.035, 0.023, 0.035, 0.012, 0.023, 0.047, 0.012, 0.023, 0.047, 0.047, 0.012, 0.035, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2674.777, 5619.087),\n     \"Apogee_km\": gaussian(885.997, 194.502),\n     \"Perigee_km\": gaussian(752.551, 211.687),\n     \"Type_of_Orbit\": categorical([0.209, 0.015, 0.030, 0.701, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.017, 0.267, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.050, 0.017, 0.092, 0.042, 0.008, 0.008, 0.008, 0.092, 0.008, 0.017, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.169, 2.640),\n     \"Inclination_radians\": gaussian(1.146, 0.453),\n     \"Users\": categorical([0.011, 0.054, 0.261, 0.011, 0.011, 0.022, 0.011, 0.120, 0.337, 0.011, 0.011, 0.022, 0.022, 0.054, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.923, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.081, 0.010, 0.010, 0.202, 0.030, 0.020, 0.030, 0.010, 0.030, 0.010, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.131, 0.010, 0.010, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3028.301, 5636.037),\n     \"Apogee_km\": gaussian(24856.024, 40308.988),\n     \"Perigee_km\": gaussian(23919.368, 41084.560),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(974.148, 1436.522),\n     \"Inclination_radians\": gaussian(18.305, 32.022),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.050, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.693, 0.260)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.071, 0.065, 0.396, 0.090, 0.005, 0.106, 0.055, 0.087, 0.029, 0.065, 0.030, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(507.900, 195.630),\n     \"Apogee_km\": gaussian(1430.144, 85.381),\n     \"Perigee_km\": gaussian(1402.210, 96.475),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.089, 1.619),\n     \"Inclination_radians\": gaussian(1.023, 0.243),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.014, 15.452),\n     \"Apogee_km\": gaussian(726.754, 96.703),\n     \"Perigee_km\": gaussian(577.145, 75.495),\n     \"Type_of_Orbit\": categorical([0.822, 0.022, 0.044, 0.044, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.041, 0.010, 0.071, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.357, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(97.768, 0.797),\n     \"Inclination_radians\": gaussian(1.682, 0.272),\n     \"Users\": categorical([0.014, 0.029, 0.029, 0.014, 0.014, 0.057, 0.014, 0.100, 0.214, 0.014, 0.029, 0.014, 0.014, 0.386, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.091, 0.026, 0.013, 0.169, 0.013, 0.039, 0.026, 0.013, 0.104, 0.013, 0.013, 0.013, 0.039, 0.247, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.026, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3630.273, 1529.086),\n     \"Apogee_km\": gaussian(35691.617, 1405.468),\n     \"Perigee_km\": gaussian(35739.303, 1398.775),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1432.905, 55.686),\n     \"Inclination_radians\": gaussian(0.016, 0.078),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1730.896, 561.419),\n     \"Apogee_km\": gaussian(19912.870, 1928.943),\n     \"Perigee_km\": gaussian(19823.413, 1972.469),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(703.907, 68.883),\n     \"Inclination_radians\": gaussian(1.042, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.953, 0.575),\n     \"Apogee_km\": gaussian(694.271, 9.513),\n     \"Perigee_km\": gaussian(675.775, 1.519),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.657, 0.860),\n     \"Inclination_radians\": gaussian(1.713, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1259.790, 1316.735),\n     \"Apogee_km\": gaussian(743.031, 92.706),\n     \"Perigee_km\": gaussian(725.759, 95.075),\n     \"Type_of_Orbit\": categorical([0.849, 0.012, 0.093, 0.012, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.084, 0.008, 0.023, 0.008, 0.008, 0.023, 0.008, 0.015, 0.008, 0.008, 0.008, 0.023, 0.008, 0.046, 0.008, 0.008, 0.115, 0.008, 0.008, 0.008, 0.046, 0.008, 0.015, 0.008, 0.122, 0.015, 0.053, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.107, 0.008, 0.015, 0.031, 0.008, 0.008, 0.023, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(99.478, 1.924),\n     \"Inclination_radians\": gaussian(1.716, 0.014),\n     \"Users\": categorical([0.010, 0.039, 0.126, 0.019, 0.010, 0.010, 0.010, 0.505, 0.039, 0.010, 0.010, 0.019, 0.039, 0.078, 0.010, 0.010, 0.019, 0.039]),\n     \"Class_of_Orbit\": categorical([0.966, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.091, 0.045, 0.009, 0.282, 0.082, 0.009, 0.045, 0.009, 0.064, 0.009, 0.009, 0.009, 0.055, 0.036, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.073, 0.009, 0.073, 0.018])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(437.402, 506.524),\n     \"Apogee_km\": gaussian(520.848, 55.959),\n     \"Perigee_km\": gaussian(499.085, 58.327),\n     \"Type_of_Orbit\": categorical([0.677, 0.032, 0.097, 0.097, 0.032, 0.032, 0.032]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.222, 0.022, 0.011, 0.067, 0.011, 0.033, 0.011, 0.089, 0.033, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.056, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(94.923, 1.186),\n     \"Inclination_radians\": gaussian(1.257, 0.562),\n     \"Users\": categorical([0.016, 0.065, 0.145, 0.032, 0.016, 0.016, 0.048, 0.306, 0.081, 0.016, 0.016, 0.032, 0.016, 0.113, 0.032, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.938, 0.021, 0.021, 0.021]),\n     \"Launch_Site\": categorical([0.101, 0.014, 0.014, 0.043, 0.072, 0.014, 0.014, 0.014, 0.014, 0.014, 0.043, 0.174, 0.087, 0.029, 0.029, 0.014, 0.029, 0.058, 0.014, 0.029, 0.058, 0.043, 0.014, 0.043, 0.014])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.741, 49.997),\n     \"Apogee_km\": gaussian(777.266, 8.289),\n     \"Perigee_km\": gaussian(773.333, 10.977),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.361, 0.154),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2353.177, 1608.939),\n     \"Apogee_km\": gaussian(68346.276, 94167.355),\n     \"Perigee_km\": gaussian(16629.370, 16500.061),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1099.640, 1148.454),\n     \"Inclination_radians\": gaussian(0.675, 0.568),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(253.858, 351.722),\n     \"Apogee_km\": gaussian(842.032, 97.318),\n     \"Perigee_km\": gaussian(815.620, 86.499),\n     \"Type_of_Orbit\": categorical([0.143, 0.018, 0.036, 0.750, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.010, 0.010, 0.020, 0.316, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.020, 0.112, 0.061, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.041, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(101.447, 1.920),\n     \"Inclination_radians\": gaussian(1.063, 0.372),\n     \"Users\": categorical([0.014, 0.086, 0.157, 0.014, 0.014, 0.014, 0.014, 0.071, 0.443, 0.014, 0.014, 0.029, 0.029, 0.029, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.091, 0.013, 0.013, 0.104, 0.026, 0.026, 0.013, 0.013, 0.039, 0.013, 0.013, 0.338, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.143, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8292.990, 8390.195),\n     \"Apogee_km\": gaussian(974.009, 317.825),\n     \"Perigee_km\": gaussian(549.793, 307.768),\n     \"Type_of_Orbit\": categorical([0.389, 0.056, 0.056, 0.278, 0.056, 0.111, 0.056]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.100, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.143, 0.029, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.057, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(99.933, 4.317),\n     \"Inclination_radians\": gaussian(1.234, 0.675),\n     \"Users\": categorical([0.024, 0.024, 0.357, 0.024, 0.024, 0.048, 0.024, 0.167, 0.024, 0.024, 0.024, 0.024, 0.024, 0.095, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.786, 0.036, 0.143, 0.036]),\n     \"Launch_Site\": categorical([0.020, 0.041, 0.041, 0.306, 0.020, 0.020, 0.061, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.082, 0.041, 0.020, 0.020, 0.041])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3133.950, 6731.530),\n     \"Apogee_km\": gaussian(23224.975, 41479.682),\n     \"Perigee_km\": gaussian(22633.287, 38444.155),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(971.781, 1430.668),\n     \"Inclination_radians\": gaussian(16.084, 28.575),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.931, 0.055, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.645, 0.313)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.396, 0.107, 0.176, 0.090, 0.005, 0.117, 0.047, 0.029, 0.031, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3570.428, 1424.951),\n     \"Apogee_km\": gaussian(35814.009, 1435.255),\n     \"Perigee_km\": gaussian(35690.168, 1428.338),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1431.905, 55.124),\n     \"Inclination_radians\": gaussian(0.019, 0.082),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(23.859, 25.206),\n     \"Apogee_km\": gaussian(760.561, 81.799),\n     \"Perigee_km\": gaussian(661.813, 115.063),\n     \"Type_of_Orbit\": categorical([0.533, 0.013, 0.013, 0.400, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.015, 0.235, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.053, 0.008, 0.265, 0.008, 0.008, 0.045, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(98.939, 1.541),\n     \"Inclination_radians\": gaussian(1.361, 0.501),\n     \"Users\": categorical([0.010, 0.067, 0.019, 0.010, 0.010, 0.038, 0.010, 0.058, 0.433, 0.010, 0.010, 0.010, 0.010, 0.269, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.090, 0.018, 0.009, 0.180, 0.009, 0.036, 0.009, 0.009, 0.045, 0.009, 0.009, 0.234, 0.027, 0.162, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.036, 0.009, 0.036, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(625.788, 159.158),\n     \"Apogee_km\": gaussian(1050.610, 317.594),\n     \"Perigee_km\": gaussian(1043.015, 316.370),\n     \"Type_of_Orbit\": categorical([0.007, 0.007, 0.503, 0.462, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.684, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.059, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.016, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.011, 0.005, 0.005, 0.011, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(106.218, 6.661),\n     \"Inclination_radians\": gaussian(1.292, 0.283),\n     \"Users\": categorical([0.013, 0.006, 0.069, 0.006, 0.006, 0.006, 0.006, 0.025, 0.302, 0.006, 0.006, 0.006, 0.453, 0.013, 0.006, 0.006, 0.057, 0.006]),\n     \"Class_of_Orbit\": categorical([0.979, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.337, 0.006, 0.006, 0.295, 0.060, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.048, 0.139, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1728.168, 559.741),\n     \"Apogee_km\": gaussian(19819.615, 1978.300),\n     \"Perigee_km\": gaussian(19770.617, 1962.843),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.522, 66.332),\n     \"Inclination_radians\": gaussian(1.039, 0.101),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.972, 0.544),\n     \"Apogee_km\": gaussian(693.861, 8.485),\n     \"Perigee_km\": gaussian(675.761, 1.762),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.483, 0.607),\n     \"Inclination_radians\": gaussian(1.712, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1080.489, 1330.738),\n     \"Apogee_km\": gaussian(725.229, 108.366),\n     \"Perigee_km\": gaussian(711.724, 108.123),\n     \"Type_of_Orbit\": categorical([0.853, 0.011, 0.095, 0.011, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.007, 0.079, 0.007, 0.021, 0.007, 0.007, 0.021, 0.007, 0.014, 0.007, 0.014, 0.014, 0.021, 0.007, 0.071, 0.014, 0.007, 0.121, 0.007, 0.007, 0.007, 0.043, 0.007, 0.014, 0.007, 0.107, 0.014, 0.050, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.107, 0.007, 0.014, 0.029, 0.007, 0.014, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(99.052, 2.210),\n     \"Inclination_radians\": gaussian(1.715, 0.014),\n     \"Users\": categorical([0.009, 0.036, 0.116, 0.018, 0.009, 0.009, 0.018, 0.527, 0.027, 0.009, 0.018, 0.036, 0.027, 0.071, 0.009, 0.009, 0.018, 0.036]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.101, 0.042, 0.008, 0.277, 0.084, 0.008, 0.050, 0.008, 0.092, 0.008, 0.008, 0.008, 0.050, 0.042, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.059, 0.008, 0.050, 0.017])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(473.818, 514.561),\n     \"Apogee_km\": gaussian(513.056, 55.442),\n     \"Perigee_km\": gaussian(487.667, 62.205),\n     \"Type_of_Orbit\": categorical([0.630, 0.037, 0.111, 0.111, 0.037, 0.037, 0.037]),\n     \"Purpose\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.202, 0.024, 0.012, 0.048, 0.012, 0.036, 0.012, 0.095, 0.036, 0.024, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.048, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(94.764, 1.158),\n     \"Inclination_radians\": gaussian(1.183, 0.607),\n     \"Users\": categorical([0.018, 0.071, 0.161, 0.036, 0.018, 0.018, 0.036, 0.268, 0.071, 0.018, 0.018, 0.018, 0.036, 0.125, 0.036, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.929, 0.024, 0.024, 0.024]),\n     \"Launch_Site\": categorical([0.079, 0.016, 0.016, 0.016, 0.063, 0.016, 0.016, 0.016, 0.016, 0.016, 0.048, 0.190, 0.095, 0.032, 0.048, 0.016, 0.032, 0.032, 0.016, 0.032, 0.063, 0.048, 0.016, 0.048, 0.016])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2403.422, 1543.285),\n     \"Apogee_km\": gaussian(62853.125, 97168.591),\n     \"Perigee_km\": gaussian(15507.859, 16513.354),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1005.222, 1169.965),\n     \"Inclination_radians\": gaussian(0.666, 0.567),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8027.451, 8269.776),\n     \"Apogee_km\": gaussian(987.829, 330.474),\n     \"Perigee_km\": gaussian(589.992, 343.168),\n     \"Type_of_Orbit\": categorical([0.421, 0.053, 0.053, 0.263, 0.053, 0.105, 0.053]),\n     \"Purpose\": categorical([0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.028, 0.014, 0.085, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.141, 0.028, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.056, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014]),\n     \"Period_minutes\": gaussian(100.735, 5.226),\n     \"Inclination_radians\": gaussian(1.363, 0.642),\n     \"Users\": categorical([0.023, 0.023, 0.349, 0.023, 0.023, 0.047, 0.023, 0.163, 0.023, 0.023, 0.023, 0.023, 0.023, 0.116, 0.023, 0.023, 0.023, 0.023]),\n     \"Class_of_Orbit\": categorical([0.793, 0.034, 0.138, 0.034]),\n     \"Launch_Site\": categorical([0.020, 0.040, 0.040, 0.300, 0.020, 0.020, 0.060, 0.020, 0.040, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.080, 0.040, 0.020, 0.020, 0.040])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3227.995, 5537.962),\n     \"Apogee_km\": gaussian(25019.857, 43103.846),\n     \"Perigee_km\": gaussian(25376.748, 42423.274),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1079.420, 2370.515),\n     \"Inclination_radians\": gaussian(17.809, 34.295),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.931, 0.055, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.669, 0.292)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.131, 0.122, 0.396, 0.087, 0.090, 0.005, 0.029, 0.071, 0.067, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1030.253, 1105.434),\n     \"Apogee_km\": gaussian(702.723, 124.480),\n     \"Perigee_km\": gaussian(686.589, 121.984),\n     \"Type_of_Orbit\": categorical([0.863, 0.010, 0.088, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.073, 0.007, 0.020, 0.007, 0.007, 0.020, 0.007, 0.013, 0.007, 0.013, 0.013, 0.020, 0.007, 0.079, 0.020, 0.007, 0.132, 0.007, 0.007, 0.007, 0.066, 0.007, 0.013, 0.007, 0.106, 0.013, 0.046, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.007, 0.099, 0.007, 0.013, 0.026, 0.007, 0.013, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.661, 2.489),\n     \"Inclination_radians\": gaussian(1.713, 0.014),\n     \"Users\": categorical([0.008, 0.041, 0.098, 0.016, 0.008, 0.008, 0.024, 0.553, 0.024, 0.008, 0.008, 0.033, 0.033, 0.073, 0.008, 0.008, 0.016, 0.033]),\n     \"Class_of_Orbit\": categorical([0.972, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.100, 0.046, 0.008, 0.254, 0.100, 0.008, 0.038, 0.008, 0.069, 0.008, 0.008, 0.008, 0.085, 0.046, 0.015, 0.008, 0.008, 0.031, 0.008, 0.008, 0.008, 0.046, 0.008, 0.062, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(23.283, 23.930),\n     \"Apogee_km\": gaussian(726.782, 116.863),\n     \"Perigee_km\": gaussian(637.052, 123.973),\n     \"Type_of_Orbit\": categorical([0.578, 0.012, 0.012, 0.361, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.215, 0.007, 0.049, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.049, 0.007, 0.313, 0.007, 0.007, 0.042, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(98.418, 2.031),\n     \"Inclination_radians\": gaussian(1.305, 0.490),\n     \"Users\": categorical([0.009, 0.069, 0.043, 0.017, 0.009, 0.034, 0.009, 0.060, 0.397, 0.009, 0.017, 0.009, 0.009, 0.267, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.089, 0.008, 0.008, 0.163, 0.008, 0.033, 0.016, 0.008, 0.057, 0.008, 0.008, 0.285, 0.024, 0.138, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.016, 0.033, 0.008, 0.024, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3649.600, 1470.773),\n     \"Apogee_km\": gaussian(35782.591, 1419.148),\n     \"Perigee_km\": gaussian(35648.263, 1390.036),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.017, 0.022, 0.003, 0.769, 0.006, 0.003, 0.003, 0.006, 0.003, 0.003, 0.003, 0.003, 0.003, 0.006, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.017, 0.008, 0.003, 0.008, 0.006, 0.003, 0.006, 0.003, 0.011, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.014, 0.003]),\n     \"Period_minutes\": gaussian(1433.355, 54.783),\n     \"Inclination_radians\": gaussian(0.018, 0.078),\n     \"Users\": categorical([0.003, 0.015, 0.122, 0.003, 0.009, 0.003, 0.024, 0.110, 0.666, 0.003, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.237, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.015, 0.012, 0.006, 0.003, 0.003, 0.018, 0.003, 0.003, 0.003, 0.003, 0.003, 0.067, 0.003, 0.190, 0.003, 0.050, 0.009, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.180, 49.709),\n     \"Apogee_km\": gaussian(777.543, 8.487),\n     \"Perigee_km\": gaussian(773.675, 11.239),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.367, 0.156),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1749.423, 581.392),\n     \"Apogee_km\": gaussian(19996.120, 1909.607),\n     \"Perigee_km\": gaussian(19984.924, 1869.974),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.813, 65.261),\n     \"Inclination_radians\": gaussian(1.034, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.953, 0.661),\n     \"Apogee_km\": gaussian(694.782, 9.311),\n     \"Perigee_km\": gaussian(675.594, 1.962),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.723, 0.905),\n     \"Inclination_radians\": gaussian(1.711, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2405.736, 1494.647),\n     \"Apogee_km\": gaussian(70019.363, 95195.082),\n     \"Perigee_km\": gaussian(15866.078, 15867.009),\n     \"Type_of_Orbit\": categorical([0.063, 0.313, 0.063, 0.063, 0.375, 0.063, 0.063]),\n     \"Purpose\": categorical([0.087, 0.014, 0.014, 0.130, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.072, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(1092.678, 1155.875),\n     \"Inclination_radians\": gaussian(0.637, 0.562),\n     \"Users\": categorical([0.024, 0.024, 0.317, 0.024, 0.024, 0.024, 0.024, 0.146, 0.146, 0.024, 0.024, 0.024, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.037, 0.370, 0.407, 0.185]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.125, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.104, 0.083, 0.021, 0.021, 0.042])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(493.752, 192.207),\n     \"Apogee_km\": gaussian(1425.178, 85.455),\n     \"Perigee_km\": gaussian(1407.437, 105.774),\n     \"Type_of_Orbit\": categorical([0.033, 0.017, 0.017, 0.883, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.534, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(114.191, 1.580),\n     \"Inclination_radians\": gaussian(1.033, 0.248),\n     \"Users\": categorical([0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.613, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.120, 0.013]),\n     \"Class_of_Orbit\": categorical([0.951, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.476, 0.012, 0.012, 0.037, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.098, 0.134, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3459.919, 6268.133),\n     \"Apogee_km\": gaussian(856.893, 290.924),\n     \"Perigee_km\": gaussian(629.180, 282.359),\n     \"Type_of_Orbit\": categorical([0.216, 0.027, 0.108, 0.541, 0.027, 0.054, 0.027]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.100, 0.010, 0.110, 0.020, 0.010, 0.030, 0.010, 0.130, 0.040, 0.030, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(99.665, 4.551),\n     \"Inclination_radians\": gaussian(1.297, 0.584),\n     \"Users\": categorical([0.014, 0.028, 0.431, 0.014, 0.014, 0.028, 0.014, 0.181, 0.069, 0.014, 0.014, 0.014, 0.028, 0.083, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.897, 0.017, 0.069, 0.017]),\n     \"Launch_Site\": categorical([0.076, 0.025, 0.025, 0.190, 0.025, 0.013, 0.038, 0.013, 0.025, 0.013, 0.051, 0.038, 0.013, 0.025, 0.025, 0.013, 0.013, 0.013, 0.013, 0.025, 0.076, 0.190, 0.013, 0.025, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3052.945, 6131.588),\n     \"Apogee_km\": gaussian(23914.006, 58560.869),\n     \"Perigee_km\": gaussian(23155.299, 46405.889),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(981.028, 1760.965),\n     \"Inclination_radians\": gaussian(17.571, 24.641),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.936, 0.050, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.693, 0.237)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.005, 0.002, 0.007, 0.008, 0.002, 0.001, 0.008, 0.003, 0.002, 0.018, 0.003, 0.001, 0.002, 0.006, 0.001, 0.002, 0.006, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.020, 0.001, 0.003, 0.053, 0.007, 0.002, 0.003, 0.002, 0.001, 0.039, 0.005, 0.005, 0.002, 0.001, 0.002, 0.088, 0.009, 0.007, 0.002, 0.001, 0.001, 0.052, 0.002, 0.002, 0.008, 0.001, 0.002, 0.005, 0.005, 0.001, 0.020, 0.001, 0.015, 0.001, 0.013, 0.009, 0.003, 0.433, 0.001, 0.001, 0.002, 0.001, 0.006, 0.002, 0.028, 0.001, 0.001, 0.002, 0.003, 0.002, 0.008, 0.001, 0.011])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.078, 0.364, 0.081, 0.078, 0.006, 0.190, 0.110, 0.026, 0.059, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.345, 49.953),\n     \"Apogee_km\": gaussian(776.708, 8.447),\n     \"Perigee_km\": gaussian(773.304, 11.200),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.360, 0.142),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3656.568, 1462.352),\n     \"Apogee_km\": gaussian(35814.703, 1421.657),\n     \"Perigee_km\": gaussian(35732.570, 1349.046),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1436.156, 55.240),\n     \"Inclination_radians\": gaussian(0.013, 0.078),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(455.514, 195.207),\n     \"Apogee_km\": gaussian(1449.048, 84.016),\n     \"Perigee_km\": gaussian(1421.121, 96.858),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.623, 1.581),\n     \"Inclination_radians\": gaussian(1.115, 0.265),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1667.325, 456.998),\n     \"Apogee_km\": gaussian(19998.695, 2047.421),\n     \"Perigee_km\": gaussian(19824.520, 1926.986),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(703.409, 69.174),\n     \"Inclination_radians\": gaussian(1.038, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.045, 0.011, 0.011, 0.011, 0.727, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.014, 0.014, 0.014, 0.959]),\n     \"Launch_Site\": categorical([0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.042, 0.011, 0.347, 0.053, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.927, 0.504),\n     \"Apogee_km\": gaussian(694.429, 8.267),\n     \"Perigee_km\": gaussian(678.563, 8.904),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.657, 0.685),\n     \"Inclination_radians\": gaussian(1.712, 0.049),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.200, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(698.846, 986.724),\n     \"Apogee_km\": gaussian(690.529, 105.395),\n     \"Perigee_km\": gaussian(657.524, 102.484),\n     \"Type_of_Orbit\": categorical([0.909, 0.006, 0.058, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.051, 0.005, 0.046, 0.005, 0.032, 0.018, 0.005, 0.009, 0.005, 0.009, 0.009, 0.028, 0.005, 0.157, 0.009, 0.005, 0.092, 0.005, 0.005, 0.005, 0.051, 0.005, 0.009, 0.005, 0.138, 0.018, 0.028, 0.009, 0.009, 0.032, 0.005, 0.005, 0.005, 0.014, 0.005, 0.014, 0.069, 0.005, 0.009, 0.018, 0.009, 0.009, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.293, 2.131),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.005, 0.032, 0.106, 0.011, 0.005, 0.005, 0.016, 0.423, 0.148, 0.005, 0.011, 0.016, 0.021, 0.153, 0.005, 0.005, 0.011, 0.021]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.158, 0.031, 0.005, 0.189, 0.061, 0.005, 0.041, 0.005, 0.082, 0.005, 0.005, 0.005, 0.071, 0.128, 0.010, 0.005, 0.005, 0.020, 0.005, 0.005, 0.005, 0.071, 0.005, 0.066, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(82.348, 152.166),\n     \"Apogee_km\": gaussian(701.717, 176.486),\n     \"Perigee_km\": gaussian(611.596, 175.622),\n     \"Type_of_Orbit\": categorical([0.390, 0.013, 0.026, 0.519, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.214, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.041, 0.007, 0.276, 0.014, 0.007, 0.055, 0.007, 0.034, 0.007, 0.014, 0.028, 0.014, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.861, 3.080),\n     \"Inclination_radians\": gaussian(1.044, 0.539),\n     \"Users\": categorical([0.009, 0.068, 0.162, 0.017, 0.009, 0.034, 0.009, 0.154, 0.316, 0.009, 0.009, 0.017, 0.009, 0.137, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.105, 0.016, 0.016, 0.177, 0.008, 0.032, 0.016, 0.008, 0.016, 0.008, 0.032, 0.363, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.024, 0.048, 0.024, 0.008, 0.016, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2258.140, 1532.393),\n     \"Apogee_km\": gaussian(25753.601, 15122.083),\n     \"Perigee_km\": gaussian(16612.083, 15984.658),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.116, 0.014, 0.014, 0.116, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.058, 0.014]),\n     \"Period_minutes\": gaussian(718.672, 564.530),\n     \"Inclination_radians\": gaussian(0.798, 0.497),\n     \"Users\": categorical([0.024, 0.024, 0.390, 0.024, 0.024, 0.024, 0.024, 0.073, 0.122, 0.024, 0.024, 0.024, 0.024, 0.073, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.074, 0.370, 0.259, 0.296]),\n     \"Launch_Site\": categorical([0.042, 0.021, 0.021, 0.063, 0.021, 0.021, 0.104, 0.021, 0.042, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.167, 0.021, 0.063, 0.083, 0.021, 0.042, 0.042])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4929.673, 5916.058),\n     \"Apogee_km\": gaussian(978.500, 269.789),\n     \"Perigee_km\": gaussian(766.272, 294.594),\n     \"Type_of_Orbit\": categorical([0.195, 0.024, 0.098, 0.610, 0.024, 0.024, 0.024]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.071, 0.010, 0.111, 0.010, 0.131, 0.010, 0.010, 0.121, 0.010, 0.020, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(102.573, 4.657),\n     \"Inclination_radians\": gaussian(1.330, 0.379),\n     \"Users\": categorical([0.014, 0.014, 0.535, 0.014, 0.014, 0.028, 0.014, 0.113, 0.042, 0.014, 0.014, 0.014, 0.056, 0.056, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.895, 0.018, 0.070, 0.018]),\n     \"Launch_Site\": categorical([0.064, 0.013, 0.013, 0.295, 0.038, 0.013, 0.026, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.026, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.103, 0.179, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2522.616, 2111.786),\n     \"Apogee_km\": gaussian(160960.886, 114816.006),\n     \"Perigee_km\": gaussian(15557.113, 13692.277),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.055, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.127, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(2447.675, 1614.965),\n     \"Inclination_radians\": gaussian(3.507, 8.488),\n     \"Users\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.296, 0.111, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037]),\n     \"Class_of_Orbit\": categorical([0.077, 0.231, 0.615, 0.077]),\n     \"Launch_Site\": categorical([0.147, 0.029, 0.029, 0.029, 0.029, 0.029, 0.088, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.088, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.927, 0.058, 0.014, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.027, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.711, 0.201)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.168, 0.314)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.080, 0.078, 0.364, 0.080, 0.004, 0.188, 0.104, 0.032, 0.069, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1741.623, 568.299),\n     \"Apogee_km\": gaussian(19992.059, 1969.233),\n     \"Perigee_km\": gaussian(19874.660, 1937.874),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.054, 67.340),\n     \"Inclination_radians\": gaussian(1.040, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.930, 48.741),\n     \"Apogee_km\": gaussian(777.057, 8.304),\n     \"Perigee_km\": gaussian(773.351, 11.158),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.362, 0.141),\n     \"Inclination_radians\": gaussian(1.511, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3604.953, 1457.483),\n     \"Apogee_km\": gaussian(35762.932, 1372.173),\n     \"Perigee_km\": gaussian(35661.114, 1426.491),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.465, 50.708),\n     \"Inclination_radians\": gaussian(0.013, 0.080),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(450.854, 195.489),\n     \"Apogee_km\": gaussian(1448.684, 82.398),\n     \"Perigee_km\": gaussian(1421.580, 74.366),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.573, 1.493),\n     \"Inclination_radians\": gaussian(1.124, 0.282),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.010, 0.511),\n     \"Apogee_km\": gaussian(693.915, 8.349),\n     \"Perigee_km\": gaussian(675.852, 1.497),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.697, 0.876),\n     \"Inclination_radians\": gaussian(1.716, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(752.587, 954.481),\n     \"Apogee_km\": gaussian(689.559, 103.698),\n     \"Perigee_km\": gaussian(655.864, 101.414),\n     \"Type_of_Orbit\": categorical([0.908, 0.007, 0.059, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.051, 0.005, 0.042, 0.005, 0.033, 0.019, 0.005, 0.009, 0.005, 0.009, 0.005, 0.028, 0.005, 0.158, 0.009, 0.005, 0.093, 0.005, 0.005, 0.005, 0.047, 0.005, 0.009, 0.005, 0.140, 0.019, 0.028, 0.009, 0.009, 0.033, 0.005, 0.005, 0.005, 0.014, 0.005, 0.014, 0.074, 0.005, 0.009, 0.019, 0.009, 0.009, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.327, 2.068),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.005, 0.032, 0.102, 0.011, 0.005, 0.005, 0.016, 0.433, 0.139, 0.005, 0.011, 0.016, 0.021, 0.155, 0.005, 0.005, 0.011, 0.021]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.149, 0.031, 0.005, 0.191, 0.062, 0.005, 0.041, 0.005, 0.082, 0.005, 0.005, 0.005, 0.072, 0.129, 0.010, 0.005, 0.005, 0.021, 0.005, 0.005, 0.005, 0.072, 0.005, 0.067, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(73.318, 110.128),\n     \"Apogee_km\": gaussian(691.685, 148.188),\n     \"Perigee_km\": gaussian(604.928, 157.676),\n     \"Type_of_Orbit\": categorical([0.405, 0.014, 0.014, 0.514, 0.014, 0.027, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.214, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.043, 0.007, 0.264, 0.007, 0.007, 0.057, 0.007, 0.036, 0.007, 0.014, 0.029, 0.014, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.824, 2.745),\n     \"Inclination_radians\": gaussian(1.047, 0.545),\n     \"Users\": categorical([0.009, 0.071, 0.170, 0.018, 0.009, 0.036, 0.009, 0.152, 0.330, 0.009, 0.009, 0.009, 0.009, 0.116, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.092, 0.017, 0.017, 0.185, 0.008, 0.034, 0.008, 0.008, 0.017, 0.008, 0.034, 0.378, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.025, 0.050, 0.008, 0.008, 0.017, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2189.802, 1595.277),\n     \"Apogee_km\": gaussian(64097.190, 91437.764),\n     \"Perigee_km\": gaussian(15723.868, 15390.082),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1277.628, 1271.700),\n     \"Inclination_radians\": gaussian(0.792, 0.608),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4694.959, 5617.291),\n     \"Apogee_km\": gaussian(966.093, 267.856),\n     \"Perigee_km\": gaussian(760.426, 290.107),\n     \"Type_of_Orbit\": categorical([0.229, 0.021, 0.104, 0.583, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.093, 0.019, 0.102, 0.009, 0.120, 0.009, 0.009, 0.120, 0.009, 0.019, 0.009, 0.037, 0.009, 0.019, 0.009, 0.009, 0.037, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(102.338, 4.658),\n     \"Inclination_radians\": gaussian(1.319, 0.379),\n     \"Users\": categorical([0.013, 0.013, 0.488, 0.013, 0.013, 0.025, 0.013, 0.113, 0.075, 0.013, 0.013, 0.025, 0.050, 0.088, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.909, 0.015, 0.061, 0.015]),\n     \"Launch_Site\": categorical([0.115, 0.011, 0.011, 0.264, 0.034, 0.011, 0.046, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.092, 0.184, 0.011, 0.011, 0.023])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3501.749, 8268.207),\n     \"Apogee_km\": gaussian(22286.728, 62967.858),\n     \"Perigee_km\": gaussian(31579.584, 116237.728),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(853.429, 2853.899),\n     \"Inclination_radians\": gaussian(16.853, 24.238),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.054, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.689, 0.235)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.078, 0.364, 0.132, 0.081, 0.080, 0.004, 0.145, 0.032, 0.082, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(687.480, 48.538),\n     \"Apogee_km\": gaussian(777.367, 8.576),\n     \"Perigee_km\": gaussian(773.525, 11.153),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.356, 0.165),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3570.554, 1513.650),\n     \"Apogee_km\": gaussian(35768.609, 1343.419),\n     \"Perigee_km\": gaussian(35708.348, 1377.203),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1430.233, 55.367),\n     \"Inclination_radians\": gaussian(0.014, 0.078),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(20.832, 22.796),\n     \"Apogee_km\": gaussian(715.136, 125.010),\n     \"Perigee_km\": gaussian(627.980, 121.026),\n     \"Type_of_Orbit\": categorical([0.657, 0.010, 0.010, 0.295, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.006, 0.012, 0.218, 0.006, 0.042, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.042, 0.006, 0.358, 0.006, 0.006, 0.036, 0.006, 0.018, 0.006, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.012, 0.012, 0.006, 0.006, 0.012, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.197, 2.280),\n     \"Inclination_radians\": gaussian(1.255, 0.505),\n     \"Users\": categorical([0.007, 0.058, 0.095, 0.015, 0.007, 0.029, 0.007, 0.073, 0.387, 0.007, 0.015, 0.007, 0.007, 0.248, 0.015, 0.007, 0.007, 0.007]),\n     \"Class_of_Orbit\": categorical([0.976, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.146, 0.014, 0.007, 0.139, 0.007, 0.028, 0.014, 0.007, 0.049, 0.007, 0.007, 0.299, 0.021, 0.125, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.014, 0.028, 0.007, 0.021, 0.007])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(448.062, 195.738),\n     \"Apogee_km\": gaussian(1441.243, 84.118),\n     \"Perigee_km\": gaussian(1419.714, 97.676),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.539, 1.586),\n     \"Inclination_radians\": gaussian(1.126, 0.279),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1751.681, 574.093),\n     \"Apogee_km\": gaussian(19915.531, 1925.461),\n     \"Perigee_km\": gaussian(19747.270, 1919.304),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.581, 67.715),\n     \"Inclination_radians\": gaussian(1.038, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.900, 0.768),\n     \"Apogee_km\": gaussian(694.763, 9.763),\n     \"Perigee_km\": gaussian(675.703, 1.824),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.587, 0.786),\n     \"Inclination_radians\": gaussian(1.714, 0.057),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(874.398, 1002.038),\n     \"Apogee_km\": gaussian(683.049, 119.767),\n     \"Perigee_km\": gaussian(668.013, 123.842),\n     \"Type_of_Orbit\": categorical([0.886, 0.009, 0.070, 0.009, 0.009, 0.009, 0.009]),\n     \"Purpose\": categorical([0.006, 0.056, 0.006, 0.017, 0.006, 0.006, 0.023, 0.006, 0.011, 0.006, 0.011, 0.011, 0.017, 0.006, 0.062, 0.011, 0.006, 0.119, 0.006, 0.006, 0.006, 0.062, 0.006, 0.011, 0.006, 0.169, 0.023, 0.040, 0.011, 0.011, 0.040, 0.006, 0.006, 0.006, 0.017, 0.006, 0.017, 0.090, 0.006, 0.011, 0.023, 0.006, 0.011, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.162, 2.471),\n     \"Inclination_radians\": gaussian(1.713, 0.013),\n     \"Users\": categorical([0.007, 0.027, 0.134, 0.013, 0.007, 0.007, 0.020, 0.544, 0.067, 0.007, 0.007, 0.020, 0.027, 0.060, 0.007, 0.007, 0.013, 0.027]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.115, 0.038, 0.006, 0.237, 0.083, 0.006, 0.051, 0.006, 0.071, 0.006, 0.006, 0.006, 0.077, 0.051, 0.013, 0.006, 0.006, 0.026, 0.006, 0.006, 0.006, 0.077, 0.006, 0.071, 0.013])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2207.784, 1649.595),\n     \"Apogee_km\": gaussian(66080.168, 88872.816),\n     \"Perigee_km\": gaussian(15955.544, 14993.829),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1298.044, 1309.823),\n     \"Inclination_radians\": gaussian(0.771, 0.599),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3667.352, 5439.570),\n     \"Apogee_km\": gaussian(892.550, 280.546),\n     \"Perigee_km\": gaussian(714.836, 270.090),\n     \"Type_of_Orbit\": categorical([0.167, 0.019, 0.111, 0.630, 0.019, 0.037, 0.019]),\n     \"Purpose\": categorical([0.008, 0.017, 0.008, 0.033, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.092, 0.017, 0.092, 0.017, 0.108, 0.025, 0.008, 0.108, 0.033, 0.025, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025]),\n     \"Period_minutes\": gaussian(101.206, 5.018),\n     \"Inclination_radians\": gaussian(1.218, 0.526),\n     \"Users\": categorical([0.011, 0.033, 0.478, 0.011, 0.011, 0.022, 0.011, 0.174, 0.054, 0.011, 0.011, 0.022, 0.043, 0.065, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.923, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.101, 0.010, 0.020, 0.253, 0.020, 0.010, 0.030, 0.010, 0.020, 0.010, 0.040, 0.030, 0.010, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.030, 0.121, 0.152, 0.010, 0.020, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3077.703, 6100.789),\n     \"Apogee_km\": gaussian(21299.784, 59677.460),\n     \"Perigee_km\": gaussian(23789.559, 56835.873),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1024.412, 1586.187),\n     \"Inclination_radians\": gaussian(16.995, 17.236),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.939, 0.046, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.685, 0.216)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.078, 0.364, 0.080, 0.190, 0.080, 0.004, 0.102, 0.032, 0.069, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.587, 49.063),\n     \"Apogee_km\": gaussian(776.836, 8.526),\n     \"Perigee_km\": gaussian(773.469, 10.776),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.358, 0.154),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3622.146, 1486.365),\n     \"Apogee_km\": gaussian(35742.951, 1405.251),\n     \"Perigee_km\": gaussian(35702.670, 1475.222),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.085, 54.353),\n     \"Inclination_radians\": gaussian(0.016, 0.078),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(457.803, 194.770),\n     \"Apogee_km\": gaussian(1444.684, 84.983),\n     \"Perigee_km\": gaussian(1428.860, 72.633),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.548, 1.566),\n     \"Inclination_radians\": gaussian(1.130, 0.272),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(705.878, 1012.319),\n     \"Apogee_km\": gaussian(684.556, 103.686),\n     \"Perigee_km\": gaussian(668.564, 102.305),\n     \"Type_of_Orbit\": categorical([0.909, 0.006, 0.058, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.051, 0.005, 0.046, 0.005, 0.032, 0.018, 0.005, 0.009, 0.005, 0.009, 0.009, 0.028, 0.005, 0.157, 0.009, 0.005, 0.092, 0.005, 0.005, 0.005, 0.051, 0.005, 0.009, 0.005, 0.134, 0.018, 0.028, 0.009, 0.009, 0.032, 0.005, 0.005, 0.005, 0.014, 0.005, 0.014, 0.074, 0.005, 0.009, 0.018, 0.009, 0.009, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.357, 2.142),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.005, 0.032, 0.106, 0.011, 0.005, 0.005, 0.016, 0.429, 0.143, 0.005, 0.011, 0.016, 0.021, 0.153, 0.005, 0.005, 0.011, 0.021]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.158, 0.031, 0.005, 0.184, 0.061, 0.005, 0.046, 0.005, 0.082, 0.005, 0.005, 0.005, 0.071, 0.128, 0.010, 0.005, 0.005, 0.020, 0.005, 0.005, 0.005, 0.071, 0.005, 0.066, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1727.569, 571.894),\n     \"Apogee_km\": gaussian(19965.374, 1976.675),\n     \"Perigee_km\": gaussian(19867.935, 1936.056),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.909, 68.205),\n     \"Inclination_radians\": gaussian(1.039, 0.101),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.991, 0.546),\n     \"Apogee_km\": gaussian(694.510, 8.987),\n     \"Perigee_km\": gaussian(675.808, 1.552),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.638, 0.805),\n     \"Inclination_radians\": gaussian(1.712, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.247, 93.192),\n     \"Apogee_km\": gaussian(691.687, 148.854),\n     \"Perigee_km\": gaussian(606.509, 152.124),\n     \"Type_of_Orbit\": categorical([0.397, 0.014, 0.014, 0.521, 0.014, 0.027, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.210, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.043, 0.007, 0.268, 0.007, 0.007, 0.058, 0.007, 0.036, 0.007, 0.007, 0.029, 0.014, 0.007, 0.029, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022]),\n     \"Period_minutes\": gaussian(97.756, 2.773),\n     \"Inclination_radians\": gaussian(1.028, 0.573),\n     \"Users\": categorical([0.009, 0.073, 0.155, 0.018, 0.009, 0.036, 0.009, 0.155, 0.327, 0.009, 0.009, 0.009, 0.009, 0.127, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.077, 0.017, 0.017, 0.197, 0.009, 0.034, 0.009, 0.009, 0.017, 0.009, 0.034, 0.368, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.026, 0.051, 0.017, 0.009, 0.017, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2225.852, 1576.377),\n     \"Apogee_km\": gaussian(72790.903, 88998.909),\n     \"Perigee_km\": gaussian(15824.752, 15524.555),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1247.823, 1272.958),\n     \"Inclination_radians\": gaussian(0.770, 0.564),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4596.023, 5768.439),\n     \"Apogee_km\": gaussian(956.639, 276.236),\n     \"Perigee_km\": gaussian(763.947, 286.173),\n     \"Type_of_Orbit\": categorical([0.213, 0.021, 0.106, 0.596, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.093, 0.019, 0.102, 0.009, 0.120, 0.009, 0.009, 0.120, 0.009, 0.019, 0.009, 0.037, 0.009, 0.019, 0.009, 0.009, 0.037, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.046, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(102.068, 5.033),\n     \"Inclination_radians\": gaussian(1.304, 0.395),\n     \"Users\": categorical([0.013, 0.013, 0.500, 0.013, 0.013, 0.025, 0.013, 0.113, 0.075, 0.013, 0.013, 0.025, 0.050, 0.075, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.909, 0.015, 0.061, 0.015]),\n     \"Launch_Site\": categorical([0.115, 0.011, 0.011, 0.264, 0.034, 0.011, 0.034, 0.011, 0.023, 0.011, 0.011, 0.034, 0.011, 0.023, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.092, 0.172, 0.011, 0.011, 0.023])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3386.653, 6691.245),\n     \"Apogee_km\": gaussian(23108.743, 38492.851),\n     \"Perigee_km\": gaussian(24767.389, 63477.317),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(940.104, 1715.358),\n     \"Inclination_radians\": gaussian(16.183, 28.398),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.939, 0.046, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.035, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.698, 0.213)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.080, 0.364, 0.065, 0.081, 0.004, 0.120, 0.078, 0.068, 0.032, 0.053, 0.047, 0.001, 0.007]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1729.384, 568.227),\n     \"Apogee_km\": gaussian(20030.194, 1914.329),\n     \"Perigee_km\": gaussian(19768.839, 1947.887),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.347, 65.001),\n     \"Inclination_radians\": gaussian(1.040, 0.109),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3612.197, 1442.912),\n     \"Apogee_km\": gaussian(35741.327, 1387.848),\n     \"Perigee_km\": gaussian(35619.844, 1366.184),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1431.126, 51.680),\n     \"Inclination_radians\": gaussian(0.013, 0.077),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.952, 32.722),\n     \"Apogee_km\": gaussian(792.906, 57.271),\n     \"Perigee_km\": gaussian(676.182, 126.323),\n     \"Type_of_Orbit\": categorical([0.250, 0.019, 0.019, 0.654, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.010, 0.010, 0.019, 0.276, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.057, 0.010, 0.124, 0.010, 0.010, 0.057, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.029]),\n     \"Period_minutes\": gaussian(99.613, 1.368),\n     \"Inclination_radians\": gaussian(1.137, 0.542),\n     \"Users\": categorical([0.013, 0.078, 0.026, 0.013, 0.013, 0.052, 0.013, 0.117, 0.455, 0.013, 0.013, 0.013, 0.013, 0.117, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.071, 0.012, 0.012, 0.250, 0.012, 0.048, 0.012, 0.012, 0.024, 0.012, 0.012, 0.310, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.048, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(468.214, 194.697),\n     \"Apogee_km\": gaussian(1440.874, 81.705),\n     \"Perigee_km\": gaussian(1424.680, 98.828),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.521, 1.586),\n     \"Inclination_radians\": gaussian(1.126, 0.282),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.971, 0.530),\n     \"Apogee_km\": gaussian(694.475, 9.989),\n     \"Perigee_km\": gaussian(675.876, 1.440),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.619, 0.741),\n     \"Inclination_radians\": gaussian(1.713, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(438.042, 698.545),\n     \"Apogee_km\": gaussian(689.198, 58.991),\n     \"Perigee_km\": gaussian(644.624, 47.407),\n     \"Type_of_Orbit\": categorical([0.904, 0.010, 0.048, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.065, 0.006, 0.045, 0.026, 0.006, 0.006, 0.006, 0.013, 0.006, 0.032, 0.006, 0.182, 0.006, 0.006, 0.084, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.156, 0.026, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006, 0.019, 0.071, 0.006, 0.013, 0.026, 0.013, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.036, 0.909),\n     \"Inclination_radians\": gaussian(1.710, 0.011),\n     \"Users\": categorical([0.008, 0.024, 0.032, 0.016, 0.008, 0.008, 0.008, 0.397, 0.183, 0.008, 0.016, 0.008, 0.024, 0.198, 0.008, 0.008, 0.016, 0.032]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.158, 0.038, 0.008, 0.150, 0.038, 0.008, 0.045, 0.008, 0.105, 0.008, 0.008, 0.008, 0.060, 0.188, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.045, 0.008, 0.053, 0.015])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.393, 49.256),\n     \"Apogee_km\": gaussian(777.230, 8.307),\n     \"Perigee_km\": gaussian(773.661, 11.350),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.364, 0.152),\n     \"Inclination_radians\": gaussian(1.511, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(555.358, 552.442),\n     \"Apogee_km\": gaussian(511.224, 48.163),\n     \"Perigee_km\": gaussian(499.324, 46.691),\n     \"Type_of_Orbit\": categorical([0.778, 0.022, 0.067, 0.067, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.290, 0.019, 0.009, 0.056, 0.009, 0.028, 0.009, 0.093, 0.009, 0.019, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.758, 1.063),\n     \"Inclination_radians\": gaussian(1.205, 0.465),\n     \"Users\": categorical([0.013, 0.051, 0.278, 0.025, 0.013, 0.013, 0.038, 0.228, 0.076, 0.013, 0.013, 0.025, 0.025, 0.127, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.105, 0.012, 0.012, 0.047, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.233, 0.081, 0.023, 0.035, 0.012, 0.035, 0.047, 0.012, 0.012, 0.047, 0.105, 0.012, 0.047, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2298.263, 1513.090),\n     \"Apogee_km\": gaussian(68199.191, 87441.339),\n     \"Perigee_km\": gaussian(17027.777, 15610.807),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1262.042, 1294.979),\n     \"Inclination_radians\": gaussian(0.770, 0.577),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1299.703, 1115.474),\n     \"Apogee_km\": gaussian(869.865, 94.391),\n     \"Perigee_km\": gaussian(851.288, 77.487),\n     \"Type_of_Orbit\": categorical([0.569, 0.020, 0.118, 0.235, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.011, 0.117, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.021, 0.011, 0.011, 0.043, 0.021, 0.117, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.074, 0.011, 0.074, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.064, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.194, 1.715),\n     \"Inclination_radians\": gaussian(1.647, 0.131),\n     \"Users\": categorical([0.015, 0.045, 0.273, 0.015, 0.015, 0.015, 0.015, 0.348, 0.045, 0.015, 0.015, 0.045, 0.030, 0.045, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.942, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.137, 0.027, 0.014, 0.219, 0.096, 0.014, 0.027, 0.014, 0.041, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.192, 0.014, 0.027, 0.014])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6855.280, 6048.797),\n     \"Apogee_km\": gaussian(1007.542, 279.363),\n     \"Perigee_km\": gaussian(746.223, 335.935),\n     \"Type_of_Orbit\": categorical([0.303, 0.030, 0.061, 0.515, 0.030, 0.030, 0.030]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.068, 0.011, 0.011, 0.023, 0.148, 0.011, 0.011, 0.148, 0.011, 0.023, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.170, 4.952),\n     \"Inclination_radians\": gaussian(1.276, 0.429),\n     \"Users\": categorical([0.017, 0.017, 0.483, 0.017, 0.017, 0.033, 0.017, 0.117, 0.050, 0.017, 0.017, 0.017, 0.050, 0.067, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.870, 0.022, 0.087, 0.022]),\n     \"Launch_Site\": categorical([0.075, 0.030, 0.015, 0.343, 0.015, 0.015, 0.075, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.119, 0.045, 0.015, 0.015, 0.030])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3841.932, 12055.579),\n     \"Apogee_km\": gaussian(22488.860, 46063.411),\n     \"Perigee_km\": gaussian(22485.612, 39541.865),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(971.513, 1496.784),\n     \"Inclination_radians\": gaussian(18.275, 25.105),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 13) {\n    return {\n     \"Launch_Mass_kg\": gaussian(287.995, 93.377),\n     \"Apogee_km\": gaussian(674.389, 103.574),\n     \"Perigee_km\": gaussian(465.019, 170.352),\n     \"Type_of_Orbit\": categorical([0.111, 0.111, 0.111, 0.222, 0.111, 0.222, 0.111]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(96.342, 2.373),\n     \"Inclination_radians\": gaussian(1.395, 1.391),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.129, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.097, 0.032, 0.032, 0.032, 0.032, 0.032])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.051, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.678, 0.243)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.364, 0.100, 0.078, 0.080, 0.004, 0.016, 0.181, 0.017, 0.081, 0.079, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3600.518, 1421.604),\n     \"Apogee_km\": gaussian(35823.577, 1382.287),\n     \"Perigee_km\": gaussian(35686.257, 1359.481),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1435.218, 52.330),\n     \"Inclination_radians\": gaussian(0.015, 0.079),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(26.676, 26.912),\n     \"Apogee_km\": gaussian(721.083, 175.084),\n     \"Perigee_km\": gaussian(620.020, 140.886),\n     \"Type_of_Orbit\": categorical([0.487, 0.013, 0.013, 0.447, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.015, 0.243, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.029, 0.007, 0.309, 0.007, 0.007, 0.044, 0.007, 0.029, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022]),\n     \"Period_minutes\": gaussian(98.227, 2.650),\n     \"Inclination_radians\": gaussian(1.098, 0.491),\n     \"Users\": categorical([0.009, 0.065, 0.120, 0.019, 0.009, 0.046, 0.009, 0.093, 0.380, 0.009, 0.019, 0.009, 0.009, 0.157, 0.019, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.968, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.122, 0.009, 0.009, 0.183, 0.009, 0.035, 0.017, 0.009, 0.026, 0.009, 0.009, 0.374, 0.009, 0.035, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.035, 0.017, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(680.736, 49.069),\n     \"Apogee_km\": gaussian(776.747, 8.308),\n     \"Perigee_km\": gaussian(773.542, 11.362),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.155),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1710.078, 570.673),\n     \"Apogee_km\": gaussian(19842.606, 1965.379),\n     \"Perigee_km\": gaussian(19758.874, 1926.833),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.052, 64.776),\n     \"Inclination_radians\": gaussian(1.030, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.925, 0.585),\n     \"Apogee_km\": gaussian(694.287, 9.047),\n     \"Perigee_km\": gaussian(675.732, 2.140),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.648, 0.908),\n     \"Inclination_radians\": gaussian(1.711, 0.056),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2726.211, 1200.412),\n     \"Apogee_km\": gaussian(35897.173, 7465.503),\n     \"Perigee_km\": gaussian(22181.958, 19179.141),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.100, 0.017, 0.017, 0.067, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017]),\n     \"Period_minutes\": gaussian(955.631, 584.561),\n     \"Inclination_radians\": gaussian(0.906, 0.486),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.556, 0.333, 0.056]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.077, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.154, 0.026, 0.077, 0.103, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(771.195, 1034.817),\n     \"Apogee_km\": gaussian(690.719, 106.983),\n     \"Perigee_km\": gaussian(661.665, 101.812),\n     \"Type_of_Orbit\": categorical([0.904, 0.007, 0.062, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.053, 0.005, 0.029, 0.005, 0.033, 0.019, 0.005, 0.010, 0.005, 0.010, 0.010, 0.029, 0.005, 0.139, 0.010, 0.005, 0.096, 0.005, 0.005, 0.005, 0.053, 0.005, 0.010, 0.005, 0.144, 0.019, 0.029, 0.010, 0.010, 0.033, 0.005, 0.005, 0.005, 0.014, 0.005, 0.014, 0.077, 0.005, 0.010, 0.019, 0.010, 0.010, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.285, 2.135),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.006, 0.033, 0.110, 0.011, 0.006, 0.006, 0.017, 0.448, 0.122, 0.006, 0.006, 0.017, 0.022, 0.149, 0.006, 0.006, 0.011, 0.022]),\n     \"Class_of_Orbit\": categorical([0.982, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.138, 0.032, 0.005, 0.197, 0.064, 0.005, 0.048, 0.005, 0.080, 0.005, 0.005, 0.005, 0.074, 0.117, 0.011, 0.005, 0.005, 0.021, 0.005, 0.005, 0.005, 0.074, 0.005, 0.069, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1978.194, 1933.878),\n     \"Apogee_km\": gaussian(99897.800, 119234.872),\n     \"Perigee_km\": gaussian(11159.020, 11335.299),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.115, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.131, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(1570.527, 1687.246),\n     \"Inclination_radians\": gaussian(2.498, 6.641),\n     \"Users\": categorical([0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.030, 0.242, 0.212, 0.030, 0.030, 0.030, 0.030, 0.091, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.053, 0.158, 0.474, 0.316]),\n     \"Launch_Site\": categorical([0.150, 0.025, 0.025, 0.025, 0.025, 0.025, 0.175, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.050, 0.075, 0.025, 0.025, 0.025, 0.050])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(455.220, 189.941),\n     \"Apogee_km\": gaussian(1439.353, 82.187),\n     \"Perigee_km\": gaussian(1419.827, 99.611),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.638, 1.532),\n     \"Inclination_radians\": gaussian(1.119, 0.279),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3687.857, 5417.268),\n     \"Apogee_km\": gaussian(878.591, 284.625),\n     \"Perigee_km\": gaussian(740.555, 295.342),\n     \"Type_of_Orbit\": categorical([0.196, 0.020, 0.098, 0.608, 0.020, 0.039, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.034, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.034, 0.009, 0.085, 0.017, 0.094, 0.026, 0.111, 0.017, 0.009, 0.111, 0.034, 0.026, 0.009, 0.043, 0.009, 0.017, 0.009, 0.009, 0.034, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.959, 5.145),\n     \"Inclination_radians\": gaussian(1.259, 0.531),\n     \"Users\": categorical([0.011, 0.022, 0.494, 0.011, 0.011, 0.011, 0.011, 0.180, 0.056, 0.011, 0.011, 0.022, 0.045, 0.056, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.920, 0.013, 0.053, 0.013]),\n     \"Launch_Site\": categorical([0.094, 0.021, 0.021, 0.250, 0.031, 0.010, 0.021, 0.010, 0.021, 0.010, 0.042, 0.031, 0.010, 0.021, 0.021, 0.010, 0.010, 0.010, 0.010, 0.031, 0.104, 0.156, 0.010, 0.021, 0.021])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(103.481, 44.863),\n     \"Apogee_km\": gaussian(520.457, 482.199),\n     \"Perigee_km\": gaussian(499.847, 331.094),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(59.843, 66.516),\n     \"Inclination_radians\": gaussian(1.067, 1.318),\n     \"Users\": categorical([0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.937, 0.047, 0.017]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.641, 0.303)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.069, 0.058, 0.364, 0.173, 0.080, 0.004, 0.165, 0.031, 0.054, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(503.907, 527.898),\n     \"Apogee_km\": gaussian(512.325, 53.438),\n     \"Perigee_km\": gaussian(493.300, 55.427),\n     \"Type_of_Orbit\": categorical([0.767, 0.023, 0.070, 0.070, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.287, 0.019, 0.009, 0.056, 0.009, 0.028, 0.009, 0.093, 0.028, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.765, 0.997),\n     \"Inclination_radians\": gaussian(1.213, 0.549),\n     \"Users\": categorical([0.013, 0.050, 0.300, 0.025, 0.013, 0.013, 0.038, 0.225, 0.075, 0.013, 0.013, 0.025, 0.013, 0.125, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.103, 0.011, 0.011, 0.046, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.230, 0.080, 0.023, 0.023, 0.011, 0.034, 0.034, 0.011, 0.023, 0.046, 0.103, 0.011, 0.046, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(37.895, 28.581),\n     \"Apogee_km\": gaussian(793.599, 53.429),\n     \"Perigee_km\": gaussian(671.506, 134.154),\n     \"Type_of_Orbit\": categorical([0.191, 0.021, 0.021, 0.702, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.020, 0.296, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.041, 0.010, 0.112, 0.010, 0.010, 0.061, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031]),\n     \"Period_minutes\": gaussian(99.644, 1.389),\n     \"Inclination_radians\": gaussian(1.066, 0.520),\n     \"Users\": categorical([0.014, 0.086, 0.014, 0.014, 0.014, 0.057, 0.014, 0.100, 0.471, 0.014, 0.014, 0.014, 0.014, 0.100, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.946, 0.018, 0.018, 0.018]),\n     \"Launch_Site\": categorical([0.052, 0.013, 0.013, 0.247, 0.013, 0.052, 0.013, 0.013, 0.026, 0.013, 0.013, 0.338, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3502.266, 1500.284),\n     \"Apogee_km\": gaussian(35798.909, 1338.304),\n     \"Perigee_km\": gaussian(35655.716, 1423.252),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1432.933, 52.394),\n     \"Inclination_radians\": gaussian(0.016, 0.076),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(587.041, 178.697),\n     \"Apogee_km\": gaussian(1103.925, 325.712),\n     \"Perigee_km\": gaussian(1086.775, 322.822),\n     \"Type_of_Orbit\": categorical([0.006, 0.006, 0.456, 0.513, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.713, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.054, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.334, 7.182),\n     \"Inclination_radians\": gaussian(1.305, 0.259),\n     \"Users\": categorical([0.011, 0.006, 0.155, 0.006, 0.006, 0.006, 0.006, 0.011, 0.276, 0.006, 0.006, 0.006, 0.414, 0.017, 0.006, 0.006, 0.052, 0.006]),\n     \"Class_of_Orbit\": categorical([0.975, 0.006, 0.006, 0.013]),\n     \"Launch_Site\": categorical([0.309, 0.006, 0.006, 0.265, 0.055, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.044, 0.215, 0.006, 0.006, 0.006])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1731.250, 536.857),\n     \"Apogee_km\": gaussian(19888.711, 2021.869),\n     \"Perigee_km\": gaussian(19818.054, 1943.183),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.882, 67.968),\n     \"Inclination_radians\": gaussian(1.043, 0.108),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.967, 0.387),\n     \"Apogee_km\": gaussian(693.996, 8.423),\n     \"Perigee_km\": gaussian(675.850, 1.651),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.463, 0.509),\n     \"Inclination_radians\": gaussian(1.715, 0.067),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(723.903, 1040.171),\n     \"Apogee_km\": gaussian(721.797, 81.817),\n     \"Perigee_km\": gaussian(684.989, 83.658),\n     \"Type_of_Orbit\": categorical([0.901, 0.007, 0.063, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.056, 0.005, 0.051, 0.005, 0.036, 0.021, 0.005, 0.010, 0.005, 0.010, 0.010, 0.031, 0.005, 0.159, 0.005, 0.005, 0.077, 0.005, 0.005, 0.005, 0.021, 0.005, 0.010, 0.005, 0.149, 0.021, 0.031, 0.010, 0.010, 0.005, 0.005, 0.005, 0.005, 0.015, 0.005, 0.015, 0.082, 0.005, 0.010, 0.021, 0.010, 0.010, 0.015, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.741, 1.701),\n     \"Inclination_radians\": gaussian(1.713, 0.011),\n     \"Users\": categorical([0.006, 0.030, 0.078, 0.012, 0.006, 0.006, 0.006, 0.419, 0.162, 0.006, 0.012, 0.012, 0.024, 0.174, 0.006, 0.006, 0.012, 0.024]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.167, 0.034, 0.006, 0.195, 0.052, 0.006, 0.052, 0.006, 0.092, 0.006, 0.006, 0.006, 0.046, 0.144, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.052, 0.006, 0.063, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2195.315, 1569.993),\n     \"Apogee_km\": gaussian(75325.149, 92587.814),\n     \"Perigee_km\": gaussian(16677.756, 15307.638),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.081, 0.014, 0.014, 0.122, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.014, 0.108, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.054, 0.014]),\n     \"Period_minutes\": gaussian(1231.764, 1204.335),\n     \"Inclination_radians\": gaussian(0.756, 0.590),\n     \"Users\": categorical([0.022, 0.022, 0.304, 0.022, 0.022, 0.022, 0.022, 0.217, 0.130, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.063, 0.344, 0.438, 0.156]),\n     \"Launch_Site\": categorical([0.094, 0.019, 0.019, 0.057, 0.019, 0.019, 0.113, 0.019, 0.038, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.113, 0.038, 0.094, 0.075, 0.019, 0.038, 0.038])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5532.360, 6234.074),\n     \"Apogee_km\": gaussian(996.266, 299.354),\n     \"Perigee_km\": gaussian(723.857, 326.376),\n     \"Type_of_Orbit\": categorical([0.306, 0.028, 0.056, 0.500, 0.028, 0.056, 0.028]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.032, 0.011, 0.095, 0.021, 0.011, 0.032, 0.137, 0.011, 0.011, 0.116, 0.021, 0.021, 0.011, 0.053, 0.011, 0.021, 0.011, 0.011, 0.042, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.273, 5.047),\n     \"Inclination_radians\": gaussian(1.338, 0.505),\n     \"Users\": categorical([0.015, 0.015, 0.448, 0.015, 0.015, 0.030, 0.015, 0.194, 0.015, 0.015, 0.015, 0.030, 0.045, 0.075, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.887, 0.019, 0.075, 0.019]),\n     \"Launch_Site\": categorical([0.081, 0.027, 0.027, 0.365, 0.027, 0.014, 0.041, 0.014, 0.027, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.108, 0.041, 0.014, 0.014, 0.027])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3097.705, 7878.091),\n     \"Apogee_km\": gaussian(22549.750, 40327.100),\n     \"Perigee_km\": gaussian(22886.104, 44798.407),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1127.890, 1878.638),\n     \"Inclination_radians\": gaussian(18.298, 28.927),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.932, 0.052, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.675, 0.251)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.105, 0.071, 0.364, 0.078, 0.080, 0.004, 0.016, 0.118, 0.080, 0.067, 0.014, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2762.357, 5144.136),\n     \"Apogee_km\": gaussian(913.398, 231.859),\n     \"Perigee_km\": gaussian(768.349, 233.952),\n     \"Type_of_Orbit\": categorical([0.185, 0.012, 0.037, 0.728, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.007, 0.007, 0.220, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.028, 0.007, 0.064, 0.014, 0.078, 0.057, 0.092, 0.007, 0.007, 0.078, 0.007, 0.014, 0.007, 0.043, 0.007, 0.007, 0.007, 0.007, 0.028, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(102.004, 3.918),\n     \"Inclination_radians\": gaussian(1.104, 0.457),\n     \"Users\": categorical([0.009, 0.053, 0.336, 0.009, 0.009, 0.018, 0.009, 0.142, 0.265, 0.009, 0.009, 0.018, 0.035, 0.044, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.939, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.075, 0.017, 0.017, 0.267, 0.017, 0.008, 0.025, 0.008, 0.025, 0.008, 0.008, 0.217, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.083, 0.108, 0.008, 0.008, 0.017])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.223, 14.418),\n     \"Apogee_km\": gaussian(720.850, 90.783),\n     \"Perigee_km\": gaussian(593.771, 75.914),\n     \"Type_of_Orbit\": categorical([0.807, 0.018, 0.035, 0.088, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.091, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.064, 0.009, 0.345, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.862, 0.926),\n     \"Inclination_radians\": gaussian(1.647, 0.272),\n     \"Users\": categorical([0.012, 0.024, 0.024, 0.012, 0.012, 0.049, 0.012, 0.098, 0.293, 0.012, 0.024, 0.012, 0.012, 0.354, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.191, 0.022, 0.011, 0.146, 0.011, 0.045, 0.022, 0.011, 0.090, 0.011, 0.011, 0.011, 0.045, 0.213, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.022, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3657.411, 1499.179),\n     \"Apogee_km\": gaussian(35748.648, 1378.072),\n     \"Perigee_km\": gaussian(35734.473, 1417.821),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.114, 55.280),\n     \"Inclination_radians\": gaussian(0.013, 0.076),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.969, 49.300),\n     \"Apogee_km\": gaussian(777.200, 8.416),\n     \"Perigee_km\": gaussian(773.010, 10.838),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.369, 0.148),\n     \"Inclination_radians\": gaussian(1.509, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1724.072, 545.939),\n     \"Apogee_km\": gaussian(19949.950, 1892.543),\n     \"Perigee_km\": gaussian(19818.999, 1881.307),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.467, 67.541),\n     \"Inclination_radians\": gaussian(1.041, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.996, 0.631),\n     \"Apogee_km\": gaussian(694.621, 9.250),\n     \"Perigee_km\": gaussian(675.871, 1.520),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.690, 0.933),\n     \"Inclination_radians\": gaussian(1.715, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2777.070, 1237.448),\n     \"Apogee_km\": gaussian(35872.975, 7340.453),\n     \"Perigee_km\": gaussian(21499.029, 17772.124),\n     \"Type_of_Orbit\": categorical([0.083, 0.083, 0.083, 0.083, 0.500, 0.083, 0.083]),\n     \"Purpose\": categorical([0.100, 0.017, 0.017, 0.067, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.033, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.067, 0.017]),\n     \"Period_minutes\": gaussian(962.862, 553.932),\n     \"Inclination_radians\": gaussian(0.918, 0.482),\n     \"Users\": categorical([0.031, 0.031, 0.406, 0.031, 0.031, 0.031, 0.031, 0.094, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.556, 0.333, 0.056]),\n     \"Launch_Site\": categorical([0.026, 0.026, 0.026, 0.077, 0.026, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.051, 0.026, 0.026, 0.026, 0.026, 0.026, 0.154, 0.026, 0.077, 0.103, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1000.142, 1111.675),\n     \"Apogee_km\": gaussian(731.456, 85.557),\n     \"Perigee_km\": gaussian(716.670, 85.332),\n     \"Type_of_Orbit\": categorical([0.870, 0.010, 0.080, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.007, 0.072, 0.007, 0.020, 0.007, 0.007, 0.026, 0.007, 0.013, 0.007, 0.007, 0.013, 0.020, 0.007, 0.053, 0.007, 0.007, 0.099, 0.007, 0.007, 0.007, 0.026, 0.007, 0.013, 0.007, 0.178, 0.026, 0.046, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.020, 0.105, 0.007, 0.013, 0.026, 0.013, 0.007, 0.020, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(99.228, 1.765),\n     \"Inclination_radians\": gaussian(1.715, 0.012),\n     \"Users\": categorical([0.008, 0.032, 0.105, 0.016, 0.008, 0.008, 0.008, 0.532, 0.089, 0.008, 0.008, 0.016, 0.024, 0.073, 0.008, 0.008, 0.016, 0.032]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.145, 0.038, 0.008, 0.260, 0.076, 0.008, 0.061, 0.008, 0.069, 0.008, 0.008, 0.008, 0.038, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.061, 0.008, 0.076, 0.015])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(444.783, 194.819),\n     \"Apogee_km\": gaussian(1444.418, 85.753),\n     \"Perigee_km\": gaussian(1426.755, 75.099),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.636, 1.573),\n     \"Inclination_radians\": gaussian(1.121, 0.291),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(531.685, 534.309),\n     \"Apogee_km\": gaussian(514.258, 56.453),\n     \"Perigee_km\": gaussian(489.985, 51.846),\n     \"Type_of_Orbit\": categorical([0.744, 0.023, 0.070, 0.070, 0.023, 0.047, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.255, 0.019, 0.009, 0.057, 0.009, 0.028, 0.009, 0.094, 0.038, 0.019, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.066, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.038, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.718, 0.997),\n     \"Inclination_radians\": gaussian(1.257, 0.564),\n     \"Users\": categorical([0.013, 0.051, 0.321, 0.026, 0.013, 0.013, 0.038, 0.231, 0.064, 0.013, 0.013, 0.026, 0.026, 0.090, 0.026, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.953, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.071, 0.012, 0.012, 0.047, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.047, 0.235, 0.082, 0.024, 0.035, 0.012, 0.035, 0.047, 0.012, 0.012, 0.047, 0.094, 0.012, 0.047, 0.012])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1796.140, 1926.202),\n     \"Apogee_km\": gaussian(103222.360, 117406.124),\n     \"Perigee_km\": gaussian(13474.466, 11363.021),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.119, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.119, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(1814.827, 1683.552),\n     \"Inclination_radians\": gaussian(2.667, 7.150),\n     \"Users\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.258, 0.226, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.059, 0.176, 0.471, 0.294]),\n     \"Launch_Site\": categorical([0.132, 0.026, 0.026, 0.026, 0.026, 0.026, 0.184, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.053, 0.079, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(105.623, 77.946),\n     \"Apogee_km\": gaussian(2590.631, 3301.609),\n     \"Perigee_km\": gaussian(795.416, 1005.514),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(104.529, 68.729),\n     \"Inclination_radians\": gaussian(1.160, 0.498),\n     \"Users\": categorical([0.048, 0.048, 0.095, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.143, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.286, 0.143, 0.286, 0.286]),\n     \"Launch_Site\": categorical([0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.071])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.935, 0.047, 0.013, 0.003, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.727, 0.195)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.301, 0.417)\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Eccentricity\": gaussian(0.014, 0.121)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.998, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.001, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.001, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.416, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.078, 0.189, 0.364, 0.081, 0.080, 0.004, 0.095, 0.032, 0.073, 0.001, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.066, 50.272),\n     \"Apogee_km\": gaussian(777.372, 8.184),\n     \"Perigee_km\": gaussian(773.324, 11.358),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.155),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(732.039, 997.440),\n     \"Apogee_km\": gaussian(689.567, 105.265),\n     \"Perigee_km\": gaussian(660.064, 104.684),\n     \"Type_of_Orbit\": categorical([0.915, 0.007, 0.052, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.046, 0.005, 0.042, 0.005, 0.032, 0.019, 0.005, 0.009, 0.005, 0.009, 0.009, 0.028, 0.005, 0.157, 0.009, 0.005, 0.093, 0.005, 0.005, 0.005, 0.051, 0.005, 0.009, 0.005, 0.139, 0.019, 0.028, 0.009, 0.009, 0.032, 0.005, 0.005, 0.005, 0.014, 0.005, 0.014, 0.074, 0.005, 0.009, 0.019, 0.009, 0.009, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.232, 2.063),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.005, 0.027, 0.106, 0.011, 0.005, 0.005, 0.016, 0.431, 0.144, 0.005, 0.011, 0.016, 0.021, 0.154, 0.005, 0.005, 0.011, 0.021]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.149, 0.031, 0.005, 0.190, 0.062, 0.005, 0.046, 0.005, 0.082, 0.005, 0.005, 0.005, 0.072, 0.128, 0.010, 0.005, 0.005, 0.021, 0.005, 0.005, 0.005, 0.072, 0.005, 0.067, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3627.826, 1453.483),\n     \"Apogee_km\": gaussian(35740.037, 1366.554),\n     \"Perigee_km\": gaussian(35723.464, 1337.400),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.240, 53.223),\n     \"Inclination_radians\": gaussian(0.018, 0.077),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(445.209, 193.353),\n     \"Apogee_km\": gaussian(1443.783, 84.466),\n     \"Perigee_km\": gaussian(1420.525, 94.183),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.584, 1.503),\n     \"Inclination_radians\": gaussian(1.129, 0.260),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1737.072, 565.306),\n     \"Apogee_km\": gaussian(19892.186, 1956.164),\n     \"Perigee_km\": gaussian(19899.756, 1945.209),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.003, 68.435),\n     \"Inclination_radians\": gaussian(1.033, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.961, 0.572),\n     \"Apogee_km\": gaussian(694.553, 9.763),\n     \"Perigee_km\": gaussian(675.933, 1.458),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.678, 0.977),\n     \"Inclination_radians\": gaussian(1.714, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(38.561, 37.568),\n     \"Apogee_km\": gaussian(703.025, 154.487),\n     \"Perigee_km\": gaussian(630.190, 157.406),\n     \"Type_of_Orbit\": categorical([0.431, 0.014, 0.014, 0.500, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.008, 0.015, 0.227, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.038, 0.008, 0.280, 0.015, 0.008, 0.061, 0.008, 0.030, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023]),\n     \"Period_minutes\": gaussian(98.216, 2.891),\n     \"Inclination_radians\": gaussian(1.037, 0.477),\n     \"Users\": categorical([0.010, 0.067, 0.125, 0.019, 0.010, 0.038, 0.010, 0.144, 0.346, 0.010, 0.010, 0.019, 0.010, 0.135, 0.019, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.108, 0.018, 0.009, 0.189, 0.009, 0.036, 0.009, 0.009, 0.018, 0.009, 0.009, 0.387, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.018, 0.045, 0.018, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2214.658, 1467.439),\n     \"Apogee_km\": gaussian(70076.148, 85394.004),\n     \"Perigee_km\": gaussian(15445.703, 15569.575),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1294.602, 1279.135),\n     \"Inclination_radians\": gaussian(0.792, 0.570),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4381.072, 5732.979),\n     \"Apogee_km\": gaussian(920.858, 286.940),\n     \"Perigee_km\": gaussian(724.398, 300.768),\n     \"Type_of_Orbit\": categorical([0.170, 0.021, 0.106, 0.617, 0.021, 0.043, 0.021]),\n     \"Purpose\": categorical([0.009, 0.018, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.089, 0.009, 0.098, 0.009, 0.116, 0.018, 0.009, 0.116, 0.036, 0.027, 0.009, 0.036, 0.009, 0.018, 0.009, 0.009, 0.036, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.045, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(101.299, 5.042),\n     \"Inclination_radians\": gaussian(1.267, 0.526),\n     \"Users\": categorical([0.012, 0.036, 0.524, 0.012, 0.012, 0.024, 0.012, 0.119, 0.060, 0.012, 0.012, 0.012, 0.036, 0.071, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.914, 0.014, 0.057, 0.014]),\n     \"Launch_Site\": categorical([0.077, 0.011, 0.022, 0.264, 0.022, 0.011, 0.033, 0.011, 0.022, 0.011, 0.044, 0.033, 0.011, 0.022, 0.022, 0.011, 0.011, 0.011, 0.011, 0.022, 0.099, 0.165, 0.011, 0.022, 0.022])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2977.899, 5646.680),\n     \"Apogee_km\": gaussian(25759.210, 44887.929),\n     \"Perigee_km\": gaussian(24971.068, 52381.278),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(986.548, 1566.372),\n     \"Inclination_radians\": gaussian(17.391, 19.261),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(603.974, 451.083),\n     \"Apogee_km\": gaussian(716.571, 11.700),\n     \"Perigee_km\": gaussian(702.680, 31.649),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.382, 1.234),\n     \"Inclination_radians\": gaussian(1.587, 0.160),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.926, 0.058, 0.017]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.705, 0.215)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.080, 0.364, 0.060, 0.080, 0.004, 0.139, 0.078, 0.070, 0.032, 0.092, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(456.491, 199.446),\n     \"Apogee_km\": gaussian(1443.030, 86.893),\n     \"Perigee_km\": gaussian(1427.116, 72.570),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.647, 1.602),\n     \"Inclination_radians\": gaussian(1.140, 0.280),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3520.741, 1480.622),\n     \"Apogee_km\": gaussian(35753.097, 1382.311),\n     \"Perigee_km\": gaussian(35743.711, 1377.414),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1429.803, 52.755),\n     \"Inclination_radians\": gaussian(0.016, 0.077),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.474, 33.203),\n     \"Apogee_km\": gaussian(796.342, 58.435),\n     \"Perigee_km\": gaussian(687.790, 137.027),\n     \"Type_of_Orbit\": categorical([0.204, 0.020, 0.020, 0.694, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.010, 0.010, 0.020, 0.290, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.050, 0.010, 0.110, 0.010, 0.010, 0.060, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.030]),\n     \"Period_minutes\": gaussian(99.664, 1.443),\n     \"Inclination_radians\": gaussian(1.095, 0.541),\n     \"Users\": categorical([0.014, 0.083, 0.014, 0.014, 0.014, 0.056, 0.014, 0.111, 0.472, 0.014, 0.014, 0.014, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.063, 0.013, 0.013, 0.253, 0.013, 0.051, 0.013, 0.013, 0.025, 0.013, 0.013, 0.329, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1713.652, 543.708),\n     \"Apogee_km\": gaussian(19888.800, 1907.259),\n     \"Perigee_km\": gaussian(19814.264, 2023.044),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.424, 69.011),\n     \"Inclination_radians\": gaussian(1.043, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.985, 0.579),\n     \"Apogee_km\": gaussian(694.492, 8.072),\n     \"Perigee_km\": gaussian(675.873, 1.353),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.654, 0.783),\n     \"Inclination_radians\": gaussian(1.717, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(495.848, 775.731),\n     \"Apogee_km\": gaussian(702.700, 67.328),\n     \"Perigee_km\": gaussian(662.892, 66.543),\n     \"Type_of_Orbit\": categorical([0.916, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.058, 0.006, 0.041, 0.023, 0.006, 0.012, 0.006, 0.012, 0.006, 0.035, 0.006, 0.181, 0.006, 0.006, 0.082, 0.006, 0.006, 0.006, 0.012, 0.006, 0.012, 0.006, 0.164, 0.023, 0.012, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.018, 0.006, 0.018, 0.076, 0.006, 0.012, 0.023, 0.012, 0.006, 0.018, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(98.464, 1.297),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.007, 0.021, 0.028, 0.014, 0.007, 0.007, 0.007, 0.420, 0.182, 0.007, 0.014, 0.007, 0.021, 0.203, 0.007, 0.007, 0.014, 0.028]),\n     \"Class_of_Orbit\": categorical([0.977, 0.008, 0.008, 0.008]),\n     \"Launch_Site\": categorical([0.167, 0.040, 0.007, 0.133, 0.047, 0.007, 0.047, 0.007, 0.107, 0.007, 0.007, 0.007, 0.053, 0.167, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.060, 0.007, 0.073, 0.013])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.659, 47.614),\n     \"Apogee_km\": gaussian(777.199, 8.394),\n     \"Perigee_km\": gaussian(773.288, 10.835),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.156),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(508.424, 536.352),\n     \"Apogee_km\": gaussian(511.644, 49.190),\n     \"Perigee_km\": gaussian(487.447, 52.649),\n     \"Type_of_Orbit\": categorical([0.778, 0.022, 0.067, 0.067, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.284, 0.018, 0.009, 0.055, 0.009, 0.028, 0.009, 0.092, 0.028, 0.018, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.018, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.780, 1.016),\n     \"Inclination_radians\": gaussian(1.239, 0.536),\n     \"Users\": categorical([0.012, 0.049, 0.296, 0.025, 0.012, 0.012, 0.037, 0.222, 0.074, 0.012, 0.012, 0.025, 0.025, 0.123, 0.025, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.102, 0.011, 0.011, 0.045, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.227, 0.080, 0.023, 0.034, 0.011, 0.034, 0.045, 0.011, 0.011, 0.045, 0.102, 0.011, 0.045, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2254.719, 1510.750),\n     \"Apogee_km\": gaussian(64708.770, 91108.245),\n     \"Perigee_km\": gaussian(16948.518, 15430.222),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1316.616, 1233.630),\n     \"Inclination_radians\": gaussian(0.769, 0.585),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3781.073, 5187.617),\n     \"Apogee_km\": gaussian(945.610, 232.632),\n     \"Perigee_km\": gaussian(781.948, 259.814),\n     \"Type_of_Orbit\": categorical([0.382, 0.015, 0.103, 0.441, 0.015, 0.029, 0.015]),\n     \"Purpose\": categorical([0.008, 0.085, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.070, 0.016, 0.085, 0.031, 0.101, 0.008, 0.008, 0.101, 0.016, 0.016, 0.008, 0.039, 0.008, 0.047, 0.008, 0.016, 0.031, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.047, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(102.212, 4.250),\n     \"Inclination_radians\": gaussian(1.399, 0.469),\n     \"Users\": categorical([0.010, 0.030, 0.485, 0.010, 0.010, 0.020, 0.010, 0.218, 0.040, 0.010, 0.010, 0.030, 0.040, 0.040, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.931, 0.011, 0.046, 0.011]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.361, 0.046, 0.009, 0.046, 0.009, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.074, 0.120, 0.009, 0.009, 0.019])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3251.358, 6697.675),\n     \"Apogee_km\": gaussian(24986.025, 69984.504),\n     \"Perigee_km\": gaussian(25101.138, 39203.613),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(988.062, 1690.068),\n     \"Inclination_radians\": gaussian(22.123, 111.126),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.925, 0.060, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.691, 0.204)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.179, 0.364, 0.060, 0.080, 0.006, 0.161, 0.069, 0.031, 0.050, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(584.004, 180.974),\n     \"Apogee_km\": gaussian(1104.795, 344.855),\n     \"Perigee_km\": gaussian(1076.066, 333.105),\n     \"Type_of_Orbit\": categorical([0.006, 0.006, 0.453, 0.516, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.705, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.053, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.237, 7.465),\n     \"Inclination_radians\": gaussian(1.316, 0.271),\n     \"Users\": categorical([0.011, 0.006, 0.156, 0.006, 0.006, 0.006, 0.006, 0.022, 0.279, 0.006, 0.006, 0.006, 0.402, 0.017, 0.006, 0.006, 0.050, 0.006]),\n     \"Class_of_Orbit\": categorical([0.970, 0.006, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.317, 0.005, 0.005, 0.269, 0.054, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.043, 0.210, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3631.089, 1476.821),\n     \"Apogee_km\": gaussian(35750.656, 1409.489),\n     \"Perigee_km\": gaussian(35662.376, 1359.512),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.543, 52.075),\n     \"Inclination_radians\": gaussian(0.017, 0.080),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.032, 27.754),\n     \"Apogee_km\": gaussian(800.919, 53.336),\n     \"Perigee_km\": gaussian(680.901, 136.491),\n     \"Type_of_Orbit\": categorical([0.250, 0.021, 0.021, 0.646, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.020, 0.290, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.120, 0.010, 0.010, 0.060, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.030]),\n     \"Period_minutes\": gaussian(99.699, 1.376),\n     \"Inclination_radians\": gaussian(1.126, 0.534),\n     \"Users\": categorical([0.014, 0.083, 0.028, 0.014, 0.014, 0.056, 0.014, 0.097, 0.472, 0.014, 0.014, 0.014, 0.014, 0.097, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.948, 0.017, 0.017, 0.017]),\n     \"Launch_Site\": categorical([0.063, 0.013, 0.013, 0.253, 0.013, 0.051, 0.013, 0.013, 0.025, 0.013, 0.013, 0.329, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1715.424, 570.586),\n     \"Apogee_km\": gaussian(20008.490, 1934.233),\n     \"Perigee_km\": gaussian(19855.662, 1967.378),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(710.871, 66.722),\n     \"Inclination_radians\": gaussian(1.038, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.993, 0.533),\n     \"Apogee_km\": gaussian(694.073, 7.596),\n     \"Perigee_km\": gaussian(678.884, 8.257),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.496, 0.456),\n     \"Inclination_radians\": gaussian(1.715, 0.056),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.200, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(773.342, 1070.805),\n     \"Apogee_km\": gaussian(719.058, 82.973),\n     \"Perigee_km\": gaussian(687.696, 92.967),\n     \"Type_of_Orbit\": categorical([0.898, 0.007, 0.066, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.058, 0.005, 0.042, 0.005, 0.037, 0.021, 0.005, 0.010, 0.005, 0.010, 0.010, 0.031, 0.005, 0.162, 0.005, 0.005, 0.079, 0.005, 0.005, 0.005, 0.021, 0.005, 0.010, 0.005, 0.152, 0.021, 0.037, 0.010, 0.010, 0.005, 0.005, 0.005, 0.005, 0.016, 0.005, 0.016, 0.079, 0.005, 0.010, 0.021, 0.010, 0.005, 0.010, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.957, 1.808),\n     \"Inclination_radians\": gaussian(1.714, 0.011),\n     \"Users\": categorical([0.006, 0.031, 0.080, 0.012, 0.006, 0.006, 0.006, 0.423, 0.147, 0.006, 0.012, 0.012, 0.025, 0.178, 0.006, 0.006, 0.012, 0.025]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.153, 0.035, 0.006, 0.200, 0.059, 0.006, 0.047, 0.006, 0.094, 0.006, 0.006, 0.006, 0.047, 0.147, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.053, 0.006, 0.065, 0.012])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(472.785, 537.751),\n     \"Apogee_km\": gaussian(515.362, 51.250),\n     \"Perigee_km\": gaussian(492.338, 51.079),\n     \"Type_of_Orbit\": categorical([0.773, 0.023, 0.068, 0.068, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.287, 0.019, 0.009, 0.056, 0.009, 0.028, 0.009, 0.093, 0.028, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.771, 0.979),\n     \"Inclination_radians\": gaussian(1.231, 0.529),\n     \"Users\": categorical([0.013, 0.050, 0.300, 0.025, 0.013, 0.013, 0.038, 0.225, 0.075, 0.013, 0.013, 0.025, 0.013, 0.125, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.103, 0.011, 0.011, 0.046, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.230, 0.080, 0.023, 0.023, 0.011, 0.034, 0.046, 0.011, 0.011, 0.046, 0.103, 0.011, 0.046, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2178.577, 1454.551),\n     \"Apogee_km\": gaussian(74025.719, 88782.198),\n     \"Perigee_km\": gaussian(16402.600, 15639.336),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.081, 0.014, 0.014, 0.122, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.014, 0.108, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.054, 0.014]),\n     \"Period_minutes\": gaussian(1333.672, 1263.324),\n     \"Inclination_radians\": gaussian(0.747, 0.590),\n     \"Users\": categorical([0.022, 0.022, 0.304, 0.022, 0.022, 0.022, 0.022, 0.217, 0.130, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.063, 0.344, 0.438, 0.156]),\n     \"Launch_Site\": categorical([0.094, 0.019, 0.019, 0.057, 0.019, 0.019, 0.113, 0.019, 0.038, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.113, 0.038, 0.094, 0.075, 0.019, 0.038, 0.038])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5829.259, 6357.127),\n     \"Apogee_km\": gaussian(964.703, 293.834),\n     \"Perigee_km\": gaussian(744.011, 325.472),\n     \"Type_of_Orbit\": categorical([0.314, 0.029, 0.029, 0.514, 0.029, 0.057, 0.029]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.044, 0.011, 0.077, 0.022, 0.011, 0.033, 0.143, 0.011, 0.011, 0.121, 0.022, 0.022, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(101.893, 5.128),\n     \"Inclination_radians\": gaussian(1.242, 0.530),\n     \"Users\": categorical([0.016, 0.016, 0.444, 0.016, 0.016, 0.032, 0.016, 0.175, 0.016, 0.016, 0.016, 0.032, 0.048, 0.079, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.898, 0.020, 0.061, 0.020]),\n     \"Launch_Site\": categorical([0.071, 0.029, 0.029, 0.343, 0.014, 0.014, 0.043, 0.014, 0.029, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.043, 0.114, 0.043, 0.014, 0.014, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3069.983, 6801.193),\n     \"Apogee_km\": gaussian(20368.345, 65190.947),\n     \"Perigee_km\": gaussian(22570.896, 50630.859),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1076.682, 3339.902),\n     \"Inclination_radians\": gaussian(17.075, 28.432),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.931, 0.053, 0.014, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.720, 0.181)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.191, 0.246)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.032, 0.364, 0.078, 0.080, 0.080, 0.004, 0.172, 0.082, 0.107, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2293.785, 1589.825),\n     \"Apogee_km\": gaussian(73575.074, 88037.553),\n     \"Perigee_km\": gaussian(15567.182, 15267.912),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1277.572, 1351.733),\n     \"Inclination_radians\": gaussian(0.789, 0.566),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3659.440, 1552.703),\n     \"Apogee_km\": gaussian(35759.942, 1401.684),\n     \"Perigee_km\": gaussian(35595.936, 1414.860),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1433.391, 51.848),\n     \"Inclination_radians\": gaussian(0.013, 0.078),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.696, 48.391),\n     \"Apogee_km\": gaussian(777.711, 7.986),\n     \"Perigee_km\": gaussian(773.448, 11.183),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.147),\n     \"Inclination_radians\": gaussian(1.508, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(460.160, 194.051),\n     \"Apogee_km\": gaussian(1445.456, 85.115),\n     \"Perigee_km\": gaussian(1426.580, 76.289),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.574, 1.523),\n     \"Inclination_radians\": gaussian(1.144, 0.281),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1747.558, 574.482),\n     \"Apogee_km\": gaussian(19990.380, 1963.631),\n     \"Perigee_km\": gaussian(19839.600, 1917.803),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.378, 69.459),\n     \"Inclination_radians\": gaussian(1.034, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.985, 0.688),\n     \"Apogee_km\": gaussian(694.446, 8.565),\n     \"Perigee_km\": gaussian(675.820, 1.536),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.660, 0.710),\n     \"Inclination_radians\": gaussian(1.711, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(714.010, 957.969),\n     \"Apogee_km\": gaussian(711.108, 88.132),\n     \"Perigee_km\": gaussian(669.406, 90.532),\n     \"Type_of_Orbit\": categorical([0.918, 0.007, 0.048, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.045, 0.005, 0.050, 0.005, 0.035, 0.020, 0.005, 0.010, 0.005, 0.010, 0.010, 0.030, 0.005, 0.154, 0.010, 0.005, 0.075, 0.005, 0.005, 0.005, 0.050, 0.005, 0.010, 0.005, 0.144, 0.020, 0.030, 0.010, 0.010, 0.010, 0.005, 0.005, 0.005, 0.015, 0.005, 0.015, 0.080, 0.005, 0.010, 0.020, 0.010, 0.010, 0.015, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.600, 1.764),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.006, 0.023, 0.087, 0.012, 0.006, 0.006, 0.006, 0.434, 0.156, 0.006, 0.012, 0.012, 0.023, 0.168, 0.006, 0.006, 0.012, 0.023]),\n     \"Class_of_Orbit\": categorical([0.981, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.150, 0.033, 0.006, 0.194, 0.050, 0.006, 0.050, 0.006, 0.089, 0.006, 0.006, 0.006, 0.072, 0.139, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.050, 0.006, 0.072, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(272.333, 373.829),\n     \"Apogee_km\": gaussian(589.919, 150.091),\n     \"Perigee_km\": gaussian(488.237, 68.575),\n     \"Type_of_Orbit\": categorical([0.690, 0.024, 0.071, 0.119, 0.024, 0.048, 0.024]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008, 0.358, 0.008, 0.008, 0.067, 0.008, 0.033, 0.008, 0.033, 0.033, 0.017, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(95.539, 1.734),\n     \"Inclination_radians\": gaussian(1.219, 0.641),\n     \"Users\": categorical([0.011, 0.033, 0.272, 0.022, 0.011, 0.043, 0.033, 0.196, 0.109, 0.011, 0.011, 0.022, 0.011, 0.163, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.091, 0.020, 0.020, 0.172, 0.040, 0.030, 0.010, 0.010, 0.010, 0.010, 0.040, 0.202, 0.020, 0.020, 0.020, 0.010, 0.030, 0.030, 0.010, 0.030, 0.040, 0.091, 0.010, 0.020, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2885.323, 4994.663),\n     \"Apogee_km\": gaussian(923.010, 212.612),\n     \"Perigee_km\": gaussian(804.668, 220.338),\n     \"Type_of_Orbit\": categorical([0.176, 0.012, 0.059, 0.718, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.021, 0.014, 0.232, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.049, 0.014, 0.077, 0.042, 0.092, 0.014, 0.007, 0.077, 0.007, 0.014, 0.007, 0.042, 0.007, 0.014, 0.007, 0.007, 0.028, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(101.949, 3.741),\n     \"Inclination_radians\": gaussian(1.152, 0.417),\n     \"Users\": categorical([0.009, 0.070, 0.325, 0.009, 0.009, 0.018, 0.009, 0.123, 0.281, 0.009, 0.009, 0.018, 0.035, 0.044, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.940, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.116, 0.008, 0.008, 0.248, 0.025, 0.017, 0.025, 0.008, 0.025, 0.008, 0.008, 0.215, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.083, 0.107, 0.008, 0.008, 0.017])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2873.659, 6008.009),\n     \"Apogee_km\": gaussian(22854.428, 48003.978),\n     \"Perigee_km\": gaussian(25364.929, 73819.897),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1073.063, 1845.769),\n     \"Inclination_radians\": gaussian(17.073, 23.701),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.932, 0.051, 0.017]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.670, 0.276)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.081, 0.067, 0.364, 0.080, 0.004, 0.120, 0.065, 0.078, 0.032, 0.034, 0.073, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(449.180, 179.675),\n     \"Apogee_km\": gaussian(1444.594, 85.027),\n     \"Perigee_km\": gaussian(1423.144, 96.653),\n     \"Type_of_Orbit\": categorical([0.026, 0.013, 0.013, 0.908, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.597, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.509, 1.578),\n     \"Inclination_radians\": gaussian(1.130, 0.282),\n     \"Users\": categorical([0.022, 0.011, 0.187, 0.011, 0.011, 0.011, 0.011, 0.022, 0.505, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.099, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.398, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.276, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7.104, 13.922),\n     \"Apogee_km\": gaussian(719.418, 88.962),\n     \"Perigee_km\": gaussian(583.209, 73.593),\n     \"Type_of_Orbit\": categorical([0.811, 0.019, 0.038, 0.075, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.085, 0.009, 0.066, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.057, 0.009, 0.349, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.819, 0.770),\n     \"Inclination_radians\": gaussian(1.673, 0.277),\n     \"Users\": categorical([0.013, 0.013, 0.026, 0.013, 0.013, 0.051, 0.013, 0.090, 0.308, 0.013, 0.026, 0.013, 0.013, 0.346, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.953, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.188, 0.024, 0.012, 0.153, 0.012, 0.035, 0.024, 0.012, 0.082, 0.012, 0.012, 0.012, 0.047, 0.224, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3660.554, 1409.890),\n     \"Apogee_km\": gaussian(35761.574, 1373.355),\n     \"Perigee_km\": gaussian(35707.702, 1434.753),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1434.578, 51.690),\n     \"Inclination_radians\": gaussian(0.018, 0.077),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1754.977, 558.958),\n     \"Apogee_km\": gaussian(20007.636, 1932.391),\n     \"Perigee_km\": gaussian(19830.164, 1898.104),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.399, 69.194),\n     \"Inclination_radians\": gaussian(1.040, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.989, 0.597),\n     \"Apogee_km\": gaussian(694.053, 8.827),\n     \"Perigee_km\": gaussian(675.732, 1.666),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.601, 0.747),\n     \"Inclination_radians\": gaussian(1.713, 0.065),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(951.861, 1173.434),\n     \"Apogee_km\": gaussian(725.694, 85.803),\n     \"Perigee_km\": gaussian(711.796, 83.318),\n     \"Type_of_Orbit\": categorical([0.874, 0.010, 0.078, 0.010, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.071, 0.006, 0.026, 0.006, 0.006, 0.026, 0.006, 0.013, 0.006, 0.006, 0.013, 0.026, 0.006, 0.052, 0.006, 0.006, 0.097, 0.006, 0.006, 0.006, 0.026, 0.006, 0.013, 0.006, 0.175, 0.026, 0.039, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.019, 0.006, 0.019, 0.104, 0.006, 0.013, 0.026, 0.013, 0.013, 0.019, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(99.154, 1.700),\n     \"Inclination_radians\": gaussian(1.715, 0.012),\n     \"Users\": categorical([0.008, 0.040, 0.103, 0.016, 0.008, 0.008, 0.008, 0.524, 0.087, 0.008, 0.008, 0.016, 0.024, 0.079, 0.008, 0.008, 0.016, 0.032]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.143, 0.038, 0.008, 0.256, 0.068, 0.008, 0.060, 0.008, 0.075, 0.008, 0.008, 0.008, 0.038, 0.053, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.060, 0.008, 0.083, 0.015])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(512.310, 539.853),\n     \"Apogee_km\": gaussian(507.427, 45.979),\n     \"Perigee_km\": gaussian(487.771, 47.688),\n     \"Type_of_Orbit\": categorical([0.762, 0.024, 0.071, 0.071, 0.024, 0.024, 0.024]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.267, 0.019, 0.010, 0.057, 0.010, 0.029, 0.010, 0.095, 0.029, 0.019, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.067, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.038, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(94.644, 0.958),\n     \"Inclination_radians\": gaussian(1.212, 0.547),\n     \"Users\": categorical([0.013, 0.052, 0.312, 0.026, 0.013, 0.013, 0.039, 0.221, 0.065, 0.013, 0.013, 0.026, 0.026, 0.104, 0.026, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.083, 0.012, 0.012, 0.048, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.036, 0.238, 0.083, 0.024, 0.036, 0.012, 0.036, 0.036, 0.012, 0.012, 0.048, 0.095, 0.012, 0.048, 0.012])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(680.981, 49.185),\n     \"Apogee_km\": gaussian(777.129, 8.232),\n     \"Perigee_km\": gaussian(773.312, 11.374),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.356, 0.160),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2209.725, 1594.737),\n     \"Apogee_km\": gaussian(67432.295, 88060.445),\n     \"Perigee_km\": gaussian(15896.168, 15346.484),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1201.365, 1270.221),\n     \"Inclination_radians\": gaussian(0.792, 0.583),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(47.464, 14.678),\n     \"Apogee_km\": gaussian(795.523, 21.592),\n     \"Perigee_km\": gaussian(778.192, 17.227),\n     \"Type_of_Orbit\": categorical([0.132, 0.026, 0.026, 0.737, 0.026, 0.026, 0.026]),\n     \"Purpose\": categorical([0.013, 0.013, 0.026, 0.351, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.614, 0.241),\n     \"Inclination_radians\": gaussian(0.903, 0.281),\n     \"Users\": categorical([0.020, 0.102, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.551, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.018, 0.018, 0.018, 0.107, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.464, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4289.747, 5675.934),\n     \"Apogee_km\": gaussian(959.723, 242.150),\n     \"Perigee_km\": gaussian(758.498, 277.774),\n     \"Type_of_Orbit\": categorical([0.216, 0.020, 0.059, 0.627, 0.020, 0.039, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.036, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.036, 0.009, 0.080, 0.018, 0.098, 0.036, 0.116, 0.009, 0.009, 0.098, 0.018, 0.018, 0.009, 0.054, 0.009, 0.018, 0.009, 0.009, 0.036, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027]),\n     \"Period_minutes\": gaussian(102.162, 4.545),\n     \"Inclination_radians\": gaussian(1.242, 0.535),\n     \"Users\": categorical([0.012, 0.024, 0.464, 0.012, 0.012, 0.024, 0.012, 0.202, 0.036, 0.012, 0.012, 0.024, 0.048, 0.060, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.914, 0.014, 0.057, 0.014]),\n     \"Launch_Site\": categorical([0.088, 0.022, 0.022, 0.297, 0.033, 0.011, 0.033, 0.011, 0.033, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.110, 0.143, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3281.776, 5956.362),\n     \"Apogee_km\": gaussian(21755.632, 48559.958),\n     \"Perigee_km\": gaussian(23777.198, 37580.864),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1316.682, 7127.332),\n     \"Inclination_radians\": gaussian(18.172, 33.302),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.927, 0.058, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.697, 0.244)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.364, 0.055, 0.178, 0.080, 0.004, 0.165, 0.068, 0.031, 0.053, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3602.186, 1506.713),\n     \"Apogee_km\": gaussian(35738.517, 1394.244),\n     \"Perigee_km\": gaussian(35665.133, 1428.629),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1435.136, 52.818),\n     \"Inclination_radians\": gaussian(0.014, 0.074),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(37.434, 28.949),\n     \"Apogee_km\": gaussian(796.257, 51.918),\n     \"Perigee_km\": gaussian(689.752, 138.974),\n     \"Type_of_Orbit\": categorical([0.200, 0.022, 0.022, 0.689, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.010, 0.010, 0.021, 0.281, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.125, 0.010, 0.010, 0.063, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.031]),\n     \"Period_minutes\": gaussian(99.718, 1.344),\n     \"Inclination_radians\": gaussian(1.077, 0.523),\n     \"Users\": categorical([0.015, 0.088, 0.029, 0.015, 0.015, 0.044, 0.015, 0.103, 0.456, 0.015, 0.015, 0.015, 0.015, 0.103, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.944, 0.019, 0.019, 0.019]),\n     \"Launch_Site\": categorical([0.027, 0.013, 0.013, 0.253, 0.013, 0.053, 0.013, 0.013, 0.027, 0.013, 0.013, 0.347, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.013])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(582.572, 188.690),\n     \"Apogee_km\": gaussian(1101.057, 344.358),\n     \"Perigee_km\": gaussian(1093.021, 331.157),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.453, 0.509, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.709, 0.005, 0.005, 0.005, 0.005, 0.005, 0.015, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.049, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.340, 7.413),\n     \"Inclination_radians\": gaussian(1.323, 0.278),\n     \"Users\": categorical([0.011, 0.006, 0.152, 0.006, 0.006, 0.006, 0.006, 0.017, 0.281, 0.006, 0.006, 0.006, 0.404, 0.022, 0.006, 0.006, 0.051, 0.006]),\n     \"Class_of_Orbit\": categorical([0.976, 0.006, 0.006, 0.012]),\n     \"Launch_Site\": categorical([0.319, 0.005, 0.005, 0.270, 0.054, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.043, 0.205, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1709.798, 569.572),\n     \"Apogee_km\": gaussian(19843.449, 1888.754),\n     \"Perigee_km\": gaussian(19738.121, 1959.030),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.712, 64.388),\n     \"Inclination_radians\": gaussian(1.041, 0.108),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.887, 0.723),\n     \"Apogee_km\": gaussian(694.498, 9.243),\n     \"Perigee_km\": gaussian(675.682, 1.667),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.449, 0.552),\n     \"Inclination_radians\": gaussian(1.713, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(754.984, 1038.943),\n     \"Apogee_km\": gaussian(717.556, 81.677),\n     \"Perigee_km\": gaussian(681.123, 82.877),\n     \"Type_of_Orbit\": categorical([0.901, 0.007, 0.063, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.056, 0.005, 0.051, 0.005, 0.036, 0.021, 0.005, 0.010, 0.005, 0.010, 0.010, 0.031, 0.005, 0.159, 0.005, 0.005, 0.077, 0.005, 0.005, 0.005, 0.021, 0.005, 0.010, 0.005, 0.149, 0.021, 0.031, 0.010, 0.010, 0.005, 0.005, 0.005, 0.005, 0.015, 0.005, 0.015, 0.082, 0.005, 0.010, 0.021, 0.010, 0.010, 0.015, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.782, 1.718),\n     \"Inclination_radians\": gaussian(1.713, 0.011),\n     \"Users\": categorical([0.006, 0.030, 0.078, 0.012, 0.006, 0.006, 0.006, 0.419, 0.162, 0.006, 0.012, 0.012, 0.024, 0.174, 0.006, 0.006, 0.012, 0.024]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.167, 0.034, 0.006, 0.195, 0.052, 0.006, 0.052, 0.006, 0.092, 0.006, 0.006, 0.006, 0.046, 0.144, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.052, 0.006, 0.063, 0.011])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(538.396, 526.042),\n     \"Apogee_km\": gaussian(512.825, 50.198),\n     \"Perigee_km\": gaussian(491.638, 50.527),\n     \"Type_of_Orbit\": categorical([0.767, 0.023, 0.070, 0.070, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.290, 0.019, 0.009, 0.056, 0.009, 0.028, 0.009, 0.093, 0.028, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.723, 0.947),\n     \"Inclination_radians\": gaussian(1.228, 0.546),\n     \"Users\": categorical([0.013, 0.051, 0.304, 0.025, 0.013, 0.013, 0.038, 0.215, 0.076, 0.013, 0.013, 0.025, 0.013, 0.127, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.105, 0.012, 0.012, 0.047, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.233, 0.081, 0.023, 0.023, 0.012, 0.035, 0.035, 0.012, 0.012, 0.047, 0.105, 0.012, 0.047, 0.012])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2187.700, 1587.709),\n     \"Apogee_km\": gaussian(70392.490, 86882.406),\n     \"Perigee_km\": gaussian(16406.390, 14578.263),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.081, 0.014, 0.014, 0.122, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.014, 0.014, 0.014, 0.108, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.054, 0.014]),\n     \"Period_minutes\": gaussian(1320.225, 1228.174),\n     \"Inclination_radians\": gaussian(0.729, 0.577),\n     \"Users\": categorical([0.022, 0.022, 0.304, 0.022, 0.022, 0.022, 0.022, 0.217, 0.130, 0.022, 0.022, 0.022, 0.022, 0.043, 0.022, 0.022, 0.022, 0.022]),\n     \"Class_of_Orbit\": categorical([0.063, 0.344, 0.438, 0.156]),\n     \"Launch_Site\": categorical([0.094, 0.019, 0.019, 0.057, 0.019, 0.019, 0.113, 0.019, 0.038, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019, 0.113, 0.038, 0.094, 0.075, 0.019, 0.038, 0.038])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5634.349, 6092.959),\n     \"Apogee_km\": gaussian(983.559, 279.869),\n     \"Perigee_km\": gaussian(720.080, 303.483),\n     \"Type_of_Orbit\": categorical([0.286, 0.029, 0.029, 0.543, 0.029, 0.057, 0.029]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.074, 0.021, 0.021, 0.032, 0.138, 0.011, 0.011, 0.117, 0.021, 0.021, 0.011, 0.043, 0.011, 0.021, 0.011, 0.011, 0.043, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(101.902, 4.776),\n     \"Inclination_radians\": gaussian(1.283, 0.531),\n     \"Users\": categorical([0.015, 0.015, 0.439, 0.015, 0.015, 0.045, 0.015, 0.197, 0.015, 0.015, 0.015, 0.030, 0.045, 0.061, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.885, 0.019, 0.077, 0.019]),\n     \"Launch_Site\": categorical([0.068, 0.027, 0.027, 0.342, 0.027, 0.014, 0.041, 0.014, 0.027, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.041, 0.110, 0.055, 0.014, 0.014, 0.027])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3171.866, 5501.220),\n     \"Apogee_km\": gaussian(23081.403, 56507.995),\n     \"Perigee_km\": gaussian(22231.810, 51210.099),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(942.119, 2976.450),\n     \"Inclination_radians\": gaussian(20.045, 51.379),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.930, 0.054, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.701, 0.222)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.155, 0.122, 0.364, 0.078, 0.080, 0.004, 0.032, 0.080, 0.083, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(908.594, 1023.152),\n     \"Apogee_km\": gaussian(690.923, 112.360),\n     \"Perigee_km\": gaussian(671.508, 120.729),\n     \"Type_of_Orbit\": categorical([0.894, 0.008, 0.065, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.005, 0.059, 0.005, 0.011, 0.005, 0.005, 0.022, 0.005, 0.011, 0.005, 0.011, 0.011, 0.027, 0.005, 0.102, 0.016, 0.005, 0.108, 0.005, 0.005, 0.005, 0.054, 0.005, 0.011, 0.005, 0.161, 0.022, 0.038, 0.011, 0.011, 0.038, 0.005, 0.005, 0.005, 0.016, 0.005, 0.016, 0.081, 0.005, 0.011, 0.022, 0.011, 0.011, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.412, 2.376),\n     \"Inclination_radians\": gaussian(1.713, 0.012),\n     \"Users\": categorical([0.006, 0.032, 0.120, 0.013, 0.006, 0.006, 0.019, 0.500, 0.063, 0.006, 0.006, 0.025, 0.025, 0.120, 0.006, 0.006, 0.013, 0.025]),\n     \"Class_of_Orbit\": categorical([0.979, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.127, 0.036, 0.006, 0.218, 0.079, 0.006, 0.042, 0.006, 0.073, 0.006, 0.006, 0.006, 0.085, 0.067, 0.012, 0.006, 0.006, 0.024, 0.006, 0.006, 0.006, 0.079, 0.006, 0.073, 0.012])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(24.642, 25.858),\n     \"Apogee_km\": gaussian(712.618, 129.914),\n     \"Perigee_km\": gaussian(623.659, 121.577),\n     \"Type_of_Orbit\": categorical([0.608, 0.010, 0.021, 0.330, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.237, 0.006, 0.045, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.032, 0.006, 0.321, 0.006, 0.006, 0.038, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019, 0.013, 0.006, 0.006, 0.006, 0.006, 0.019, 0.006, 0.013]),\n     \"Period_minutes\": gaussian(98.056, 2.214),\n     \"Inclination_radians\": gaussian(1.230, 0.467),\n     \"Users\": categorical([0.008, 0.063, 0.102, 0.016, 0.008, 0.031, 0.008, 0.086, 0.414, 0.008, 0.016, 0.008, 0.008, 0.188, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.974, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.141, 0.007, 0.007, 0.156, 0.007, 0.030, 0.015, 0.007, 0.044, 0.007, 0.007, 0.319, 0.007, 0.111, 0.007, 0.007, 0.022, 0.007, 0.007, 0.007, 0.022, 0.022, 0.007, 0.015, 0.007])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3610.867, 1433.435),\n     \"Apogee_km\": gaussian(35682.002, 1389.567),\n     \"Perigee_km\": gaussian(35725.950, 1361.520),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.016, 0.021, 0.003, 0.770, 0.005, 0.003, 0.003, 0.005, 0.003, 0.003, 0.003, 0.003, 0.003, 0.005, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.016, 0.008, 0.003, 0.008, 0.005, 0.003, 0.005, 0.003, 0.016, 0.003, 0.011, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.013, 0.003]),\n     \"Period_minutes\": gaussian(1429.703, 53.198),\n     \"Inclination_radians\": gaussian(0.023, 0.077),\n     \"Users\": categorical([0.003, 0.014, 0.133, 0.003, 0.009, 0.003, 0.023, 0.107, 0.659, 0.006, 0.003, 0.006, 0.006, 0.006, 0.003, 0.003, 0.012, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.991, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.244, 0.003, 0.003, 0.003, 0.003, 0.003, 0.354, 0.014, 0.011, 0.006, 0.003, 0.003, 0.017, 0.003, 0.003, 0.003, 0.003, 0.003, 0.065, 0.003, 0.190, 0.003, 0.048, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.886, 49.843),\n     \"Apogee_km\": gaussian(776.982, 8.672),\n     \"Perigee_km\": gaussian(773.585, 11.037),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.359, 0.157),\n     \"Inclination_radians\": gaussian(1.508, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1725.397, 545.050),\n     \"Apogee_km\": gaussian(19991.878, 1917.753),\n     \"Perigee_km\": gaussian(19770.833, 1900.917),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.606, 68.636),\n     \"Inclination_radians\": gaussian(1.039, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.931, 0.671),\n     \"Apogee_km\": gaussian(694.563, 7.956),\n     \"Perigee_km\": gaussian(675.888, 1.534),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.778, 1.051),\n     \"Inclination_radians\": gaussian(1.717, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2283.216, 1528.116),\n     \"Apogee_km\": gaussian(67113.848, 92962.859),\n     \"Perigee_km\": gaussian(16040.798, 15639.123),\n     \"Type_of_Orbit\": categorical([0.053, 0.421, 0.053, 0.053, 0.316, 0.053, 0.053]),\n     \"Purpose\": categorical([0.080, 0.013, 0.013, 0.120, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.040, 0.013, 0.013, 0.013, 0.107, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.053, 0.013]),\n     \"Period_minutes\": gaussian(1217.327, 1312.938),\n     \"Inclination_radians\": gaussian(0.762, 0.583),\n     \"Users\": categorical([0.021, 0.021, 0.298, 0.021, 0.021, 0.021, 0.021, 0.213, 0.128, 0.021, 0.021, 0.021, 0.021, 0.064, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.061, 0.333, 0.424, 0.182]),\n     \"Launch_Site\": categorical([0.111, 0.019, 0.019, 0.056, 0.019, 0.019, 0.111, 0.019, 0.037, 0.019, 0.019, 0.019, 0.037, 0.019, 0.019, 0.019, 0.019, 0.019, 0.111, 0.037, 0.093, 0.074, 0.019, 0.037, 0.037])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(454.803, 190.027),\n     \"Apogee_km\": gaussian(1443.711, 85.797),\n     \"Perigee_km\": gaussian(1429.804, 77.081),\n     \"Type_of_Orbit\": categorical([0.027, 0.013, 0.013, 0.907, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.593, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.614, 1.527),\n     \"Inclination_radians\": gaussian(1.109, 0.273),\n     \"Users\": categorical([0.022, 0.011, 0.189, 0.011, 0.011, 0.011, 0.011, 0.022, 0.500, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.100, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.392, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.082, 0.278, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4307.297, 5658.546),\n     \"Apogee_km\": gaussian(896.302, 298.173),\n     \"Perigee_km\": gaussian(702.954, 291.459),\n     \"Type_of_Orbit\": categorical([0.185, 0.019, 0.093, 0.630, 0.019, 0.037, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.099, 0.008, 0.091, 0.025, 0.107, 0.025, 0.008, 0.116, 0.033, 0.025, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017]),\n     \"Period_minutes\": gaussian(101.009, 5.006),\n     \"Inclination_radians\": gaussian(1.240, 0.530),\n     \"Users\": categorical([0.011, 0.022, 0.484, 0.011, 0.011, 0.022, 0.011, 0.183, 0.065, 0.011, 0.011, 0.011, 0.043, 0.065, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.924, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.100, 0.020, 0.020, 0.250, 0.020, 0.010, 0.040, 0.010, 0.020, 0.010, 0.040, 0.030, 0.010, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.030, 0.110, 0.150, 0.010, 0.020, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3064.875, 6420.733),\n     \"Apogee_km\": gaussian(23057.492, 45548.356),\n     \"Perigee_km\": gaussian(22886.180, 37393.913),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(983.920, 1427.061),\n     \"Inclination_radians\": gaussian(16.115, 31.324),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.933, 0.051, 0.016]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.705, 0.210)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.007, 0.002, 0.001, 0.013, 0.003, 0.002, 0.016, 0.003, 0.002, 0.002, 0.006, 0.001, 0.002, 0.007, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.002, 0.001, 0.021, 0.001, 0.007, 0.050, 0.006, 0.002, 0.003, 0.002, 0.002, 0.038, 0.004, 0.004, 0.003, 0.001, 0.002, 0.101, 0.008, 0.008, 0.002, 0.001, 0.001, 0.047, 0.002, 0.002, 0.007, 0.002, 0.002, 0.004, 0.004, 0.002, 0.018, 0.001, 0.013, 0.001, 0.011, 0.018, 0.004, 0.415, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.029, 0.001, 0.001, 0.002, 0.003, 0.002, 0.007, 0.011, 0.010])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.360, 0.081, 0.072, 0.004, 0.205, 0.107, 0.033, 0.059, 0.010]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.133, 50.954),\n     \"Apogee_km\": gaussian(777.006, 8.846),\n     \"Perigee_km\": gaussian(773.672, 10.836),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.161),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3674.509, 1512.369),\n     \"Apogee_km\": gaussian(35798.563, 1329.283),\n     \"Perigee_km\": gaussian(35663.497, 1308.707),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1436.230, 51.847),\n     \"Inclination_radians\": gaussian(0.018, 0.075),\n     \"Users\": categorical([0.003, 0.013, 0.148, 0.003, 0.008, 0.003, 0.024, 0.098, 0.659, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.252, 0.003, 0.003, 0.003, 0.003, 0.003, 0.366, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.179, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(412.530, 193.151),\n     \"Apogee_km\": gaussian(1451.141, 78.613),\n     \"Perigee_km\": gaussian(1429.069, 71.624),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.741, 1.540),\n     \"Inclination_radians\": gaussian(1.155, 0.310),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1734.244, 550.093),\n     \"Apogee_km\": gaussian(19898.419, 1949.025),\n     \"Perigee_km\": gaussian(19819.902, 1888.414),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(703.487, 66.989),\n     \"Inclination_radians\": gaussian(1.039, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.934, 0.612),\n     \"Apogee_km\": gaussian(694.424, 8.473),\n     \"Perigee_km\": gaussian(675.836, 1.514),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.683, 0.861),\n     \"Inclination_radians\": gaussian(1.715, 0.066),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(698.986, 990.530),\n     \"Apogee_km\": gaussian(684.149, 101.208),\n     \"Perigee_km\": gaussian(655.640, 101.161),\n     \"Type_of_Orbit\": categorical([0.923, 0.005, 0.049, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.044, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.187, 0.008, 0.004, 0.088, 0.004, 0.004, 0.036, 0.052, 0.004, 0.008, 0.004, 0.139, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.064, 0.004, 0.008, 0.016, 0.020, 0.008, 0.008, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.215, 2.013),\n     \"Inclination_radians\": gaussian(1.712, 0.011),\n     \"Users\": categorical([0.004, 0.027, 0.094, 0.009, 0.004, 0.004, 0.013, 0.480, 0.139, 0.004, 0.009, 0.018, 0.018, 0.139, 0.004, 0.004, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.130, 0.065, 0.004, 0.161, 0.104, 0.004, 0.048, 0.004, 0.083, 0.004, 0.004, 0.004, 0.070, 0.122, 0.009, 0.004, 0.004, 0.017, 0.009, 0.004, 0.004, 0.070, 0.004, 0.057, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(70.864, 109.901),\n     \"Apogee_km\": gaussian(711.043, 188.497),\n     \"Perigee_km\": gaussian(600.412, 167.282),\n     \"Type_of_Orbit\": categorical([0.421, 0.013, 0.013, 0.500, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.196, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.039, 0.007, 0.314, 0.013, 0.007, 0.059, 0.007, 0.026, 0.007, 0.013, 0.026, 0.020, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007, 0.020]),\n     \"Period_minutes\": gaussian(97.903, 2.797),\n     \"Inclination_radians\": gaussian(1.058, 0.536),\n     \"Users\": categorical([0.008, 0.072, 0.216, 0.016, 0.008, 0.040, 0.008, 0.136, 0.288, 0.008, 0.008, 0.016, 0.008, 0.128, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.076, 0.023, 0.015, 0.212, 0.008, 0.038, 0.015, 0.008, 0.023, 0.008, 0.030, 0.356, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.023, 0.053, 0.015, 0.008, 0.015, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2386.711, 1652.972),\n     \"Apogee_km\": gaussian(29805.653, 15513.769),\n     \"Perigee_km\": gaussian(15336.868, 16514.011),\n     \"Type_of_Orbit\": categorical([0.071, 0.071, 0.071, 0.071, 0.571, 0.071, 0.071]),\n     \"Purpose\": categorical([0.076, 0.013, 0.013, 0.203, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.025, 0.013, 0.038, 0.013, 0.038, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.063, 0.013]),\n     \"Period_minutes\": gaussian(735.866, 542.029),\n     \"Inclination_radians\": gaussian(0.735, 0.529),\n     \"Users\": categorical([0.020, 0.020, 0.431, 0.020, 0.020, 0.020, 0.020, 0.078, 0.157, 0.020, 0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.054, 0.378, 0.405, 0.162]),\n     \"Launch_Site\": categorical([0.086, 0.017, 0.017, 0.069, 0.017, 0.017, 0.121, 0.017, 0.034, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017, 0.017, 0.103, 0.017, 0.155, 0.069, 0.017, 0.034, 0.034])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4809.888, 5780.915),\n     \"Apogee_km\": gaussian(970.840, 277.327),\n     \"Perigee_km\": gaussian(767.656, 289.786),\n     \"Type_of_Orbit\": categorical([0.191, 0.021, 0.106, 0.617, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.048, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.076, 0.010, 0.105, 0.010, 0.124, 0.019, 0.010, 0.114, 0.010, 0.019, 0.010, 0.038, 0.010, 0.019, 0.010, 0.010, 0.038, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.048, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(102.312, 5.257),\n     \"Inclination_radians\": gaussian(1.302, 0.374),\n     \"Users\": categorical([0.013, 0.013, 0.494, 0.013, 0.013, 0.013, 0.013, 0.143, 0.078, 0.013, 0.013, 0.013, 0.052, 0.065, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.905, 0.016, 0.063, 0.016]),\n     \"Launch_Site\": categorical([0.119, 0.012, 0.012, 0.262, 0.036, 0.012, 0.024, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.024, 0.024, 0.024, 0.012, 0.012, 0.012, 0.012, 0.095, 0.179, 0.012, 0.012, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2495.907, 2065.418),\n     \"Apogee_km\": gaussian(165241.717, 124056.426),\n     \"Perigee_km\": gaussian(13766.749, 13929.394),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.018, 0.018, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.125, 0.018, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018]),\n     \"Period_minutes\": gaussian(2243.615, 1720.220),\n     \"Inclination_radians\": gaussian(3.519, 7.850),\n     \"Users\": categorical([0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.321, 0.107, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036]),\n     \"Class_of_Orbit\": categorical([0.071, 0.214, 0.643, 0.071]),\n     \"Launch_Site\": categorical([0.171, 0.029, 0.029, 0.029, 0.029, 0.029, 0.086, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.057, 0.086, 0.029, 0.029, 0.029, 0.029])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.920, 0.056, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.634, 0.269)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.072, 0.070, 0.361, 0.081, 0.004, 0.205, 0.110, 0.041, 0.056, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1744.294, 574.636),\n     \"Apogee_km\": gaussian(20060.375, 1950.642),\n     \"Perigee_km\": gaussian(19731.425, 1805.305),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(703.801, 70.415),\n     \"Inclination_radians\": gaussian(1.038, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.824, 47.535),\n     \"Apogee_km\": gaussian(776.992, 8.253),\n     \"Perigee_km\": gaussian(773.993, 11.072),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.148),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3727.741, 1495.558),\n     \"Apogee_km\": gaussian(35787.528, 1330.796),\n     \"Perigee_km\": gaussian(35758.694, 1333.864),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1435.334, 50.376),\n     \"Inclination_radians\": gaussian(0.016, 0.076),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(415.846, 196.813),\n     \"Apogee_km\": gaussian(1446.361, 79.236),\n     \"Perigee_km\": gaussian(1428.109, 70.959),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.621, 1.542),\n     \"Inclination_radians\": gaussian(1.137, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.001, 0.605),\n     \"Apogee_km\": gaussian(694.867, 10.003),\n     \"Perigee_km\": gaussian(675.784, 1.595),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.635, 0.825),\n     \"Inclination_radians\": gaussian(1.715, 0.057),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(721.627, 989.950),\n     \"Apogee_km\": gaussian(681.668, 95.128),\n     \"Perigee_km\": gaussian(651.528, 98.112),\n     \"Type_of_Orbit\": categorical([0.923, 0.005, 0.049, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.044, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.187, 0.008, 0.004, 0.088, 0.004, 0.004, 0.036, 0.052, 0.004, 0.008, 0.004, 0.139, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.060, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.210, 2.032),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.004, 0.027, 0.094, 0.009, 0.004, 0.004, 0.013, 0.475, 0.143, 0.004, 0.009, 0.018, 0.018, 0.139, 0.004, 0.004, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.135, 0.065, 0.004, 0.157, 0.104, 0.004, 0.048, 0.004, 0.083, 0.004, 0.004, 0.004, 0.070, 0.122, 0.009, 0.004, 0.004, 0.017, 0.009, 0.004, 0.004, 0.070, 0.004, 0.057, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(80.264, 116.775),\n     \"Apogee_km\": gaussian(700.779, 188.139),\n     \"Perigee_km\": gaussian(603.750, 156.489),\n     \"Type_of_Orbit\": categorical([0.418, 0.013, 0.025, 0.494, 0.013, 0.025, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.192, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.038, 0.006, 0.314, 0.013, 0.006, 0.058, 0.006, 0.032, 0.006, 0.013, 0.026, 0.019, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.026, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019]),\n     \"Period_minutes\": gaussian(97.775, 2.762),\n     \"Inclination_radians\": gaussian(1.067, 0.551),\n     \"Users\": categorical([0.008, 0.070, 0.211, 0.016, 0.008, 0.039, 0.008, 0.156, 0.273, 0.008, 0.008, 0.016, 0.008, 0.133, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.974, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.081, 0.022, 0.015, 0.215, 0.007, 0.037, 0.015, 0.007, 0.022, 0.007, 0.030, 0.348, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.022, 0.052, 0.022, 0.007, 0.015, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2248.515, 1568.085),\n     \"Apogee_km\": gaussian(69102.448, 87829.917),\n     \"Perigee_km\": gaussian(15280.531, 15132.200),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1140.981, 1128.746),\n     \"Inclination_radians\": gaussian(0.754, 0.525),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4834.621, 5967.342),\n     \"Apogee_km\": gaussian(984.969, 265.606),\n     \"Perigee_km\": gaussian(776.866, 290.403),\n     \"Type_of_Orbit\": categorical([0.182, 0.023, 0.091, 0.636, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.049, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.069, 0.010, 0.108, 0.010, 0.127, 0.010, 0.010, 0.118, 0.010, 0.020, 0.010, 0.039, 0.010, 0.020, 0.010, 0.010, 0.039, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.039, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(102.870, 4.710),\n     \"Inclination_radians\": gaussian(1.274, 0.376),\n     \"Users\": categorical([0.014, 0.014, 0.514, 0.014, 0.014, 0.014, 0.014, 0.122, 0.081, 0.014, 0.014, 0.014, 0.054, 0.054, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.900, 0.017, 0.067, 0.017]),\n     \"Launch_Site\": categorical([0.099, 0.012, 0.012, 0.272, 0.037, 0.012, 0.025, 0.012, 0.025, 0.012, 0.012, 0.012, 0.012, 0.025, 0.025, 0.025, 0.012, 0.012, 0.012, 0.012, 0.099, 0.173, 0.012, 0.012, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2936.847, 5827.655),\n     \"Apogee_km\": gaussian(25739.390, 41331.732),\n     \"Perigee_km\": gaussian(21329.531, 50487.822),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(927.380, 1774.428),\n     \"Inclination_radians\": gaussian(15.460, 21.774),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.920, 0.057, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.671, 0.204)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.998, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.099, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.411, 0.001, 0.001, 0.001, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.361, 0.096, 0.081, 0.072, 0.004, 0.203, 0.041, 0.072, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.409, 51.687),\n     \"Apogee_km\": gaussian(777.023, 8.674),\n     \"Perigee_km\": gaussian(773.407, 10.792),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.368, 0.148),\n     \"Inclination_radians\": gaussian(1.511, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3735.040, 1539.691),\n     \"Apogee_km\": gaussian(35741.074, 1313.586),\n     \"Perigee_km\": gaussian(35635.112, 1320.752),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1430.346, 51.305),\n     \"Inclination_radians\": gaussian(0.017, 0.076),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.238, 42.420),\n     \"Apogee_km\": gaussian(705.969, 157.185),\n     \"Perigee_km\": gaussian(610.858, 152.268),\n     \"Type_of_Orbit\": categorical([0.438, 0.014, 0.014, 0.493, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.211, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.324, 0.007, 0.007, 0.063, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.885, 2.778),\n     \"Inclination_radians\": gaussian(1.056, 0.493),\n     \"Users\": categorical([0.009, 0.061, 0.184, 0.018, 0.009, 0.035, 0.009, 0.140, 0.316, 0.009, 0.009, 0.009, 0.009, 0.140, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.083, 0.025, 0.008, 0.223, 0.008, 0.041, 0.017, 0.008, 0.025, 0.008, 0.008, 0.372, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.017, 0.041, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(423.979, 194.548),\n     \"Apogee_km\": gaussian(1443.250, 79.740),\n     \"Perigee_km\": gaussian(1429.854, 70.161),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.604, 1.546),\n     \"Inclination_radians\": gaussian(1.168, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1691.790, 553.030),\n     \"Apogee_km\": gaussian(19923.745, 1883.644),\n     \"Perigee_km\": gaussian(19854.806, 1924.664),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.081, 68.557),\n     \"Inclination_radians\": gaussian(1.037, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.980, 0.609),\n     \"Apogee_km\": gaussian(694.092, 8.470),\n     \"Perigee_km\": gaussian(675.911, 1.462),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.637, 0.758),\n     \"Inclination_radians\": gaussian(1.714, 0.057),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(673.823, 895.139),\n     \"Apogee_km\": gaussian(687.762, 97.241),\n     \"Perigee_km\": gaussian(655.440, 98.561),\n     \"Type_of_Orbit\": categorical([0.933, 0.006, 0.039, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.036, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.189, 0.008, 0.004, 0.088, 0.004, 0.004, 0.036, 0.052, 0.004, 0.008, 0.004, 0.137, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.064, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.192, 2.039),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.018, 0.095, 0.009, 0.005, 0.005, 0.014, 0.484, 0.140, 0.005, 0.009, 0.018, 0.018, 0.140, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.127, 0.066, 0.004, 0.158, 0.105, 0.004, 0.048, 0.004, 0.083, 0.004, 0.004, 0.004, 0.070, 0.123, 0.009, 0.004, 0.004, 0.018, 0.009, 0.004, 0.004, 0.070, 0.004, 0.057, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2310.448, 1486.023),\n     \"Apogee_km\": gaussian(64105.346, 86707.253),\n     \"Perigee_km\": gaussian(14420.981, 15650.708),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1086.869, 1102.035),\n     \"Inclination_radians\": gaussian(0.721, 0.589),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3960.163, 5339.593),\n     \"Apogee_km\": gaussian(920.632, 298.160),\n     \"Perigee_km\": gaussian(723.234, 284.541),\n     \"Type_of_Orbit\": categorical([0.173, 0.019, 0.135, 0.596, 0.019, 0.038, 0.019]),\n     \"Purpose\": categorical([0.008, 0.025, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.085, 0.017, 0.093, 0.008, 0.110, 0.017, 0.008, 0.110, 0.034, 0.034, 0.008, 0.042, 0.008, 0.017, 0.008, 0.008, 0.034, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.042, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.859, 5.101),\n     \"Inclination_radians\": gaussian(1.291, 0.512),\n     \"Users\": categorical([0.011, 0.056, 0.489, 0.011, 0.011, 0.022, 0.011, 0.133, 0.067, 0.011, 0.011, 0.022, 0.044, 0.056, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.921, 0.013, 0.053, 0.013]),\n     \"Launch_Site\": categorical([0.113, 0.010, 0.021, 0.247, 0.031, 0.010, 0.021, 0.010, 0.021, 0.010, 0.041, 0.031, 0.010, 0.021, 0.021, 0.021, 0.010, 0.010, 0.010, 0.021, 0.103, 0.155, 0.010, 0.021, 0.021])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3306.527, 7440.718),\n     \"Apogee_km\": gaussian(24118.828, 40658.445),\n     \"Perigee_km\": gaussian(24889.402, 46785.575),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1452.054, 16188.975),\n     \"Inclination_radians\": gaussian(18.742, 26.527),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.923, 0.053, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.660, 0.233)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.361, 0.081, 0.203, 0.072, 0.004, 0.106, 0.040, 0.060, 0.001, 0.002, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(682.694, 49.438),\n     \"Apogee_km\": gaussian(776.741, 8.631),\n     \"Perigee_km\": gaussian(773.390, 10.668),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.148),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3684.829, 1512.589),\n     \"Apogee_km\": gaussian(35819.850, 1292.474),\n     \"Perigee_km\": gaussian(35733.650, 1310.159),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1431.434, 50.909),\n     \"Inclination_radians\": gaussian(0.019, 0.076),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(416.005, 197.883),\n     \"Apogee_km\": gaussian(1444.687, 82.286),\n     \"Perigee_km\": gaussian(1427.174, 73.075),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.682, 1.474),\n     \"Inclination_radians\": gaussian(1.149, 0.291),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(666.122, 932.117),\n     \"Apogee_km\": gaussian(684.711, 100.660),\n     \"Perigee_km\": gaussian(658.894, 96.820),\n     \"Type_of_Orbit\": categorical([0.933, 0.006, 0.039, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.036, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.189, 0.004, 0.004, 0.088, 0.004, 0.004, 0.036, 0.052, 0.004, 0.008, 0.004, 0.141, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.064, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.230, 1.970),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.014, 0.095, 0.009, 0.005, 0.005, 0.014, 0.484, 0.145, 0.005, 0.009, 0.018, 0.018, 0.140, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.127, 0.066, 0.004, 0.162, 0.105, 0.004, 0.048, 0.004, 0.083, 0.004, 0.004, 0.004, 0.070, 0.123, 0.009, 0.004, 0.004, 0.018, 0.009, 0.004, 0.004, 0.070, 0.004, 0.053, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1717.237, 563.461),\n     \"Apogee_km\": gaussian(19888.070, 1903.923),\n     \"Perigee_km\": gaussian(19749.540, 1970.924),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.727, 65.417),\n     \"Inclination_radians\": gaussian(1.042, 0.101),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.957, 0.621),\n     \"Apogee_km\": gaussian(694.128, 8.764),\n     \"Perigee_km\": gaussian(675.615, 1.761),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.626, 0.831),\n     \"Inclination_radians\": gaussian(1.712, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(66.976, 110.182),\n     \"Apogee_km\": gaussian(702.127, 168.687),\n     \"Perigee_km\": gaussian(599.747, 156.278),\n     \"Type_of_Orbit\": categorical([0.421, 0.013, 0.013, 0.500, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.197, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.039, 0.007, 0.316, 0.013, 0.007, 0.059, 0.007, 0.026, 0.007, 0.013, 0.026, 0.020, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020]),\n     \"Period_minutes\": gaussian(97.820, 2.545),\n     \"Inclination_radians\": gaussian(1.085, 0.561),\n     \"Users\": categorical([0.008, 0.081, 0.218, 0.016, 0.008, 0.032, 0.008, 0.145, 0.282, 0.008, 0.008, 0.008, 0.008, 0.129, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.069, 0.023, 0.015, 0.206, 0.008, 0.038, 0.015, 0.008, 0.023, 0.008, 0.031, 0.359, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.023, 0.053, 0.015, 0.008, 0.023, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2394.240, 1574.825),\n     \"Apogee_km\": gaussian(68398.327, 89357.591),\n     \"Perigee_km\": gaussian(15533.753, 15970.968),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.070, 0.012, 0.012, 0.186, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.023, 0.012, 0.035, 0.012, 0.035, 0.012, 0.012, 0.012, 0.093, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.058, 0.012]),\n     \"Period_minutes\": gaussian(1064.000, 1159.048),\n     \"Inclination_radians\": gaussian(0.750, 0.550),\n     \"Users\": categorical([0.017, 0.017, 0.345, 0.017, 0.017, 0.017, 0.017, 0.207, 0.155, 0.017, 0.017, 0.017, 0.017, 0.052, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.318, 0.523, 0.136]),\n     \"Launch_Site\": categorical([0.154, 0.015, 0.015, 0.062, 0.015, 0.015, 0.123, 0.015, 0.031, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.031, 0.154, 0.062, 0.015, 0.015, 0.031])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4813.792, 5562.042),\n     \"Apogee_km\": gaussian(970.437, 284.815),\n     \"Perigee_km\": gaussian(778.594, 283.005),\n     \"Type_of_Orbit\": categorical([0.188, 0.021, 0.125, 0.604, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.028, 0.009, 0.038, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.075, 0.019, 0.104, 0.009, 0.123, 0.019, 0.009, 0.113, 0.009, 0.019, 0.009, 0.028, 0.009, 0.019, 0.009, 0.009, 0.038, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.047, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(102.418, 4.801),\n     \"Inclination_radians\": gaussian(1.318, 0.382),\n     \"Users\": categorical([0.013, 0.038, 0.487, 0.013, 0.013, 0.026, 0.013, 0.115, 0.077, 0.013, 0.013, 0.026, 0.038, 0.064, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.906, 0.016, 0.063, 0.016]),\n     \"Launch_Site\": categorical([0.129, 0.012, 0.012, 0.271, 0.024, 0.012, 0.024, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.024, 0.024, 0.024, 0.012, 0.012, 0.012, 0.012, 0.094, 0.176, 0.012, 0.012, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3212.369, 5910.615),\n     \"Apogee_km\": gaussian(28060.062, 104010.331),\n     \"Perigee_km\": gaussian(23429.419, 45381.774),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(932.039, 1871.340),\n     \"Inclination_radians\": gaussian(16.894, 19.037),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(602.529, 399.573),\n     \"Apogee_km\": gaussian(716.373, 10.623),\n     \"Perigee_km\": gaussian(702.681, 28.316),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.300, 0.924),\n     \"Inclination_radians\": gaussian(1.586, 0.133),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(102.084, 34.711),\n     \"Apogee_km\": gaussian(512.053, 375.548),\n     \"Perigee_km\": gaussian(488.188, 347.529),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(60.718, 99.788),\n     \"Inclination_radians\": gaussian(1.051, 0.733),\n     \"Users\": categorical([0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.922, 0.055, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.669, 0.213)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.072, 0.361, 0.065, 0.081, 0.004, 0.132, 0.070, 0.061, 0.041, 0.039, 0.061, 0.001, 0.013]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1755.303, 566.164),\n     \"Apogee_km\": gaussian(20024.767, 1997.111),\n     \"Perigee_km\": gaussian(19808.391, 1872.652),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.269, 66.972),\n     \"Inclination_radians\": gaussian(1.040, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3718.421, 1501.218),\n     \"Apogee_km\": gaussian(35725.292, 1311.535),\n     \"Perigee_km\": gaussian(35753.233, 1316.965),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1434.495, 51.496),\n     \"Inclination_radians\": gaussian(0.018, 0.078),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(32.124, 28.332),\n     \"Apogee_km\": gaussian(802.362, 50.483),\n     \"Perigee_km\": gaussian(671.031, 137.655),\n     \"Type_of_Orbit\": categorical([0.283, 0.019, 0.019, 0.623, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.261, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.045, 0.009, 0.180, 0.009, 0.009, 0.054, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.027]),\n     \"Period_minutes\": gaussian(99.575, 1.431),\n     \"Inclination_radians\": gaussian(1.245, 0.568),\n     \"Users\": categorical([0.012, 0.072, 0.072, 0.012, 0.012, 0.048, 0.012, 0.108, 0.458, 0.012, 0.012, 0.012, 0.012, 0.096, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.078, 0.011, 0.011, 0.278, 0.011, 0.033, 0.011, 0.011, 0.044, 0.011, 0.011, 0.289, 0.011, 0.033, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.022, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(430.959, 190.152),\n     \"Apogee_km\": gaussian(1447.774, 80.281),\n     \"Perigee_km\": gaussian(1425.982, 71.344),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.585, 1.424),\n     \"Inclination_radians\": gaussian(1.128, 0.283),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.920, 0.575),\n     \"Apogee_km\": gaussian(694.018, 9.018),\n     \"Perigee_km\": gaussian(675.836, 1.625),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.658, 0.943),\n     \"Inclination_radians\": gaussian(1.715, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(436.063, 705.604),\n     \"Apogee_km\": gaussian(671.627, 50.592),\n     \"Perigee_km\": gaussian(640.026, 44.402),\n     \"Type_of_Orbit\": categorical([0.918, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.006, 0.006, 0.006, 0.056, 0.006, 0.039, 0.022, 0.006, 0.006, 0.006, 0.011, 0.006, 0.022, 0.006, 0.213, 0.006, 0.006, 0.084, 0.006, 0.006, 0.051, 0.028, 0.006, 0.006, 0.006, 0.146, 0.022, 0.006, 0.011, 0.006, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.017, 0.056, 0.006, 0.011, 0.022, 0.017, 0.006, 0.006, 0.006, 0.006]),\n     \"Period_minutes\": gaussian(97.860, 0.910),\n     \"Inclination_radians\": gaussian(1.709, 0.009),\n     \"Users\": categorical([0.007, 0.020, 0.027, 0.013, 0.007, 0.007, 0.007, 0.473, 0.153, 0.007, 0.013, 0.013, 0.020, 0.180, 0.007, 0.007, 0.013, 0.027]),\n     \"Class_of_Orbit\": categorical([0.978, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.127, 0.070, 0.006, 0.121, 0.108, 0.006, 0.045, 0.006, 0.102, 0.006, 0.006, 0.006, 0.070, 0.166, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006, 0.006, 0.045, 0.006, 0.038, 0.013])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.648, 49.645),\n     \"Apogee_km\": gaussian(776.669, 8.766),\n     \"Perigee_km\": gaussian(774.038, 11.149),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.367, 0.150),\n     \"Inclination_radians\": gaussian(1.508, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(524.371, 557.170),\n     \"Apogee_km\": gaussian(512.157, 47.324),\n     \"Perigee_km\": gaussian(495.216, 44.792),\n     \"Type_of_Orbit\": categorical([0.791, 0.023, 0.070, 0.047, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.299, 0.019, 0.009, 0.065, 0.009, 0.028, 0.009, 0.084, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.800, 1.052),\n     \"Inclination_radians\": gaussian(1.189, 0.475),\n     \"Users\": categorical([0.013, 0.038, 0.304, 0.025, 0.013, 0.013, 0.038, 0.215, 0.076, 0.013, 0.013, 0.025, 0.025, 0.127, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.105, 0.012, 0.012, 0.047, 0.047, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.256, 0.070, 0.023, 0.035, 0.012, 0.035, 0.047, 0.012, 0.012, 0.035, 0.105, 0.012, 0.047, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2230.526, 1589.909),\n     \"Apogee_km\": gaussian(73009.517, 86248.953),\n     \"Perigee_km\": gaussian(15624.038, 15348.511),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1056.662, 1156.568),\n     \"Inclination_radians\": gaussian(0.752, 0.549),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1283.603, 1202.801),\n     \"Apogee_km\": gaussian(823.775, 30.338),\n     \"Perigee_km\": gaussian(813.555, 32.046),\n     \"Type_of_Orbit\": categorical([0.773, 0.023, 0.114, 0.023, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.012, 0.129, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.024, 0.024, 0.012, 0.035, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.094, 0.012, 0.071, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.059, 0.012, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(101.219, 0.761),\n     \"Inclination_radians\": gaussian(1.723, 0.017),\n     \"Users\": categorical([0.018, 0.053, 0.158, 0.018, 0.018, 0.018, 0.018, 0.404, 0.070, 0.018, 0.018, 0.035, 0.018, 0.070, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.930, 0.023, 0.023, 0.023]),\n     \"Launch_Site\": categorical([0.109, 0.078, 0.016, 0.219, 0.078, 0.016, 0.047, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.078, 0.016, 0.078, 0.016])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4808.203, 5863.225),\n     \"Apogee_km\": gaussian(1009.713, 255.248),\n     \"Perigee_km\": gaussian(782.423, 277.227),\n     \"Type_of_Orbit\": categorical([0.265, 0.020, 0.061, 0.592, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.056, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.075, 0.019, 0.103, 0.009, 0.121, 0.009, 0.009, 0.121, 0.009, 0.019, 0.009, 0.047, 0.009, 0.019, 0.009, 0.009, 0.037, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(102.736, 4.248),\n     \"Inclination_radians\": gaussian(1.342, 0.406),\n     \"Users\": categorical([0.013, 0.013, 0.506, 0.013, 0.013, 0.025, 0.013, 0.152, 0.051, 0.013, 0.013, 0.025, 0.051, 0.051, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.908, 0.015, 0.062, 0.015]),\n     \"Launch_Site\": categorical([0.105, 0.012, 0.012, 0.302, 0.035, 0.012, 0.058, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.093, 0.151, 0.012, 0.012, 0.023])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3257.584, 6831.093),\n     \"Apogee_km\": gaussian(14018.131, 270550.390),\n     \"Perigee_km\": gaussian(20478.071, 65044.363),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(995.751, 1806.225),\n     \"Inclination_radians\": gaussian(16.577, 47.017),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 13) {\n    return {\n     \"Launch_Mass_kg\": gaussian(250.420, 108.611),\n     \"Apogee_km\": gaussian(629.568, 118.540),\n     \"Perigee_km\": gaussian(512.606, 150.193),\n     \"Type_of_Orbit\": categorical([0.267, 0.067, 0.067, 0.333, 0.067, 0.133, 0.067]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.085, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017, 0.068, 0.051, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(96.179, 2.393),\n     \"Inclination_radians\": gaussian(1.207, 0.874),\n     \"Users\": categorical([0.032, 0.097, 0.194, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032, 0.032]),\n     \"Class_of_Orbit\": categorical([0.824, 0.059, 0.059, 0.059]),\n     \"Launch_Site\": categorical([0.026, 0.079, 0.053, 0.053, 0.026, 0.079, 0.026, 0.026, 0.026, 0.026, 0.105, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.079, 0.079, 0.026, 0.026, 0.026, 0.026])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.926, 0.051, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.028)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.681, 0.212)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.361, 0.095, 0.070, 0.072, 0.004, 0.024, 0.201, 0.014, 0.081, 0.075, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3628.320, 1540.295),\n     \"Apogee_km\": gaussian(35724.711, 1329.970),\n     \"Perigee_km\": gaussian(35679.073, 1268.833),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1434.213, 51.606),\n     \"Inclination_radians\": gaussian(0.015, 0.072),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.249, 41.884),\n     \"Apogee_km\": gaussian(724.815, 154.560),\n     \"Perigee_km\": gaussian(618.891, 150.725),\n     \"Type_of_Orbit\": categorical([0.438, 0.014, 0.014, 0.493, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.213, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.333, 0.007, 0.007, 0.057, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.004, 2.589),\n     \"Inclination_radians\": gaussian(1.049, 0.493),\n     \"Users\": categorical([0.009, 0.062, 0.177, 0.018, 0.009, 0.035, 0.009, 0.133, 0.319, 0.009, 0.018, 0.009, 0.009, 0.142, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.083, 0.017, 0.008, 0.217, 0.008, 0.042, 0.017, 0.008, 0.033, 0.008, 0.008, 0.367, 0.008, 0.017, 0.008, 0.008, 0.025, 0.008, 0.008, 0.017, 0.042, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(688.552, 48.926),\n     \"Apogee_km\": gaussian(776.823, 8.436),\n     \"Perigee_km\": gaussian(773.636, 10.491),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.155),\n     \"Inclination_radians\": gaussian(1.509, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1737.031, 582.823),\n     \"Apogee_km\": gaussian(20071.713, 1951.251),\n     \"Perigee_km\": gaussian(19744.976, 1983.973),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.328, 66.767),\n     \"Inclination_radians\": gaussian(1.040, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.995, 0.597),\n     \"Apogee_km\": gaussian(694.780, 9.400),\n     \"Perigee_km\": gaussian(675.716, 1.710),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.638, 0.781),\n     \"Inclination_radians\": gaussian(1.711, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2672.998, 1445.517),\n     \"Apogee_km\": gaussian(37737.540, 6773.464),\n     \"Perigee_km\": gaussian(18480.404, 17660.102),\n     \"Type_of_Orbit\": categorical([0.071, 0.071, 0.071, 0.071, 0.571, 0.071, 0.071]),\n     \"Purpose\": categorical([0.086, 0.014, 0.014, 0.143, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.043, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.071, 0.014]),\n     \"Period_minutes\": gaussian(874.202, 549.624),\n     \"Inclination_radians\": gaussian(0.818, 0.495),\n     \"Users\": categorical([0.024, 0.024, 0.452, 0.024, 0.024, 0.024, 0.024, 0.095, 0.095, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.036, 0.464, 0.464, 0.036]),\n     \"Launch_Site\": categorical([0.082, 0.020, 0.020, 0.061, 0.020, 0.020, 0.061, 0.020, 0.041, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.122, 0.020, 0.163, 0.082, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(666.953, 894.824),\n     \"Apogee_km\": gaussian(684.969, 100.310),\n     \"Perigee_km\": gaussian(656.224, 96.417),\n     \"Type_of_Orbit\": categorical([0.932, 0.006, 0.040, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.032, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.182, 0.008, 0.004, 0.089, 0.004, 0.004, 0.036, 0.053, 0.004, 0.008, 0.004, 0.142, 0.016, 0.028, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.061, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.131, 1.995),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.018, 0.091, 0.009, 0.005, 0.005, 0.014, 0.489, 0.142, 0.005, 0.005, 0.018, 0.018, 0.142, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.128, 0.066, 0.004, 0.155, 0.111, 0.004, 0.049, 0.004, 0.080, 0.004, 0.004, 0.004, 0.071, 0.119, 0.009, 0.004, 0.004, 0.018, 0.009, 0.004, 0.004, 0.071, 0.004, 0.058, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2093.533, 1774.492),\n     \"Apogee_km\": gaussian(129680.012, 130663.615),\n     \"Perigee_km\": gaussian(12572.956, 11400.330),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.117, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.117, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(1591.139, 1656.942),\n     \"Inclination_radians\": gaussian(2.471, 6.534),\n     \"Users\": categorical([0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.281, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.167, 0.500, 0.278]),\n     \"Launch_Site\": categorical([0.154, 0.026, 0.026, 0.026, 0.026, 0.026, 0.179, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.051, 0.077, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(419.036, 193.778),\n     \"Apogee_km\": gaussian(1446.218, 81.355),\n     \"Perigee_km\": gaussian(1426.773, 67.948),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.702, 1.577),\n     \"Inclination_radians\": gaussian(1.131, 0.293),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4121.528, 5247.035),\n     \"Apogee_km\": gaussian(909.666, 296.189),\n     \"Perigee_km\": gaussian(708.212, 289.916),\n     \"Type_of_Orbit\": categorical([0.218, 0.018, 0.127, 0.564, 0.018, 0.036, 0.018]),\n     \"Purpose\": categorical([0.008, 0.033, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.091, 0.017, 0.091, 0.017, 0.107, 0.017, 0.008, 0.107, 0.033, 0.033, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.236, 4.924),\n     \"Inclination_radians\": gaussian(1.316, 0.512),\n     \"Users\": categorical([0.011, 0.054, 0.495, 0.011, 0.011, 0.022, 0.011, 0.140, 0.065, 0.011, 0.011, 0.022, 0.043, 0.054, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.924, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.110, 0.020, 0.020, 0.260, 0.020, 0.010, 0.020, 0.010, 0.020, 0.010, 0.040, 0.040, 0.010, 0.020, 0.020, 0.020, 0.010, 0.010, 0.010, 0.020, 0.100, 0.150, 0.010, 0.020, 0.020])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(102.454, 65.026),\n     \"Apogee_km\": gaussian(4623.664, 5666.817),\n     \"Perigee_km\": gaussian(932.343, 804.215),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(134.185, 87.473),\n     \"Inclination_radians\": gaussian(1.100, 0.366),\n     \"Users\": categorical([0.045, 0.045, 0.136, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.136, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.250, 0.125, 0.375, 0.250]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.069])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.925, 0.052, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.636, 0.252)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.068, 0.060, 0.361, 0.170, 0.072, 0.004, 0.180, 0.040, 0.045, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(450.062, 528.533),\n     \"Apogee_km\": gaussian(519.362, 64.055),\n     \"Perigee_km\": gaussian(492.001, 58.837),\n     \"Type_of_Orbit\": categorical([0.750, 0.021, 0.063, 0.083, 0.021, 0.042, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.298, 0.018, 0.009, 0.061, 0.009, 0.026, 0.009, 0.088, 0.035, 0.026, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.061, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.035, 0.018, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.883, 1.142),\n     \"Inclination_radians\": gaussian(1.223, 0.544),\n     \"Users\": categorical([0.012, 0.058, 0.326, 0.023, 0.012, 0.012, 0.035, 0.221, 0.070, 0.012, 0.012, 0.023, 0.012, 0.116, 0.023, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.097, 0.022, 0.011, 0.043, 0.043, 0.022, 0.011, 0.011, 0.011, 0.011, 0.043, 0.237, 0.075, 0.022, 0.022, 0.011, 0.032, 0.043, 0.011, 0.011, 0.054, 0.097, 0.011, 0.043, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(33.880, 28.586),\n     \"Apogee_km\": gaussian(808.028, 53.598),\n     \"Perigee_km\": gaussian(663.577, 144.048),\n     \"Type_of_Orbit\": categorical([0.229, 0.021, 0.021, 0.667, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.274, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.038, 0.009, 0.160, 0.009, 0.009, 0.057, 0.009, 0.028, 0.009, 0.009, 0.009, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.617, 1.436),\n     \"Inclination_radians\": gaussian(1.151, 0.568),\n     \"Users\": categorical([0.013, 0.077, 0.090, 0.013, 0.013, 0.051, 0.013, 0.103, 0.423, 0.013, 0.013, 0.013, 0.013, 0.103, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.953, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.047, 0.012, 0.012, 0.294, 0.012, 0.047, 0.012, 0.012, 0.035, 0.012, 0.012, 0.306, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.024, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3662.119, 1487.313),\n     \"Apogee_km\": gaussian(35679.238, 1361.815),\n     \"Perigee_km\": gaussian(35752.673, 1315.882),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1431.620, 49.345),\n     \"Inclination_radians\": gaussian(0.018, 0.074),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(576.810, 193.573),\n     \"Apogee_km\": gaussian(1142.819, 344.429),\n     \"Perigee_km\": gaussian(1105.902, 320.556),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.427, 0.538, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.713, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(108.112, 7.163),\n     \"Inclination_radians\": gaussian(1.311, 0.273),\n     \"Users\": categorical([0.011, 0.005, 0.197, 0.005, 0.005, 0.005, 0.005, 0.021, 0.261, 0.005, 0.005, 0.005, 0.383, 0.021, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.011]),\n     \"Launch_Site\": categorical([0.297, 0.005, 0.005, 0.262, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.246, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1730.179, 579.645),\n     \"Apogee_km\": gaussian(19936.796, 2003.973),\n     \"Perigee_km\": gaussian(19798.696, 1977.726),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.581, 65.106),\n     \"Inclination_radians\": gaussian(1.038, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.939, 0.640),\n     \"Apogee_km\": gaussian(693.977, 9.155),\n     \"Perigee_km\": gaussian(675.692, 2.079),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.480, 0.711),\n     \"Inclination_radians\": gaussian(1.716, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(674.386, 1055.189),\n     \"Apogee_km\": gaussian(713.522, 79.602),\n     \"Perigee_km\": gaussian(680.215, 83.714),\n     \"Type_of_Orbit\": categorical([0.916, 0.006, 0.054, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.049, 0.004, 0.044, 0.004, 0.031, 0.018, 0.004, 0.009, 0.004, 0.009, 0.009, 0.027, 0.004, 0.195, 0.004, 0.004, 0.075, 0.004, 0.004, 0.040, 0.027, 0.004, 0.004, 0.004, 0.150, 0.018, 0.027, 0.009, 0.009, 0.004, 0.009, 0.004, 0.004, 0.013, 0.004, 0.013, 0.071, 0.004, 0.009, 0.018, 0.022, 0.004, 0.009, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.668, 1.588),\n     \"Inclination_radians\": gaussian(1.713, 0.010),\n     \"Users\": categorical([0.005, 0.025, 0.071, 0.010, 0.005, 0.005, 0.005, 0.475, 0.152, 0.005, 0.010, 0.015, 0.020, 0.157, 0.005, 0.005, 0.010, 0.020]),\n     \"Class_of_Orbit\": categorical([0.984, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.137, 0.073, 0.005, 0.166, 0.102, 0.005, 0.054, 0.005, 0.093, 0.005, 0.005, 0.005, 0.049, 0.137, 0.010, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.049, 0.005, 0.054, 0.010])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2304.490, 1576.968),\n     \"Apogee_km\": gaussian(71820.404, 87171.183),\n     \"Perigee_km\": gaussian(15196.645, 15711.737),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.070, 0.012, 0.012, 0.186, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.035, 0.012, 0.035, 0.012, 0.012, 0.012, 0.093, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.058, 0.012]),\n     \"Period_minutes\": gaussian(1142.590, 1182.125),\n     \"Inclination_radians\": gaussian(0.726, 0.538),\n     \"Users\": categorical([0.017, 0.017, 0.362, 0.017, 0.017, 0.017, 0.017, 0.207, 0.155, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.045, 0.318, 0.523, 0.114]),\n     \"Launch_Site\": categorical([0.138, 0.015, 0.015, 0.062, 0.015, 0.015, 0.123, 0.015, 0.031, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.031, 0.154, 0.062, 0.015, 0.031, 0.031])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6164.879, 6356.326),\n     \"Apogee_km\": gaussian(994.764, 293.239),\n     \"Perigee_km\": gaussian(698.779, 311.173),\n     \"Type_of_Orbit\": categorical([0.313, 0.031, 0.031, 0.531, 0.031, 0.031, 0.031]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.044, 0.011, 0.088, 0.022, 0.011, 0.033, 0.143, 0.011, 0.011, 0.121, 0.011, 0.022, 0.011, 0.033, 0.011, 0.022, 0.011, 0.011, 0.044, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.045, 4.867),\n     \"Inclination_radians\": gaussian(1.221, 0.504),\n     \"Users\": categorical([0.016, 0.016, 0.429, 0.016, 0.016, 0.032, 0.016, 0.206, 0.016, 0.016, 0.016, 0.032, 0.048, 0.063, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.878, 0.020, 0.082, 0.020]),\n     \"Launch_Site\": categorical([0.071, 0.029, 0.029, 0.329, 0.029, 0.014, 0.043, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.043, 0.114, 0.043, 0.014, 0.014, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2465.717, 7099.774),\n     \"Apogee_km\": gaussian(21616.085, 68656.199),\n     \"Perigee_km\": gaussian(25025.769, 43262.745),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1139.075, 1918.156),\n     \"Inclination_radians\": gaussian(16.745, 27.252),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.911, 0.065, 0.024]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.026, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.655, 0.239)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.105, 0.065, 0.361, 0.070, 0.072, 0.004, 0.024, 0.142, 0.081, 0.059, 0.014, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2502.919, 4837.558),\n     \"Apogee_km\": gaussian(907.625, 225.404),\n     \"Perigee_km\": gaussian(761.116, 231.147),\n     \"Type_of_Orbit\": categorical([0.184, 0.011, 0.034, 0.724, 0.011, 0.023, 0.011]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.225, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.026, 0.007, 0.079, 0.013, 0.073, 0.053, 0.086, 0.007, 0.007, 0.073, 0.013, 0.020, 0.007, 0.040, 0.007, 0.013, 0.007, 0.007, 0.026, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020]),\n     \"Period_minutes\": gaussian(101.584, 3.887),\n     \"Inclination_radians\": gaussian(1.133, 0.479),\n     \"Users\": categorical([0.008, 0.057, 0.333, 0.008, 0.008, 0.016, 0.008, 0.154, 0.260, 0.008, 0.008, 0.016, 0.033, 0.049, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.945, 0.009, 0.037, 0.009]),\n     \"Launch_Site\": categorical([0.085, 0.015, 0.015, 0.254, 0.023, 0.023, 0.023, 0.008, 0.031, 0.008, 0.015, 0.200, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.023, 0.085, 0.100, 0.008, 0.008, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7.298, 12.278),\n     \"Apogee_km\": gaussian(736.187, 94.321),\n     \"Perigee_km\": gaussian(586.167, 85.914),\n     \"Type_of_Orbit\": categorical([0.865, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.054, 0.009, 0.063, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.072, 0.009, 0.387, 0.009, 0.009, 0.018, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(98.069, 0.983),\n     \"Inclination_radians\": gaussian(1.682, 0.289),\n     \"Users\": categorical([0.012, 0.012, 0.072, 0.012, 0.012, 0.048, 0.012, 0.072, 0.289, 0.012, 0.024, 0.012, 0.012, 0.349, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.167, 0.033, 0.011, 0.189, 0.011, 0.033, 0.022, 0.011, 0.078, 0.011, 0.011, 0.011, 0.033, 0.211, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.033, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3667.426, 1532.965),\n     \"Apogee_km\": gaussian(35731.694, 1338.045),\n     \"Perigee_km\": gaussian(35721.828, 1407.475),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1435.726, 50.884),\n     \"Inclination_radians\": gaussian(0.018, 0.077),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.572, 48.874),\n     \"Apogee_km\": gaussian(777.098, 8.539),\n     \"Perigee_km\": gaussian(774.188, 11.129),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.379, 0.145),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1729.207, 560.899),\n     \"Apogee_km\": gaussian(19998.987, 1902.214),\n     \"Perigee_km\": gaussian(19771.398, 1968.820),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.871, 67.383),\n     \"Inclination_radians\": gaussian(1.037, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.912, 0.663),\n     \"Apogee_km\": gaussian(694.190, 9.096),\n     \"Perigee_km\": gaussian(675.795, 1.609),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.680, 0.833),\n     \"Inclination_radians\": gaussian(1.711, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2670.104, 1353.880),\n     \"Apogee_km\": gaussian(37510.371, 6594.796),\n     \"Perigee_km\": gaussian(19778.553, 17488.731),\n     \"Type_of_Orbit\": categorical([0.071, 0.071, 0.071, 0.071, 0.571, 0.071, 0.071]),\n     \"Purpose\": categorical([0.086, 0.014, 0.014, 0.143, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.043, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.071, 0.014]),\n     \"Period_minutes\": gaussian(881.768, 523.747),\n     \"Inclination_radians\": gaussian(0.771, 0.510),\n     \"Users\": categorical([0.024, 0.024, 0.452, 0.024, 0.024, 0.024, 0.024, 0.095, 0.095, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024]),\n     \"Class_of_Orbit\": categorical([0.036, 0.464, 0.464, 0.036]),\n     \"Launch_Site\": categorical([0.082, 0.020, 0.020, 0.061, 0.020, 0.020, 0.061, 0.020, 0.041, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.122, 0.020, 0.163, 0.082, 0.020, 0.020, 0.020])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(930.545, 1092.106),\n     \"Apogee_km\": gaussian(710.369, 82.555),\n     \"Perigee_km\": gaussian(688.433, 87.317),\n     \"Type_of_Orbit\": categorical([0.895, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.005, 0.059, 0.005, 0.027, 0.005, 0.005, 0.021, 0.005, 0.011, 0.005, 0.011, 0.011, 0.011, 0.005, 0.112, 0.005, 0.005, 0.085, 0.005, 0.005, 0.048, 0.032, 0.005, 0.011, 0.005, 0.176, 0.021, 0.032, 0.011, 0.011, 0.011, 0.011, 0.005, 0.005, 0.016, 0.005, 0.016, 0.085, 0.005, 0.011, 0.021, 0.027, 0.011, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.838, 1.777),\n     \"Inclination_radians\": gaussian(1.713, 0.011),\n     \"Users\": categorical([0.006, 0.031, 0.094, 0.013, 0.006, 0.006, 0.006, 0.588, 0.081, 0.006, 0.006, 0.019, 0.019, 0.069, 0.006, 0.006, 0.013, 0.025]),\n     \"Class_of_Orbit\": categorical([0.979, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.114, 0.084, 0.006, 0.204, 0.126, 0.006, 0.060, 0.006, 0.078, 0.006, 0.006, 0.006, 0.048, 0.060, 0.006, 0.006, 0.006, 0.012, 0.012, 0.006, 0.006, 0.060, 0.006, 0.060, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(419.667, 196.497),\n     \"Apogee_km\": gaussian(1446.254, 81.835),\n     \"Perigee_km\": gaussian(1432.070, 72.716),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.611, 1.538),\n     \"Inclination_radians\": gaussian(1.152, 0.300),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(508.735, 505.586),\n     \"Apogee_km\": gaussian(506.405, 44.222),\n     \"Perigee_km\": gaussian(486.095, 48.688),\n     \"Type_of_Orbit\": categorical([0.750, 0.025, 0.075, 0.075, 0.025, 0.025, 0.025]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.267, 0.019, 0.010, 0.067, 0.010, 0.029, 0.010, 0.095, 0.029, 0.019, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.057, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.038, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010]),\n     \"Period_minutes\": gaussian(94.669, 0.987),\n     \"Inclination_radians\": gaussian(1.257, 0.538),\n     \"Users\": categorical([0.013, 0.052, 0.325, 0.026, 0.013, 0.013, 0.039, 0.221, 0.065, 0.013, 0.013, 0.026, 0.026, 0.091, 0.026, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.952, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.071, 0.012, 0.012, 0.048, 0.048, 0.012, 0.012, 0.012, 0.012, 0.012, 0.036, 0.262, 0.083, 0.024, 0.036, 0.012, 0.036, 0.036, 0.012, 0.012, 0.048, 0.095, 0.012, 0.036, 0.012])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1915.801, 1872.077),\n     \"Apogee_km\": gaussian(126898.134, 125128.244),\n     \"Perigee_km\": gaussian(12699.817, 11441.581),\n     \"Type_of_Orbit\": categorical([0.071, 0.571, 0.071, 0.071, 0.071, 0.071, 0.071]),\n     \"Purpose\": categorical([0.017, 0.017, 0.017, 0.117, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.117, 0.017, 0.017, 0.050, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017]),\n     \"Period_minutes\": gaussian(1589.682, 1688.884),\n     \"Inclination_radians\": gaussian(2.585, 6.825),\n     \"Users\": categorical([0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.281, 0.219, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031, 0.031]),\n     \"Class_of_Orbit\": categorical([0.056, 0.167, 0.500, 0.278]),\n     \"Launch_Site\": categorical([0.154, 0.026, 0.026, 0.026, 0.026, 0.026, 0.179, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.051, 0.077, 0.026, 0.026, 0.026, 0.026])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(99.154, 39.883),\n     \"Apogee_km\": gaussian(4794.923, 5502.509),\n     \"Perigee_km\": gaussian(860.440, 834.758),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.040, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(131.107, 98.097),\n     \"Inclination_radians\": gaussian(1.141, 0.363),\n     \"Users\": categorical([0.045, 0.045, 0.136, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.136, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.250, 0.125, 0.375, 0.250]),\n     \"Launch_Site\": categorical([0.069, 0.034, 0.034, 0.069, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.069, 0.069])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.921, 0.056, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.678, 0.217)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.199, 0.361, 0.081, 0.072, 0.004, 0.092, 0.041, 0.078, 0.001, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(682.622, 48.665),\n     \"Apogee_km\": gaussian(777.134, 8.339),\n     \"Perigee_km\": gaussian(773.515, 10.820),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.376, 0.146),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(608.224, 776.680),\n     \"Apogee_km\": gaussian(685.252, 101.969),\n     \"Perigee_km\": gaussian(657.746, 99.794),\n     \"Type_of_Orbit\": categorical([0.932, 0.006, 0.040, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.037, 0.004, 0.041, 0.004, 0.029, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.184, 0.008, 0.004, 0.090, 0.004, 0.004, 0.037, 0.045, 0.004, 0.008, 0.004, 0.143, 0.016, 0.024, 0.008, 0.008, 0.029, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.061, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.278, 2.080),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.005, 0.018, 0.088, 0.009, 0.005, 0.005, 0.014, 0.488, 0.147, 0.005, 0.005, 0.018, 0.018, 0.138, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.129, 0.067, 0.004, 0.161, 0.107, 0.004, 0.040, 0.004, 0.076, 0.004, 0.004, 0.004, 0.071, 0.125, 0.009, 0.004, 0.004, 0.018, 0.009, 0.004, 0.004, 0.071, 0.004, 0.058, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3732.739, 1478.185),\n     \"Apogee_km\": gaussian(35799.060, 1342.628),\n     \"Perigee_km\": gaussian(35741.038, 1302.242),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1432.897, 51.307),\n     \"Inclination_radians\": gaussian(0.014, 0.079),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(421.592, 204.769),\n     \"Apogee_km\": gaussian(1450.960, 83.524),\n     \"Perigee_km\": gaussian(1436.511, 73.291),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.706, 1.429),\n     \"Inclination_radians\": gaussian(1.151, 0.300),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1714.605, 549.844),\n     \"Apogee_km\": gaussian(20031.976, 1920.717),\n     \"Perigee_km\": gaussian(19891.905, 1926.856),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.278, 65.039),\n     \"Inclination_radians\": gaussian(1.033, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.881, 0.700),\n     \"Apogee_km\": gaussian(693.977, 9.463),\n     \"Perigee_km\": gaussian(675.746, 1.621),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.642, 0.938),\n     \"Inclination_radians\": gaussian(1.712, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(34.572, 40.636),\n     \"Apogee_km\": gaussian(712.709, 146.274),\n     \"Perigee_km\": gaussian(625.044, 150.991),\n     \"Type_of_Orbit\": categorical([0.452, 0.014, 0.014, 0.479, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.210, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.036, 0.007, 0.333, 0.007, 0.007, 0.058, 0.007, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022]),\n     \"Period_minutes\": gaussian(98.011, 2.563),\n     \"Inclination_radians\": gaussian(1.052, 0.497),\n     \"Users\": categorical([0.009, 0.064, 0.182, 0.018, 0.009, 0.036, 0.009, 0.127, 0.318, 0.009, 0.018, 0.009, 0.009, 0.136, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.077, 0.017, 0.009, 0.214, 0.009, 0.043, 0.009, 0.009, 0.043, 0.009, 0.009, 0.385, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.017, 0.043, 0.009, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2265.519, 1559.522),\n     \"Apogee_km\": gaussian(68897.077, 86987.739),\n     \"Perigee_km\": gaussian(14535.995, 14639.781),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1050.409, 1089.553),\n     \"Inclination_radians\": gaussian(0.748, 0.543),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4105.722, 5131.346),\n     \"Apogee_km\": gaussian(890.533, 315.239),\n     \"Perigee_km\": gaussian(704.858, 282.947),\n     \"Type_of_Orbit\": categorical([0.218, 0.018, 0.109, 0.582, 0.018, 0.036, 0.018]),\n     \"Purpose\": categorical([0.008, 0.024, 0.008, 0.040, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.097, 0.016, 0.089, 0.016, 0.105, 0.024, 0.008, 0.121, 0.032, 0.032, 0.008, 0.032, 0.008, 0.016, 0.008, 0.008, 0.032, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.048, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.090, 5.139),\n     \"Inclination_radians\": gaussian(1.301, 0.533),\n     \"Users\": categorical([0.010, 0.052, 0.490, 0.010, 0.010, 0.021, 0.010, 0.146, 0.063, 0.010, 0.010, 0.021, 0.031, 0.073, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.927, 0.012, 0.049, 0.012]),\n     \"Launch_Site\": categorical([0.107, 0.019, 0.019, 0.252, 0.019, 0.010, 0.049, 0.010, 0.019, 0.010, 0.039, 0.029, 0.010, 0.019, 0.019, 0.019, 0.010, 0.010, 0.010, 0.019, 0.097, 0.155, 0.010, 0.019, 0.019])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3460.494, 16356.816),\n     \"Apogee_km\": gaussian(24371.117, 57678.026),\n     \"Perigee_km\": gaussian(24593.219, 48235.018),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(981.923, 1570.345),\n     \"Inclination_radians\": gaussian(16.780, 28.757),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(608.110, 481.105),\n     \"Apogee_km\": gaussian(717.505, 10.580),\n     \"Perigee_km\": gaussian(702.538, 30.395),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.388, 1.153),\n     \"Inclination_radians\": gaussian(1.580, 0.163),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.500, 0.167, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.074, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.923, 0.054, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.661, 0.220)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.081, 0.361, 0.063, 0.072, 0.004, 0.176, 0.070, 0.064, 0.040, 0.066, 0.001, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(420.097, 197.533),\n     \"Apogee_km\": gaussian(1446.576, 80.666),\n     \"Perigee_km\": gaussian(1432.189, 68.265),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.585, 1.530),\n     \"Inclination_radians\": gaussian(1.154, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3626.030, 1419.626),\n     \"Apogee_km\": gaussian(35816.656, 1350.468),\n     \"Perigee_km\": gaussian(35676.743, 1294.033),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1434.640, 50.560),\n     \"Inclination_radians\": gaussian(0.015, 0.075),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(39.560, 39.026),\n     \"Apogee_km\": gaussian(800.825, 60.736),\n     \"Perigee_km\": gaussian(668.110, 149.604),\n     \"Type_of_Orbit\": categorical([0.216, 0.020, 0.020, 0.686, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.275, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.018, 0.046, 0.009, 0.156, 0.009, 0.009, 0.064, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.594, 1.507),\n     \"Inclination_radians\": gaussian(1.118, 0.548),\n     \"Users\": categorical([0.012, 0.074, 0.086, 0.012, 0.012, 0.049, 0.012, 0.123, 0.420, 0.012, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.068, 0.011, 0.011, 0.295, 0.011, 0.045, 0.011, 0.011, 0.034, 0.011, 0.011, 0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1761.990, 558.735),\n     \"Apogee_km\": gaussian(20058.408, 1957.763),\n     \"Perigee_km\": gaussian(19774.818, 1913.426),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.433, 67.799),\n     \"Inclination_radians\": gaussian(1.035, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.923, 0.510),\n     \"Apogee_km\": gaussian(694.362, 8.761),\n     \"Perigee_km\": gaussian(675.948, 1.564),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.650, 0.944),\n     \"Inclination_radians\": gaussian(1.713, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(583.402, 959.005),\n     \"Apogee_km\": gaussian(695.720, 80.523),\n     \"Perigee_km\": gaussian(667.131, 84.102),\n     \"Type_of_Orbit\": categorical([0.925, 0.006, 0.043, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.009, 0.005, 0.045, 0.005, 0.032, 0.018, 0.005, 0.005, 0.005, 0.009, 0.005, 0.027, 0.005, 0.198, 0.005, 0.005, 0.081, 0.005, 0.005, 0.041, 0.041, 0.005, 0.009, 0.005, 0.153, 0.018, 0.027, 0.009, 0.009, 0.009, 0.009, 0.005, 0.005, 0.014, 0.005, 0.014, 0.072, 0.005, 0.009, 0.018, 0.023, 0.005, 0.014, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.307, 1.631),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.015, 0.046, 0.010, 0.005, 0.005, 0.005, 0.500, 0.155, 0.005, 0.010, 0.015, 0.021, 0.160, 0.005, 0.005, 0.010, 0.021]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.124, 0.075, 0.005, 0.139, 0.109, 0.005, 0.050, 0.005, 0.095, 0.005, 0.005, 0.005, 0.065, 0.139, 0.010, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.055, 0.005, 0.060, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.449, 48.842),\n     \"Apogee_km\": gaussian(777.113, 8.250),\n     \"Perigee_km\": gaussian(773.158, 10.817),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.158),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(380.120, 388.787),\n     \"Apogee_km\": gaussian(527.748, 75.045),\n     \"Perigee_km\": gaussian(495.603, 64.688),\n     \"Type_of_Orbit\": categorical([0.727, 0.023, 0.068, 0.091, 0.023, 0.045, 0.023]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.318, 0.018, 0.009, 0.055, 0.009, 0.027, 0.009, 0.055, 0.036, 0.027, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.055, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.036, 0.018, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.939, 1.240),\n     \"Inclination_radians\": gaussian(1.183, 0.555),\n     \"Users\": categorical([0.012, 0.061, 0.329, 0.024, 0.012, 0.012, 0.037, 0.195, 0.073, 0.012, 0.012, 0.024, 0.012, 0.122, 0.024, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.101, 0.022, 0.022, 0.034, 0.034, 0.022, 0.011, 0.011, 0.011, 0.011, 0.045, 0.247, 0.045, 0.022, 0.022, 0.011, 0.034, 0.045, 0.011, 0.022, 0.056, 0.101, 0.011, 0.034, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2387.868, 1562.226),\n     \"Apogee_km\": gaussian(67039.288, 87809.754),\n     \"Perigee_km\": gaussian(16029.634, 15331.374),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.070, 0.012, 0.012, 0.186, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.023, 0.012, 0.035, 0.012, 0.035, 0.012, 0.012, 0.012, 0.093, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.058, 0.012]),\n     \"Period_minutes\": gaussian(1181.537, 1149.626),\n     \"Inclination_radians\": gaussian(0.759, 0.576),\n     \"Users\": categorical([0.017, 0.017, 0.345, 0.017, 0.017, 0.017, 0.017, 0.207, 0.155, 0.017, 0.017, 0.017, 0.017, 0.052, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.023, 0.318, 0.523, 0.136]),\n     \"Launch_Site\": categorical([0.154, 0.015, 0.015, 0.062, 0.015, 0.015, 0.123, 0.015, 0.031, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.031, 0.154, 0.062, 0.015, 0.015, 0.031])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4505.591, 5438.483),\n     \"Apogee_km\": gaussian(985.208, 230.055),\n     \"Perigee_km\": gaussian(809.969, 267.915),\n     \"Type_of_Orbit\": categorical([0.321, 0.018, 0.089, 0.518, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.089, 0.009, 0.045, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.063, 0.018, 0.098, 0.009, 0.116, 0.009, 0.009, 0.107, 0.009, 0.018, 0.009, 0.045, 0.009, 0.018, 0.009, 0.009, 0.036, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(103.118, 4.111),\n     \"Inclination_radians\": gaussian(1.393, 0.381),\n     \"Users\": categorical([0.012, 0.036, 0.524, 0.012, 0.012, 0.024, 0.012, 0.131, 0.048, 0.012, 0.012, 0.024, 0.048, 0.048, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.914, 0.014, 0.057, 0.014]),\n     \"Launch_Site\": categorical([0.121, 0.011, 0.011, 0.341, 0.033, 0.011, 0.044, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.088, 0.143, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3393.640, 7340.680),\n     \"Apogee_km\": gaussian(26556.771, 47805.330),\n     \"Perigee_km\": gaussian(24967.064, 47170.778),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1015.850, 1480.075),\n     \"Inclination_radians\": gaussian(17.413, 18.300),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(98.897, 18.670),\n     \"Apogee_km\": gaussian(726.299, 710.415),\n     \"Perigee_km\": gaussian(390.956, 195.001),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(81.957, 37.962),\n     \"Inclination_radians\": gaussian(1.317, 0.520),\n     \"Users\": categorical([0.048, 0.048, 0.095, 0.048, 0.048, 0.048, 0.048, 0.143, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.571, 0.143, 0.143, 0.143]),\n     \"Launch_Site\": categorical([0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.919, 0.058, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.675, 0.219)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.168, 0.361, 0.060, 0.072, 0.004, 0.182, 0.067, 0.041, 0.045, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(559.659, 193.397),\n     \"Apogee_km\": gaussian(1110.749, 345.837),\n     \"Perigee_km\": gaussian(1096.848, 332.045),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.429, 0.535, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.720, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.880, 7.106),\n     \"Inclination_radians\": gaussian(1.322, 0.279),\n     \"Users\": categorical([0.011, 0.005, 0.199, 0.005, 0.005, 0.005, 0.005, 0.016, 0.263, 0.005, 0.005, 0.005, 0.387, 0.016, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.983, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.295, 0.005, 0.005, 0.259, 0.052, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.249, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3705.732, 1545.329),\n     \"Apogee_km\": gaussian(35699.584, 1347.485),\n     \"Perigee_km\": gaussian(35677.017, 1341.233),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1433.129, 50.555),\n     \"Inclination_radians\": gaussian(0.018, 0.078),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(40.186, 35.237),\n     \"Apogee_km\": gaussian(798.544, 56.238),\n     \"Perigee_km\": gaussian(672.447, 149.970),\n     \"Type_of_Orbit\": categorical([0.208, 0.021, 0.021, 0.688, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.274, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.038, 0.009, 0.160, 0.009, 0.009, 0.066, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.564, 1.502),\n     \"Inclination_radians\": gaussian(1.145, 0.558),\n     \"Users\": categorical([0.013, 0.077, 0.090, 0.013, 0.013, 0.051, 0.013, 0.103, 0.423, 0.013, 0.013, 0.013, 0.013, 0.103, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.953, 0.016, 0.016, 0.016]),\n     \"Launch_Site\": categorical([0.047, 0.012, 0.012, 0.294, 0.012, 0.047, 0.012, 0.012, 0.035, 0.012, 0.012, 0.306, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.035, 0.012, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1741.650, 566.166),\n     \"Apogee_km\": gaussian(19917.509, 2015.314),\n     \"Perigee_km\": gaussian(19836.826, 1951.879),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.996, 67.500),\n     \"Inclination_radians\": gaussian(1.043, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.953, 0.672),\n     \"Apogee_km\": gaussian(694.382, 7.963),\n     \"Perigee_km\": gaussian(675.877, 1.377),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.509, 0.594),\n     \"Inclination_radians\": gaussian(1.714, 0.060),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(716.689, 1050.135),\n     \"Apogee_km\": gaussian(708.794, 79.420),\n     \"Perigee_km\": gaussian(678.556, 83.028),\n     \"Type_of_Orbit\": categorical([0.917, 0.006, 0.053, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.048, 0.004, 0.044, 0.004, 0.031, 0.018, 0.004, 0.009, 0.004, 0.009, 0.004, 0.026, 0.004, 0.193, 0.004, 0.004, 0.075, 0.004, 0.004, 0.039, 0.035, 0.004, 0.009, 0.004, 0.145, 0.018, 0.026, 0.009, 0.009, 0.004, 0.009, 0.004, 0.004, 0.013, 0.004, 0.013, 0.070, 0.004, 0.009, 0.018, 0.022, 0.004, 0.013, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.684, 1.652),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.025, 0.070, 0.010, 0.005, 0.005, 0.005, 0.485, 0.150, 0.005, 0.010, 0.015, 0.015, 0.155, 0.005, 0.005, 0.010, 0.020]),\n     \"Class_of_Orbit\": categorical([0.984, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.135, 0.072, 0.005, 0.164, 0.101, 0.005, 0.053, 0.005, 0.092, 0.005, 0.005, 0.005, 0.058, 0.135, 0.005, 0.005, 0.005, 0.005, 0.010, 0.005, 0.005, 0.053, 0.005, 0.053, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(436.621, 486.116),\n     \"Apogee_km\": gaussian(520.830, 53.895),\n     \"Perigee_km\": gaussian(500.056, 57.497),\n     \"Type_of_Orbit\": categorical([0.761, 0.022, 0.065, 0.087, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.301, 0.018, 0.009, 0.062, 0.009, 0.027, 0.009, 0.071, 0.027, 0.027, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.062, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.035, 0.018, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.923, 1.136),\n     \"Inclination_radians\": gaussian(1.183, 0.506),\n     \"Users\": categorical([0.012, 0.059, 0.318, 0.024, 0.012, 0.012, 0.035, 0.212, 0.071, 0.012, 0.012, 0.024, 0.024, 0.118, 0.024, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.098, 0.022, 0.011, 0.043, 0.043, 0.022, 0.011, 0.011, 0.011, 0.011, 0.033, 0.239, 0.054, 0.022, 0.033, 0.011, 0.033, 0.043, 0.011, 0.022, 0.054, 0.098, 0.011, 0.043, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2301.997, 1579.697),\n     \"Apogee_km\": gaussian(61702.463, 84239.533),\n     \"Perigee_km\": gaussian(14733.622, 14772.078),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1129.460, 1097.743),\n     \"Inclination_radians\": gaussian(0.728, 0.548),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6119.829, 6399.152),\n     \"Apogee_km\": gaussian(996.700, 288.575),\n     \"Perigee_km\": gaussian(703.872, 329.974),\n     \"Type_of_Orbit\": categorical([0.303, 0.030, 0.030, 0.515, 0.030, 0.061, 0.030]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.088, 0.022, 0.011, 0.022, 0.143, 0.011, 0.011, 0.121, 0.022, 0.022, 0.011, 0.044, 0.011, 0.022, 0.011, 0.011, 0.044, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.033, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.362, 4.966),\n     \"Inclination_radians\": gaussian(1.315, 0.485),\n     \"Users\": categorical([0.016, 0.016, 0.444, 0.016, 0.016, 0.032, 0.016, 0.190, 0.016, 0.016, 0.016, 0.032, 0.048, 0.063, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.878, 0.020, 0.082, 0.020]),\n     \"Launch_Site\": categorical([0.071, 0.029, 0.029, 0.343, 0.029, 0.014, 0.043, 0.014, 0.029, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014, 0.114, 0.043, 0.014, 0.014, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3359.851, 10417.901),\n     \"Apogee_km\": gaussian(23132.047, 49965.457),\n     \"Perigee_km\": gaussian(23620.337, 66497.007),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1005.849, 1734.643),\n     \"Inclination_radians\": gaussian(18.188, 19.821),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.921, 0.056, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.668, 0.210)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.041, 0.361, 0.070, 0.081, 0.072, 0.004, 0.202, 0.071, 0.098, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2360.544, 1557.074),\n     \"Apogee_km\": gaussian(66626.587, 84596.302),\n     \"Perigee_km\": gaussian(14656.061, 15315.052),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1135.572, 1176.095),\n     \"Inclination_radians\": gaussian(0.741, 0.556),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3700.760, 1486.225),\n     \"Apogee_km\": gaussian(35756.483, 1330.754),\n     \"Perigee_km\": gaussian(35674.070, 1345.229),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1432.793, 49.484),\n     \"Inclination_radians\": gaussian(0.014, 0.072),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.147, 49.435),\n     \"Apogee_km\": gaussian(776.765, 8.509),\n     \"Perigee_km\": gaussian(773.156, 10.775),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.365, 0.154),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(429.941, 202.309),\n     \"Apogee_km\": gaussian(1443.882, 81.231),\n     \"Perigee_km\": gaussian(1433.557, 73.436),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.667, 1.533),\n     \"Inclination_radians\": gaussian(1.145, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1726.829, 556.165),\n     \"Apogee_km\": gaussian(19911.682, 1997.033),\n     \"Perigee_km\": gaussian(19900.657, 1869.824),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.411, 66.671),\n     \"Inclination_radians\": gaussian(1.041, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.959, 0.569),\n     \"Apogee_km\": gaussian(694.035, 8.514),\n     \"Perigee_km\": gaussian(675.758, 1.715),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.691, 0.933),\n     \"Inclination_radians\": gaussian(1.711, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(719.644, 973.146),\n     \"Apogee_km\": gaussian(694.403, 97.180),\n     \"Perigee_km\": gaussian(659.242, 96.680),\n     \"Type_of_Orbit\": categorical([0.922, 0.006, 0.050, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.044, 0.004, 0.040, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.190, 0.004, 0.004, 0.081, 0.004, 0.004, 0.036, 0.052, 0.004, 0.008, 0.004, 0.137, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.065, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.273, 1.877),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.023, 0.095, 0.009, 0.005, 0.005, 0.009, 0.482, 0.141, 0.005, 0.009, 0.018, 0.018, 0.141, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.137, 0.066, 0.004, 0.159, 0.106, 0.004, 0.048, 0.004, 0.079, 0.004, 0.004, 0.004, 0.070, 0.123, 0.009, 0.004, 0.004, 0.013, 0.009, 0.004, 0.004, 0.070, 0.004, 0.053, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(103.543, 155.060),\n     \"Apogee_km\": gaussian(629.371, 156.654),\n     \"Perigee_km\": gaussian(499.707, 82.972),\n     \"Type_of_Orbit\": categorical([0.644, 0.022, 0.067, 0.178, 0.022, 0.044, 0.022]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.051, 0.009, 0.385, 0.017, 0.009, 0.051, 0.009, 0.043, 0.009, 0.017, 0.034, 0.026, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.034, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017]),\n     \"Period_minutes\": gaussian(95.843, 1.830),\n     \"Inclination_radians\": gaussian(1.148, 0.637),\n     \"Users\": categorical([0.011, 0.067, 0.292, 0.022, 0.011, 0.045, 0.022, 0.169, 0.090, 0.011, 0.011, 0.011, 0.011, 0.169, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.960, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.073, 0.031, 0.021, 0.219, 0.010, 0.042, 0.010, 0.010, 0.010, 0.010, 0.042, 0.229, 0.010, 0.010, 0.010, 0.010, 0.031, 0.021, 0.010, 0.031, 0.063, 0.042, 0.010, 0.031, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2829.347, 4801.333),\n     \"Apogee_km\": gaussian(935.258, 234.258),\n     \"Perigee_km\": gaussian(767.596, 231.696),\n     \"Type_of_Orbit\": categorical([0.185, 0.012, 0.037, 0.728, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.236, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.076, 0.014, 0.076, 0.042, 0.090, 0.007, 0.007, 0.083, 0.007, 0.014, 0.007, 0.042, 0.007, 0.014, 0.007, 0.007, 0.028, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014]),\n     \"Period_minutes\": gaussian(101.854, 3.751),\n     \"Inclination_radians\": gaussian(1.154, 0.421),\n     \"Users\": categorical([0.009, 0.043, 0.336, 0.009, 0.009, 0.017, 0.009, 0.121, 0.293, 0.009, 0.009, 0.017, 0.034, 0.052, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.941, 0.010, 0.039, 0.010]),\n     \"Launch_Site\": categorical([0.098, 0.008, 0.008, 0.244, 0.024, 0.016, 0.024, 0.008, 0.041, 0.008, 0.008, 0.211, 0.008, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.008, 0.073, 0.106, 0.008, 0.008, 0.016])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3137.352, 5596.561),\n     \"Apogee_km\": gaussian(24717.112, 49970.453),\n     \"Perigee_km\": gaussian(26169.493, 46525.268),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(881.817, 1766.971),\n     \"Inclination_radians\": gaussian(18.454, 27.174),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.918, 0.059, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.664, 0.222)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.082, 0.064, 0.361, 0.072, 0.004, 0.143, 0.062, 0.070, 0.041, 0.031, 0.070, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(427.493, 186.160),\n     \"Apogee_km\": gaussian(1445.128, 78.671),\n     \"Perigee_km\": gaussian(1427.780, 90.362),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.625, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.568, 1.458),\n     \"Inclination_radians\": gaussian(1.152, 0.306),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.460, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.364, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.336, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7.202, 12.971),\n     \"Apogee_km\": gaussian(734.427, 94.612),\n     \"Perigee_km\": gaussian(577.615, 78.667),\n     \"Type_of_Orbit\": categorical([0.827, 0.019, 0.019, 0.077, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.082, 0.009, 0.064, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.064, 0.009, 0.382, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(97.868, 0.823),\n     \"Inclination_radians\": gaussian(1.626, 0.360),\n     \"Users\": categorical([0.012, 0.012, 0.073, 0.012, 0.012, 0.049, 0.012, 0.085, 0.305, 0.012, 0.024, 0.012, 0.012, 0.317, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.191, 0.022, 0.011, 0.202, 0.011, 0.034, 0.022, 0.011, 0.067, 0.011, 0.011, 0.011, 0.022, 0.225, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3727.436, 1470.253),\n     \"Apogee_km\": gaussian(35688.669, 1316.607),\n     \"Perigee_km\": gaussian(35670.054, 1292.874),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1432.820, 52.511),\n     \"Inclination_radians\": gaussian(0.014, 0.076),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1747.829, 549.215),\n     \"Apogee_km\": gaussian(19883.715, 1919.969),\n     \"Perigee_km\": gaussian(19830.496, 1879.109),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.908, 66.278),\n     \"Inclination_radians\": gaussian(1.041, 0.099),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.670, 1.134),\n     \"Apogee_km\": gaussian(694.359, 8.919),\n     \"Perigee_km\": gaussian(675.870, 1.669),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.679, 0.822),\n     \"Inclination_radians\": gaussian(1.714, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(871.815, 1121.548),\n     \"Apogee_km\": gaussian(713.020, 86.221),\n     \"Perigee_km\": gaussian(692.502, 86.363),\n     \"Type_of_Orbit\": categorical([0.894, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.005, 0.058, 0.005, 0.021, 0.005, 0.005, 0.021, 0.005, 0.011, 0.005, 0.011, 0.011, 0.016, 0.005, 0.116, 0.005, 0.005, 0.090, 0.005, 0.005, 0.048, 0.032, 0.005, 0.011, 0.005, 0.175, 0.021, 0.032, 0.011, 0.011, 0.005, 0.011, 0.005, 0.005, 0.016, 0.005, 0.016, 0.085, 0.005, 0.011, 0.021, 0.026, 0.005, 0.011, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.712, 1.737),\n     \"Inclination_radians\": gaussian(1.714, 0.011),\n     \"Users\": categorical([0.006, 0.031, 0.087, 0.012, 0.006, 0.006, 0.006, 0.571, 0.087, 0.006, 0.006, 0.019, 0.019, 0.087, 0.006, 0.006, 0.012, 0.025]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.113, 0.083, 0.006, 0.202, 0.125, 0.006, 0.060, 0.006, 0.083, 0.006, 0.006, 0.006, 0.054, 0.054, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.006, 0.060, 0.006, 0.065, 0.012])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(509.367, 512.085),\n     \"Apogee_km\": gaussian(509.026, 48.449),\n     \"Perigee_km\": gaussian(491.972, 52.005),\n     \"Type_of_Orbit\": categorical([0.762, 0.024, 0.071, 0.071, 0.024, 0.024, 0.024]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.259, 0.019, 0.009, 0.065, 0.009, 0.028, 0.009, 0.093, 0.028, 0.019, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.065, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.019, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.720, 1.030),\n     \"Inclination_radians\": gaussian(1.232, 0.560),\n     \"Users\": categorical([0.013, 0.050, 0.325, 0.025, 0.013, 0.013, 0.038, 0.238, 0.063, 0.013, 0.013, 0.025, 0.025, 0.088, 0.025, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.069, 0.011, 0.011, 0.046, 0.046, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.253, 0.080, 0.023, 0.034, 0.011, 0.034, 0.046, 0.011, 0.023, 0.046, 0.092, 0.011, 0.046, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.541, 50.477),\n     \"Apogee_km\": gaussian(776.812, 8.434),\n     \"Perigee_km\": gaussian(773.028, 10.954),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.364, 0.147),\n     \"Inclination_radians\": gaussian(1.509, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2237.541, 1569.845),\n     \"Apogee_km\": gaussian(61638.698, 85705.511),\n     \"Perigee_km\": gaussian(15478.653, 15224.486),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1056.172, 1152.146),\n     \"Inclination_radians\": gaussian(0.785, 0.541),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(48.173, 13.805),\n     \"Apogee_km\": gaussian(794.911, 22.232),\n     \"Perigee_km\": gaussian(777.388, 17.784),\n     \"Type_of_Orbit\": categorical([0.132, 0.026, 0.026, 0.737, 0.026, 0.026, 0.026]),\n     \"Purpose\": categorical([0.013, 0.013, 0.026, 0.351, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.621, 0.223),\n     \"Inclination_radians\": gaussian(0.894, 0.280),\n     \"Users\": categorical([0.020, 0.102, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.551, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.018, 0.018, 0.018, 0.107, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.464, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3825.644, 5495.086),\n     \"Apogee_km\": gaussian(963.917, 254.634),\n     \"Perigee_km\": gaussian(761.184, 274.738),\n     \"Type_of_Orbit\": categorical([0.241, 0.019, 0.056, 0.611, 0.019, 0.037, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.043, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.103, 0.017, 0.095, 0.034, 0.112, 0.009, 0.009, 0.095, 0.017, 0.026, 0.009, 0.052, 0.009, 0.017, 0.009, 0.009, 0.034, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026]),\n     \"Period_minutes\": gaussian(101.819, 4.475),\n     \"Inclination_radians\": gaussian(1.267, 0.473),\n     \"Users\": categorical([0.011, 0.034, 0.466, 0.011, 0.011, 0.023, 0.011, 0.193, 0.034, 0.011, 0.011, 0.023, 0.045, 0.068, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.919, 0.014, 0.054, 0.014]),\n     \"Launch_Site\": categorical([0.084, 0.032, 0.021, 0.284, 0.032, 0.021, 0.032, 0.011, 0.042, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.021, 0.116, 0.137, 0.011, 0.011, 0.021])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3163.726, 6646.137),\n     \"Apogee_km\": gaussian(23514.744, 56821.244),\n     \"Perigee_km\": gaussian(24000.734, 47026.172),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1109.472, 3975.480),\n     \"Inclination_radians\": gaussian(16.618, 26.764),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.924, 0.053, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.674, 0.206)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.361, 0.063, 0.166, 0.072, 0.004, 0.182, 0.066, 0.040, 0.046, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3714.804, 1495.104),\n     \"Apogee_km\": gaussian(35748.521, 1312.312),\n     \"Perigee_km\": gaussian(35706.324, 1291.402),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1431.878, 53.925),\n     \"Inclination_radians\": gaussian(0.017, 0.072),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(42.927, 40.437),\n     \"Apogee_km\": gaussian(797.904, 64.007),\n     \"Perigee_km\": gaussian(670.492, 138.225),\n     \"Type_of_Orbit\": categorical([0.216, 0.020, 0.020, 0.686, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.275, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.046, 0.009, 0.165, 0.009, 0.009, 0.064, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.446, 1.504),\n     \"Inclination_radians\": gaussian(1.149, 0.570),\n     \"Users\": categorical([0.012, 0.074, 0.099, 0.012, 0.012, 0.049, 0.012, 0.123, 0.407, 0.012, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.045, 0.011, 0.011, 0.307, 0.011, 0.057, 0.011, 0.011, 0.034, 0.011, 0.011, 0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(570.813, 204.521),\n     \"Apogee_km\": gaussian(1127.937, 346.827),\n     \"Perigee_km\": gaussian(1104.137, 326.155),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.435, 0.530, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.722, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.052, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.716, 7.274),\n     \"Inclination_radians\": gaussian(1.309, 0.292),\n     \"Users\": categorical([0.011, 0.005, 0.201, 0.005, 0.005, 0.005, 0.005, 0.005, 0.261, 0.005, 0.005, 0.005, 0.391, 0.022, 0.005, 0.005, 0.049, 0.005]),\n     \"Class_of_Orbit\": categorical([0.976, 0.006, 0.006, 0.012]),\n     \"Launch_Site\": categorical([0.293, 0.005, 0.005, 0.257, 0.052, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.042, 0.251, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1720.324, 563.606),\n     \"Apogee_km\": gaussian(19859.769, 2074.315),\n     \"Perigee_km\": gaussian(19812.200, 1900.125),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.052, 64.873),\n     \"Inclination_radians\": gaussian(1.039, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.999, 0.591),\n     \"Apogee_km\": gaussian(694.341, 7.834),\n     \"Perigee_km\": gaussian(675.852, 1.581),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.477, 0.618),\n     \"Inclination_radians\": gaussian(1.717, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.849, 1042.336),\n     \"Apogee_km\": gaussian(711.248, 77.581),\n     \"Perigee_km\": gaussian(675.252, 84.039),\n     \"Type_of_Orbit\": categorical([0.917, 0.006, 0.053, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.048, 0.004, 0.044, 0.004, 0.031, 0.018, 0.004, 0.009, 0.004, 0.009, 0.009, 0.026, 0.004, 0.193, 0.004, 0.004, 0.075, 0.004, 0.004, 0.039, 0.031, 0.004, 0.009, 0.004, 0.145, 0.018, 0.026, 0.009, 0.009, 0.004, 0.009, 0.004, 0.004, 0.013, 0.004, 0.013, 0.066, 0.004, 0.009, 0.018, 0.022, 0.009, 0.013, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.608, 1.621),\n     \"Inclination_radians\": gaussian(1.713, 0.010),\n     \"Users\": categorical([0.005, 0.025, 0.070, 0.010, 0.005, 0.005, 0.005, 0.480, 0.155, 0.005, 0.010, 0.015, 0.015, 0.155, 0.005, 0.005, 0.010, 0.020]),\n     \"Class_of_Orbit\": categorical([0.984, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.140, 0.072, 0.005, 0.159, 0.101, 0.005, 0.053, 0.005, 0.092, 0.005, 0.005, 0.005, 0.053, 0.135, 0.005, 0.005, 0.005, 0.010, 0.010, 0.005, 0.005, 0.053, 0.005, 0.053, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(501.335, 524.988),\n     \"Apogee_km\": gaussian(521.159, 54.184),\n     \"Perigee_km\": gaussian(499.664, 53.738),\n     \"Type_of_Orbit\": categorical([0.756, 0.022, 0.067, 0.089, 0.022, 0.022, 0.022]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.295, 0.018, 0.009, 0.063, 0.009, 0.027, 0.009, 0.080, 0.027, 0.027, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.063, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.036, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.882, 1.066),\n     \"Inclination_radians\": gaussian(1.167, 0.541),\n     \"Users\": categorical([0.012, 0.060, 0.310, 0.024, 0.012, 0.012, 0.036, 0.214, 0.071, 0.012, 0.012, 0.024, 0.024, 0.119, 0.024, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.099, 0.022, 0.011, 0.044, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.242, 0.066, 0.022, 0.033, 0.011, 0.033, 0.033, 0.011, 0.022, 0.055, 0.099, 0.011, 0.044, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2353.234, 1611.824),\n     \"Apogee_km\": gaussian(73372.859, 89348.627),\n     \"Perigee_km\": gaussian(15718.258, 15091.129),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.070, 0.012, 0.012, 0.186, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.035, 0.012, 0.035, 0.012, 0.012, 0.012, 0.093, 0.012, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.023, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.058, 0.012]),\n     \"Period_minutes\": gaussian(1152.013, 1168.627),\n     \"Inclination_radians\": gaussian(0.728, 0.534),\n     \"Users\": categorical([0.017, 0.017, 0.362, 0.017, 0.017, 0.017, 0.017, 0.207, 0.155, 0.017, 0.017, 0.017, 0.017, 0.034, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.045, 0.318, 0.523, 0.114]),\n     \"Launch_Site\": categorical([0.138, 0.015, 0.015, 0.062, 0.015, 0.015, 0.123, 0.015, 0.031, 0.015, 0.015, 0.015, 0.031, 0.015, 0.015, 0.015, 0.015, 0.015, 0.092, 0.031, 0.154, 0.062, 0.015, 0.031, 0.031])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6128.951, 6325.981),\n     \"Apogee_km\": gaussian(1027.437, 295.703),\n     \"Perigee_km\": gaussian(730.451, 333.926),\n     \"Type_of_Orbit\": categorical([0.303, 0.030, 0.030, 0.515, 0.030, 0.061, 0.030]),\n     \"Purpose\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.087, 0.022, 0.011, 0.022, 0.141, 0.011, 0.011, 0.120, 0.022, 0.022, 0.011, 0.054, 0.011, 0.022, 0.011, 0.011, 0.043, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.043, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(102.649, 5.240),\n     \"Inclination_radians\": gaussian(1.329, 0.503),\n     \"Users\": categorical([0.016, 0.016, 0.438, 0.016, 0.016, 0.031, 0.016, 0.203, 0.016, 0.016, 0.016, 0.031, 0.047, 0.063, 0.016, 0.016, 0.016, 0.016]),\n     \"Class_of_Orbit\": categorical([0.880, 0.020, 0.080, 0.020]),\n     \"Launch_Site\": categorical([0.085, 0.028, 0.028, 0.338, 0.028, 0.014, 0.042, 0.014, 0.028, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.113, 0.042, 0.014, 0.014, 0.028])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2554.978, 11440.488),\n     \"Apogee_km\": gaussian(24555.796, 45861.429),\n     \"Perigee_km\": gaussian(26681.419, 43713.231),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(952.948, 2319.017),\n     \"Inclination_radians\": gaussian(15.661, 20.377),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.923, 0.054, 0.023]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.669, 0.212)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.200, 0.095, 0.361, 0.070, 0.072, 0.004, 0.041, 0.081, 0.076, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(690.486, 957.988),\n     \"Apogee_km\": gaussian(683.036, 99.480),\n     \"Perigee_km\": gaussian(658.515, 97.615),\n     \"Type_of_Orbit\": categorical([0.927, 0.006, 0.045, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.041, 0.004, 0.028, 0.004, 0.028, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.020, 0.004, 0.191, 0.008, 0.004, 0.089, 0.004, 0.004, 0.037, 0.049, 0.004, 0.008, 0.004, 0.142, 0.016, 0.024, 0.008, 0.008, 0.028, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.065, 0.004, 0.008, 0.016, 0.020, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.077, 2.071),\n     \"Inclination_radians\": gaussian(1.711, 0.011),\n     \"Users\": categorical([0.005, 0.023, 0.096, 0.009, 0.005, 0.005, 0.014, 0.486, 0.138, 0.005, 0.009, 0.018, 0.018, 0.133, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.124, 0.067, 0.004, 0.164, 0.107, 0.004, 0.049, 0.004, 0.084, 0.004, 0.004, 0.004, 0.067, 0.116, 0.009, 0.004, 0.004, 0.018, 0.009, 0.004, 0.004, 0.071, 0.004, 0.058, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(34.826, 37.368),\n     \"Apogee_km\": gaussian(713.248, 148.712),\n     \"Perigee_km\": gaussian(616.399, 145.425),\n     \"Type_of_Orbit\": categorical([0.472, 0.014, 0.014, 0.458, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.234, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.319, 0.007, 0.007, 0.057, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.069, 2.556),\n     \"Inclination_radians\": gaussian(1.065, 0.510),\n     \"Users\": categorical([0.009, 0.062, 0.186, 0.018, 0.009, 0.035, 0.009, 0.115, 0.327, 0.009, 0.009, 0.009, 0.009, 0.150, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.092, 0.025, 0.008, 0.208, 0.008, 0.042, 0.008, 0.008, 0.025, 0.008, 0.008, 0.375, 0.008, 0.025, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.042, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3688.003, 1464.160),\n     \"Apogee_km\": gaussian(35781.659, 1333.310),\n     \"Perigee_km\": gaussian(35723.266, 1319.865),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.015, 0.020, 0.002, 0.786, 0.005, 0.002, 0.002, 0.005, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.007, 0.002, 0.007, 0.005, 0.002, 0.005, 0.002, 0.015, 0.002, 0.010, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.015, 0.002]),\n     \"Period_minutes\": gaussian(1433.856, 50.071),\n     \"Inclination_radians\": gaussian(0.018, 0.075),\n     \"Users\": categorical([0.003, 0.013, 0.150, 0.003, 0.008, 0.003, 0.024, 0.098, 0.657, 0.005, 0.003, 0.005, 0.005, 0.005, 0.003, 0.003, 0.011, 0.003]),\n     \"Class_of_Orbit\": categorical([0.003, 0.992, 0.003, 0.003]),\n     \"Launch_Site\": categorical([0.251, 0.003, 0.003, 0.003, 0.003, 0.003, 0.365, 0.013, 0.010, 0.005, 0.003, 0.003, 0.016, 0.003, 0.003, 0.003, 0.003, 0.003, 0.062, 0.003, 0.181, 0.003, 0.049, 0.008, 0.003])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.436, 47.292),\n     \"Apogee_km\": gaussian(777.249, 8.698),\n     \"Perigee_km\": gaussian(773.775, 11.193),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.162),\n     \"Inclination_radians\": gaussian(1.510, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1725.417, 580.736),\n     \"Apogee_km\": gaussian(20019.577, 1928.868),\n     \"Perigee_km\": gaussian(19810.945, 1834.021),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.465, 66.672),\n     \"Inclination_radians\": gaussian(1.041, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.941, 0.629),\n     \"Apogee_km\": gaussian(694.368, 9.463),\n     \"Perigee_km\": gaussian(675.886, 1.467),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.656, 0.993),\n     \"Inclination_radians\": gaussian(1.714, 0.057),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2333.120, 1602.491),\n     \"Apogee_km\": gaussian(65069.797, 87095.776),\n     \"Perigee_km\": gaussian(15252.652, 14542.630),\n     \"Type_of_Orbit\": categorical([0.048, 0.381, 0.048, 0.048, 0.381, 0.048, 0.048]),\n     \"Purpose\": categorical([0.069, 0.011, 0.011, 0.184, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.023, 0.011, 0.034, 0.011, 0.034, 0.011, 0.011, 0.011, 0.092, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.057, 0.011]),\n     \"Period_minutes\": gaussian(1099.761, 1145.245),\n     \"Inclination_radians\": gaussian(0.750, 0.538),\n     \"Users\": categorical([0.017, 0.017, 0.356, 0.017, 0.017, 0.017, 0.017, 0.203, 0.153, 0.017, 0.017, 0.017, 0.017, 0.051, 0.017, 0.017, 0.017, 0.017]),\n     \"Class_of_Orbit\": categorical([0.044, 0.311, 0.511, 0.133]),\n     \"Launch_Site\": categorical([0.152, 0.015, 0.015, 0.061, 0.015, 0.015, 0.121, 0.015, 0.030, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015, 0.015, 0.091, 0.030, 0.152, 0.061, 0.015, 0.030, 0.030])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(415.737, 202.821),\n     \"Apogee_km\": gaussian(1450.108, 79.123),\n     \"Perigee_km\": gaussian(1431.891, 71.388),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.662, 1.476),\n     \"Inclination_radians\": gaussian(1.161, 0.303),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3926.414, 5245.243),\n     \"Apogee_km\": gaussian(916.862, 296.554),\n     \"Perigee_km\": gaussian(726.933, 280.387),\n     \"Type_of_Orbit\": categorical([0.182, 0.018, 0.109, 0.618, 0.018, 0.036, 0.018]),\n     \"Purpose\": categorical([0.008, 0.016, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.033, 0.008, 0.090, 0.016, 0.090, 0.016, 0.107, 0.025, 0.008, 0.115, 0.033, 0.033, 0.008, 0.041, 0.008, 0.016, 0.008, 0.008, 0.033, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(101.293, 5.096),\n     \"Inclination_radians\": gaussian(1.279, 0.522),\n     \"Users\": categorical([0.011, 0.043, 0.468, 0.011, 0.011, 0.021, 0.011, 0.170, 0.064, 0.011, 0.011, 0.021, 0.043, 0.064, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.925, 0.013, 0.050, 0.013]),\n     \"Launch_Site\": categorical([0.109, 0.010, 0.020, 0.248, 0.030, 0.010, 0.030, 0.010, 0.020, 0.010, 0.040, 0.030, 0.020, 0.020, 0.020, 0.020, 0.010, 0.010, 0.010, 0.030, 0.099, 0.149, 0.010, 0.020, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2933.417, 4922.594),\n     \"Apogee_km\": gaussian(21684.288, 46078.117),\n     \"Perigee_km\": gaussian(20526.987, 90732.003),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(915.159, 1978.813),\n     \"Inclination_radians\": gaussian(17.062, 19.683),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.917, 0.059, 0.023, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.024)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.670, 0.208)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.056, 0.153)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.004, 0.002, 0.006, 0.006, 0.002, 0.001, 0.013, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.006, 0.002, 0.002, 0.009, 0.002, 0.002, 0.002, 0.001, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.046, 0.006, 0.002, 0.003, 0.002, 0.002, 0.037, 0.004, 0.004, 0.003, 0.002, 0.002, 0.100, 0.009, 0.009, 0.002, 0.002, 0.001, 0.065, 0.002, 0.002, 0.008, 0.002, 0.002, 0.004, 0.004, 0.002, 0.017, 0.001, 0.012, 0.001, 0.011, 0.017, 0.004, 0.410, 0.001, 0.001, 0.002, 0.001, 0.005, 0.002, 0.027, 0.001, 0.003, 0.002, 0.003, 0.002, 0.006, 0.010, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.064, 0.373, 0.074, 0.065, 0.004, 0.204, 0.101, 0.035, 0.066, 0.014, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(679.775, 50.458),\n     \"Apogee_km\": gaussian(777.555, 8.196),\n     \"Perigee_km\": gaussian(773.479, 11.310),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.372, 0.151),\n     \"Inclination_radians\": gaussian(1.508, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3705.334, 1511.339),\n     \"Apogee_km\": gaussian(35770.422, 1223.709),\n     \"Perigee_km\": gaussian(35683.147, 1299.072),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.496, 48.396),\n     \"Inclination_radians\": gaussian(0.018, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(426.025, 198.199),\n     \"Apogee_km\": gaussian(1445.049, 82.687),\n     \"Perigee_km\": gaussian(1429.410, 71.495),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.677, 1.466),\n     \"Inclination_radians\": gaussian(1.144, 0.294),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1745.967, 563.756),\n     \"Apogee_km\": gaussian(19994.416, 1973.218),\n     \"Perigee_km\": gaussian(19834.137, 1900.225),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.318, 67.100),\n     \"Inclination_radians\": gaussian(1.034, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.978, 0.473),\n     \"Apogee_km\": gaussian(693.990, 8.723),\n     \"Perigee_km\": gaussian(675.690, 1.889),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.695, 0.889),\n     \"Inclination_radians\": gaussian(1.712, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(696.695, 897.569),\n     \"Apogee_km\": gaussian(682.172, 105.722),\n     \"Perigee_km\": gaussian(647.723, 99.234),\n     \"Type_of_Orbit\": categorical([0.938, 0.005, 0.036, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.033, 0.004, 0.037, 0.004, 0.030, 0.015, 0.004, 0.007, 0.004, 0.007, 0.007, 0.022, 0.004, 0.210, 0.004, 0.004, 0.089, 0.004, 0.011, 0.033, 0.048, 0.007, 0.004, 0.004, 0.151, 0.015, 0.022, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.059, 0.004, 0.007, 0.018, 0.018, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.100, 2.046),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.012, 0.091, 0.008, 0.004, 0.004, 0.012, 0.473, 0.140, 0.004, 0.008, 0.021, 0.021, 0.165, 0.004, 0.004, 0.008, 0.016]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.132, 0.072, 0.004, 0.152, 0.108, 0.004, 0.048, 0.004, 0.092, 0.004, 0.004, 0.004, 0.064, 0.132, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.064, 0.004, 0.052, 0.008])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(73.459, 103.149),\n     \"Apogee_km\": gaussian(707.528, 164.185),\n     \"Perigee_km\": gaussian(594.791, 159.498),\n     \"Type_of_Orbit\": categorical([0.450, 0.013, 0.013, 0.475, 0.013, 0.025, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.197, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.038, 0.006, 0.312, 0.019, 0.006, 0.057, 0.006, 0.032, 0.006, 0.013, 0.025, 0.025, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019]),\n     \"Period_minutes\": gaussian(97.917, 2.688),\n     \"Inclination_radians\": gaussian(1.034, 0.581),\n     \"Users\": categorical([0.008, 0.078, 0.217, 0.016, 0.008, 0.031, 0.008, 0.140, 0.287, 0.008, 0.008, 0.016, 0.008, 0.132, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.974, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.081, 0.022, 0.015, 0.199, 0.007, 0.037, 0.015, 0.007, 0.037, 0.007, 0.029, 0.346, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.022, 0.051, 0.022, 0.007, 0.022, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2256.112, 1759.677),\n     \"Apogee_km\": gaussian(32338.269, 14242.907),\n     \"Perigee_km\": gaussian(12830.995, 15989.154),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.071, 0.012, 0.012, 0.179, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.048, 0.012, 0.036, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.060, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.071, 0.012]),\n     \"Period_minutes\": gaussian(691.263, 492.964),\n     \"Inclination_radians\": gaussian(0.733, 0.525),\n     \"Users\": categorical([0.018, 0.018, 0.464, 0.018, 0.018, 0.018, 0.018, 0.107, 0.143, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.048, 0.310, 0.524, 0.119]),\n     \"Launch_Site\": categorical([0.063, 0.016, 0.016, 0.063, 0.016, 0.032, 0.111, 0.016, 0.032, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.095, 0.016, 0.175, 0.111, 0.016, 0.032, 0.032])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4082.525, 5181.683),\n     \"Apogee_km\": gaussian(931.706, 317.398),\n     \"Perigee_km\": gaussian(763.464, 300.243),\n     \"Type_of_Orbit\": categorical([0.161, 0.018, 0.161, 0.607, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.008, 0.025, 0.008, 0.034, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.101, 0.008, 0.092, 0.008, 0.109, 0.008, 0.008, 0.109, 0.008, 0.042, 0.008, 0.050, 0.008, 0.017, 0.008, 0.008, 0.034, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.067, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008]),\n     \"Period_minutes\": gaussian(102.052, 5.456),\n     \"Inclination_radians\": gaussian(1.279, 0.422),\n     \"Users\": categorical([0.011, 0.055, 0.462, 0.011, 0.011, 0.022, 0.011, 0.187, 0.066, 0.011, 0.011, 0.011, 0.033, 0.055, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.922, 0.013, 0.052, 0.013]),\n     \"Launch_Site\": categorical([0.122, 0.020, 0.010, 0.255, 0.020, 0.010, 0.020, 0.010, 0.020, 0.010, 0.010, 0.020, 0.020, 0.020, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.112, 0.184, 0.010, 0.010, 0.031])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2056.977, 1994.666),\n     \"Apogee_km\": gaussian(146004.897, 110618.763),\n     \"Perigee_km\": gaussian(10919.291, 12966.916),\n     \"Type_of_Orbit\": categorical([0.067, 0.600, 0.067, 0.067, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.180, 0.016, 0.016, 0.049, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(2095.567, 1481.884),\n     \"Inclination_radians\": gaussian(2.552, 6.496),\n     \"Users\": categorical([0.030, 0.121, 0.030, 0.030, 0.030, 0.030, 0.030, 0.303, 0.091, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.053, 0.158, 0.684, 0.105]),\n     \"Launch_Site\": categorical([0.200, 0.025, 0.025, 0.025, 0.025, 0.025, 0.075, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.050, 0.150, 0.025, 0.025, 0.025, 0.025])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(481.865, 800.796),\n     \"Apogee_km\": gaussian(711.717, 3.377),\n     \"Perigee_km\": gaussian(697.605, 42.025),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.250, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(99.529, 1.797),\n     \"Inclination_radians\": gaussian(1.582, 0.372),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.914, 0.055, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.027)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.687, 0.204)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.065, 0.064, 0.373, 0.074, 0.005, 0.201, 0.097, 0.047, 0.073, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1745.621, 563.112),\n     \"Apogee_km\": gaussian(19905.881, 1872.986),\n     \"Perigee_km\": gaussian(19815.686, 1844.413),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.546, 67.580),\n     \"Inclination_radians\": gaussian(1.032, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.906, 49.030),\n     \"Apogee_km\": gaussian(777.440, 8.255),\n     \"Perigee_km\": gaussian(773.976, 11.217),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.357, 0.155),\n     \"Inclination_radians\": gaussian(1.510, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3710.217, 1450.117),\n     \"Apogee_km\": gaussian(35764.270, 1244.875),\n     \"Perigee_km\": gaussian(35759.990, 1233.051),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1431.878, 47.641),\n     \"Inclination_radians\": gaussian(0.017, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(416.650, 194.559),\n     \"Apogee_km\": gaussian(1450.915, 81.925),\n     \"Perigee_km\": gaussian(1429.910, 72.666),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.580, 1.497),\n     \"Inclination_radians\": gaussian(1.160, 0.309),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.976, 0.275),\n     \"Apogee_km\": gaussian(695.585, 8.010),\n     \"Perigee_km\": gaussian(679.327, 6.971),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.665, 0.686),\n     \"Inclination_radians\": gaussian(1.712, 0.046),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(583.894, 778.465),\n     \"Apogee_km\": gaussian(679.604, 98.943),\n     \"Perigee_km\": gaussian(644.219, 97.348),\n     \"Type_of_Orbit\": categorical([0.937, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.034, 0.004, 0.041, 0.004, 0.030, 0.015, 0.004, 0.007, 0.004, 0.007, 0.004, 0.022, 0.004, 0.210, 0.007, 0.004, 0.090, 0.004, 0.011, 0.034, 0.041, 0.007, 0.007, 0.004, 0.154, 0.015, 0.022, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.052, 0.004, 0.007, 0.015, 0.019, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.068, 2.050),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.017, 0.079, 0.008, 0.004, 0.004, 0.013, 0.473, 0.142, 0.004, 0.008, 0.021, 0.021, 0.167, 0.004, 0.004, 0.008, 0.017]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.134, 0.073, 0.004, 0.146, 0.110, 0.004, 0.037, 0.004, 0.093, 0.004, 0.004, 0.004, 0.065, 0.134, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.065, 0.004, 0.057, 0.008])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(70.519, 105.486),\n     \"Apogee_km\": gaussian(695.790, 146.731),\n     \"Perigee_km\": gaussian(595.517, 153.574),\n     \"Type_of_Orbit\": categorical([0.423, 0.013, 0.013, 0.500, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.196, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.039, 0.007, 0.307, 0.007, 0.007, 0.052, 0.007, 0.033, 0.007, 0.020, 0.026, 0.020, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020]),\n     \"Period_minutes\": gaussian(97.768, 2.664),\n     \"Inclination_radians\": gaussian(1.031, 0.585),\n     \"Users\": categorical([0.008, 0.072, 0.224, 0.016, 0.008, 0.032, 0.008, 0.136, 0.296, 0.008, 0.008, 0.008, 0.008, 0.128, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.076, 0.015, 0.015, 0.212, 0.008, 0.038, 0.008, 0.008, 0.038, 0.008, 0.030, 0.356, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.023, 0.053, 0.015, 0.008, 0.015, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2217.970, 1778.668),\n     \"Apogee_km\": gaussian(66235.386, 78739.147),\n     \"Perigee_km\": gaussian(11747.120, 15039.556),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1120.813, 1063.794),\n     \"Inclination_radians\": gaussian(0.750, 0.552),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3991.104, 5053.927),\n     \"Apogee_km\": gaussian(908.501, 302.139),\n     \"Perigee_km\": gaussian(748.475, 290.223),\n     \"Type_of_Orbit\": categorical([0.230, 0.016, 0.164, 0.541, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.024, 0.008, 0.040, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.119, 0.016, 0.087, 0.016, 0.103, 0.008, 0.008, 0.111, 0.008, 0.040, 0.008, 0.040, 0.008, 0.016, 0.008, 0.008, 0.032, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.071, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008]),\n     \"Period_minutes\": gaussian(101.888, 5.326),\n     \"Inclination_radians\": gaussian(1.307, 0.387),\n     \"Users\": categorical([0.010, 0.051, 0.459, 0.010, 0.010, 0.020, 0.010, 0.184, 0.061, 0.010, 0.010, 0.020, 0.041, 0.061, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.929, 0.012, 0.048, 0.012]),\n     \"Launch_Site\": categorical([0.124, 0.029, 0.010, 0.248, 0.029, 0.010, 0.048, 0.010, 0.019, 0.010, 0.010, 0.019, 0.019, 0.019, 0.019, 0.019, 0.010, 0.010, 0.010, 0.010, 0.105, 0.171, 0.010, 0.010, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2993.810, 8329.716),\n     \"Apogee_km\": gaussian(21709.565, 42107.688),\n     \"Perigee_km\": gaussian(22934.603, 67724.347),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(985.307, 1311.070),\n     \"Inclination_radians\": gaussian(18.234, 23.544),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.915, 0.054, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.690, 0.186)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.064, 0.373, 0.086, 0.074, 0.065, 0.005, 0.202, 0.047, 0.083, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.493, 49.796),\n     \"Apogee_km\": gaussian(777.359, 8.761),\n     \"Perigee_km\": gaussian(773.519, 10.869),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.160),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3673.535, 1433.605),\n     \"Apogee_km\": gaussian(35747.753, 1308.521),\n     \"Perigee_km\": gaussian(35771.854, 1244.787),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.481, 46.659),\n     \"Inclination_radians\": gaussian(0.017, 0.074),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.294, 43.009),\n     \"Apogee_km\": gaussian(707.940, 158.282),\n     \"Perigee_km\": gaussian(620.879, 145.018),\n     \"Type_of_Orbit\": categorical([0.452, 0.014, 0.014, 0.479, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.220, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.035, 0.007, 0.319, 0.007, 0.007, 0.057, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.084, 2.534),\n     \"Inclination_radians\": gaussian(1.032, 0.504),\n     \"Users\": categorical([0.009, 0.062, 0.177, 0.018, 0.009, 0.035, 0.009, 0.115, 0.336, 0.009, 0.009, 0.009, 0.009, 0.150, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.083, 0.017, 0.008, 0.217, 0.008, 0.042, 0.017, 0.008, 0.033, 0.008, 0.008, 0.375, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.017, 0.042, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(434.472, 196.694),\n     \"Apogee_km\": gaussian(1443.843, 79.279),\n     \"Perigee_km\": gaussian(1422.261, 91.972),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.625, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.642, 1.461),\n     \"Inclination_radians\": gaussian(1.144, 0.311),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.460, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.364, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.336, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1755.312, 559.231),\n     \"Apogee_km\": gaussian(20006.437, 2052.086),\n     \"Perigee_km\": gaussian(19793.357, 1839.974),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.975, 66.761),\n     \"Inclination_radians\": gaussian(1.040, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.954, 0.465),\n     \"Apogee_km\": gaussian(696.231, 8.063),\n     \"Perigee_km\": gaussian(676.849, 2.998),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.595, 0.651),\n     \"Inclination_radians\": gaussian(1.713, 0.055),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(650.186, 991.184),\n     \"Apogee_km\": gaussian(686.242, 102.089),\n     \"Perigee_km\": gaussian(650.391, 104.031),\n     \"Type_of_Orbit\": categorical([0.937, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.026, 0.004, 0.037, 0.004, 0.030, 0.015, 0.004, 0.007, 0.004, 0.007, 0.004, 0.022, 0.004, 0.213, 0.007, 0.004, 0.090, 0.004, 0.011, 0.034, 0.049, 0.007, 0.007, 0.004, 0.153, 0.015, 0.022, 0.007, 0.007, 0.022, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.060, 0.004, 0.007, 0.015, 0.019, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(97.981, 1.999),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.017, 0.079, 0.008, 0.004, 0.004, 0.013, 0.479, 0.138, 0.004, 0.008, 0.021, 0.021, 0.167, 0.004, 0.004, 0.008, 0.017]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.130, 0.073, 0.004, 0.146, 0.109, 0.004, 0.049, 0.004, 0.093, 0.004, 0.004, 0.004, 0.065, 0.134, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.061, 0.004, 0.057, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2132.368, 1689.671),\n     \"Apogee_km\": gaussian(62510.545, 76369.405),\n     \"Perigee_km\": gaussian(12900.862, 14686.227),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1080.388, 1091.946),\n     \"Inclination_radians\": gaussian(0.750, 0.545),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3419.532, 4990.055),\n     \"Apogee_km\": gaussian(853.572, 306.153),\n     \"Perigee_km\": gaussian(708.798, 294.989),\n     \"Type_of_Orbit\": categorical([0.203, 0.016, 0.156, 0.563, 0.016, 0.031, 0.016]),\n     \"Purpose\": categorical([0.007, 0.036, 0.007, 0.029, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.117, 0.015, 0.080, 0.015, 0.095, 0.022, 0.007, 0.102, 0.029, 0.051, 0.007, 0.044, 0.007, 0.015, 0.007, 0.007, 0.036, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.058, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007]),\n     \"Period_minutes\": gaussian(100.662, 5.554),\n     \"Inclination_radians\": gaussian(1.314, 0.489),\n     \"Users\": categorical([0.009, 0.064, 0.486, 0.009, 0.009, 0.018, 0.009, 0.193, 0.046, 0.009, 0.009, 0.018, 0.037, 0.046, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.937, 0.011, 0.042, 0.011]),\n     \"Launch_Site\": categorical([0.112, 0.026, 0.017, 0.241, 0.026, 0.009, 0.017, 0.009, 0.026, 0.009, 0.034, 0.034, 0.017, 0.017, 0.017, 0.017, 0.009, 0.009, 0.009, 0.017, 0.112, 0.164, 0.009, 0.017, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2946.329, 4722.982),\n     \"Apogee_km\": gaussian(26434.739, 51519.597),\n     \"Perigee_km\": gaussian(24959.226, 38753.408),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(986.075, 1699.562),\n     \"Inclination_radians\": gaussian(17.294, 23.661),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.919, 0.050, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.698, 0.188)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.064, 0.373, 0.074, 0.205, 0.064, 0.004, 0.097, 0.048, 0.070, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.998, 48.285),\n     \"Apogee_km\": gaussian(776.895, 8.891),\n     \"Perigee_km\": gaussian(773.171, 10.787),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.152),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3658.892, 1485.193),\n     \"Apogee_km\": gaussian(35806.200, 1294.157),\n     \"Perigee_km\": gaussian(35627.646, 1286.597),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.474, 47.423),\n     \"Inclination_radians\": gaussian(0.016, 0.075),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(427.608, 196.306),\n     \"Apogee_km\": gaussian(1447.653, 80.204),\n     \"Perigee_km\": gaussian(1432.318, 72.224),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.700, 1.470),\n     \"Inclination_radians\": gaussian(1.148, 0.290),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(628.532, 913.209),\n     \"Apogee_km\": gaussian(685.551, 101.706),\n     \"Perigee_km\": gaussian(651.266, 102.287),\n     \"Type_of_Orbit\": categorical([0.938, 0.005, 0.036, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.033, 0.004, 0.037, 0.004, 0.026, 0.015, 0.004, 0.007, 0.004, 0.007, 0.007, 0.022, 0.004, 0.210, 0.007, 0.004, 0.088, 0.004, 0.011, 0.033, 0.048, 0.007, 0.007, 0.004, 0.151, 0.015, 0.022, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.059, 0.004, 0.007, 0.018, 0.018, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(97.950, 1.986),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.016, 0.090, 0.008, 0.004, 0.004, 0.012, 0.475, 0.135, 0.004, 0.008, 0.020, 0.020, 0.164, 0.004, 0.004, 0.008, 0.016]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.131, 0.072, 0.004, 0.151, 0.104, 0.004, 0.048, 0.004, 0.092, 0.004, 0.004, 0.004, 0.064, 0.131, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.068, 0.004, 0.056, 0.008])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1682.425, 495.409),\n     \"Apogee_km\": gaussian(19870.598, 1911.688),\n     \"Perigee_km\": gaussian(19901.883, 1944.557),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.615, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(705.232, 64.773),\n     \"Inclination_radians\": gaussian(1.043, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.056, 0.011, 0.011, 0.011, 0.719, 0.011, 0.045, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.960]),\n     \"Launch_Site\": categorical([0.292, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.344, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.976, 0.598),\n     \"Apogee_km\": gaussian(693.996, 8.373),\n     \"Perigee_km\": gaussian(675.862, 1.538),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.674, 0.825),\n     \"Inclination_radians\": gaussian(1.714, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(74.410, 103.865),\n     \"Apogee_km\": gaussian(699.855, 150.018),\n     \"Perigee_km\": gaussian(607.852, 150.251),\n     \"Type_of_Orbit\": categorical([0.443, 0.013, 0.013, 0.481, 0.013, 0.025, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.203, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.039, 0.007, 0.314, 0.007, 0.007, 0.052, 0.007, 0.026, 0.007, 0.013, 0.026, 0.020, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020]),\n     \"Period_minutes\": gaussian(97.938, 2.635),\n     \"Inclination_radians\": gaussian(1.063, 0.571),\n     \"Users\": categorical([0.008, 0.072, 0.224, 0.016, 0.008, 0.032, 0.008, 0.136, 0.304, 0.008, 0.008, 0.008, 0.008, 0.120, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.076, 0.015, 0.015, 0.212, 0.015, 0.038, 0.008, 0.008, 0.038, 0.008, 0.030, 0.356, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.023, 0.053, 0.008, 0.008, 0.015, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2201.911, 1769.658),\n     \"Apogee_km\": gaussian(64350.284, 74077.948),\n     \"Perigee_km\": gaussian(12458.290, 14416.202),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.071, 0.010, 0.010, 0.162, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.121, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1089.411, 1125.363),\n     \"Inclination_radians\": gaussian(0.748, 0.528),\n     \"Users\": categorical([0.014, 0.056, 0.380, 0.014, 0.014, 0.014, 0.014, 0.211, 0.127, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.035, 0.246, 0.596, 0.123]),\n     \"Launch_Site\": categorical([0.141, 0.013, 0.013, 0.051, 0.013, 0.026, 0.103, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.090, 0.026, 0.205, 0.090, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4147.533, 5391.085),\n     \"Apogee_km\": gaussian(917.096, 310.373),\n     \"Perigee_km\": gaussian(739.030, 303.376),\n     \"Type_of_Orbit\": categorical([0.158, 0.018, 0.175, 0.596, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.008, 0.024, 0.008, 0.041, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.106, 0.016, 0.089, 0.016, 0.106, 0.016, 0.008, 0.106, 0.008, 0.041, 0.008, 0.041, 0.008, 0.016, 0.008, 0.008, 0.033, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.065, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008]),\n     \"Period_minutes\": gaussian(101.220, 5.513),\n     \"Inclination_radians\": gaussian(1.286, 0.413),\n     \"Users\": categorical([0.011, 0.053, 0.442, 0.011, 0.011, 0.021, 0.011, 0.179, 0.063, 0.011, 0.011, 0.021, 0.042, 0.074, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.926, 0.012, 0.049, 0.012]),\n     \"Launch_Site\": categorical([0.127, 0.029, 0.010, 0.235, 0.029, 0.010, 0.029, 0.010, 0.020, 0.010, 0.010, 0.020, 0.020, 0.020, 0.020, 0.020, 0.010, 0.010, 0.010, 0.010, 0.108, 0.186, 0.010, 0.010, 0.029])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3269.820, 5671.196),\n     \"Apogee_km\": gaussian(25769.642, 48650.416),\n     \"Perigee_km\": gaussian(28088.645, 77934.167),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1063.790, 2485.052),\n     \"Inclination_radians\": gaussian(17.690, 29.203),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.903, 0.066, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.026, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.685, 0.193)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.065, 0.373, 0.058, 0.074, 0.004, 0.138, 0.064, 0.067, 0.047, 0.035, 0.061, 0.001, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1756.910, 575.971),\n     \"Apogee_km\": gaussian(19806.761, 1926.589),\n     \"Perigee_km\": gaussian(19772.364, 1894.258),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.646, 68.841),\n     \"Inclination_radians\": gaussian(1.033, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3699.740, 1443.623),\n     \"Apogee_km\": gaussian(35763.265, 1224.776),\n     \"Perigee_km\": gaussian(35727.896, 1276.415),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.948, 48.229),\n     \"Inclination_radians\": gaussian(0.021, 0.074),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(29.754, 25.217),\n     \"Apogee_km\": gaussian(804.021, 55.633),\n     \"Perigee_km\": gaussian(675.385, 144.189),\n     \"Type_of_Orbit\": categorical([0.294, 0.020, 0.020, 0.608, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.273, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.045, 0.009, 0.191, 0.009, 0.009, 0.055, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.616, 1.466),\n     \"Inclination_radians\": gaussian(1.155, 0.548),\n     \"Users\": categorical([0.012, 0.073, 0.085, 0.012, 0.012, 0.049, 0.012, 0.061, 0.451, 0.012, 0.012, 0.012, 0.012, 0.134, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.956, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.067, 0.011, 0.011, 0.281, 0.011, 0.045, 0.011, 0.011, 0.056, 0.011, 0.011, 0.292, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.045, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(434.176, 193.723),\n     \"Apogee_km\": gaussian(1445.549, 80.976),\n     \"Perigee_km\": gaussian(1432.000, 69.196),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.655, 1.487),\n     \"Inclination_radians\": gaussian(1.137, 0.314),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.924, 0.679),\n     \"Apogee_km\": gaussian(694.077, 8.869),\n     \"Perigee_km\": gaussian(675.767, 1.454),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.638, 0.856),\n     \"Inclination_radians\": gaussian(1.714, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(391.239, 660.968),\n     \"Apogee_km\": gaussian(678.191, 57.342),\n     \"Perigee_km\": gaussian(634.876, 50.369),\n     \"Type_of_Orbit\": categorical([0.927, 0.007, 0.036, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.056, 0.005, 0.035, 0.020, 0.005, 0.005, 0.005, 0.010, 0.005, 0.025, 0.005, 0.222, 0.005, 0.005, 0.081, 0.005, 0.015, 0.045, 0.025, 0.010, 0.005, 0.005, 0.152, 0.020, 0.005, 0.010, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.015, 0.056, 0.005, 0.010, 0.025, 0.015, 0.010, 0.010, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(97.863, 0.970),\n     \"Inclination_radians\": gaussian(1.709, 0.009),\n     \"Users\": categorical([0.006, 0.018, 0.024, 0.012, 0.006, 0.006, 0.006, 0.471, 0.153, 0.006, 0.012, 0.018, 0.018, 0.200, 0.006, 0.006, 0.012, 0.024]),\n     \"Class_of_Orbit\": categorical([0.981, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.130, 0.073, 0.006, 0.113, 0.096, 0.006, 0.045, 0.006, 0.113, 0.006, 0.006, 0.006, 0.062, 0.181, 0.006, 0.006, 0.006, 0.011, 0.011, 0.006, 0.006, 0.051, 0.006, 0.034, 0.011])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.566, 48.973),\n     \"Apogee_km\": gaussian(777.165, 8.618),\n     \"Perigee_km\": gaussian(773.589, 11.187),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.359, 0.156),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(566.362, 665.802),\n     \"Apogee_km\": gaussian(508.550, 43.200),\n     \"Perigee_km\": gaussian(492.704, 40.745),\n     \"Type_of_Orbit\": categorical([0.731, 0.019, 0.115, 0.077, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.292, 0.017, 0.008, 0.067, 0.008, 0.025, 0.008, 0.083, 0.008, 0.025, 0.008, 0.050, 0.008, 0.008, 0.008, 0.008, 0.058, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.058, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.719, 0.943),\n     \"Inclination_radians\": gaussian(1.208, 0.495),\n     \"Users\": categorical([0.011, 0.043, 0.272, 0.022, 0.011, 0.011, 0.033, 0.261, 0.087, 0.011, 0.011, 0.022, 0.033, 0.120, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.121, 0.030, 0.010, 0.040, 0.071, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.232, 0.061, 0.020, 0.030, 0.010, 0.030, 0.030, 0.010, 0.010, 0.040, 0.111, 0.010, 0.040, 0.020])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2242.718, 1752.054),\n     \"Apogee_km\": gaussian(65141.186, 78984.201),\n     \"Perigee_km\": gaussian(13048.434, 14466.950),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1114.449, 1114.104),\n     \"Inclination_radians\": gaussian(0.734, 0.539),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1325.000, 1175.233),\n     \"Apogee_km\": gaussian(828.869, 28.767),\n     \"Perigee_km\": gaussian(816.043, 31.290),\n     \"Type_of_Orbit\": categorical([0.767, 0.023, 0.116, 0.023, 0.023, 0.023, 0.023]),\n     \"Purpose\": categorical([0.012, 0.131, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.048, 0.012, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.083, 0.012, 0.071, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.060, 0.012, 0.012, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012]),\n     \"Period_minutes\": gaussian(101.384, 0.580),\n     \"Inclination_radians\": gaussian(1.724, 0.017),\n     \"Users\": categorical([0.018, 0.054, 0.179, 0.018, 0.018, 0.018, 0.018, 0.393, 0.071, 0.018, 0.018, 0.036, 0.018, 0.054, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.929, 0.024, 0.024, 0.024]),\n     \"Launch_Site\": categorical([0.111, 0.063, 0.016, 0.238, 0.079, 0.016, 0.048, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.063, 0.016, 0.063, 0.016])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4981.723, 5518.420),\n     \"Apogee_km\": gaussian(982.841, 282.456),\n     \"Perigee_km\": gaussian(770.179, 309.887),\n     \"Type_of_Orbit\": categorical([0.260, 0.020, 0.040, 0.620, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.115, 0.018, 0.097, 0.018, 0.115, 0.009, 0.009, 0.115, 0.009, 0.018, 0.009, 0.053, 0.009, 0.018, 0.009, 0.009, 0.035, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.035, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009]),\n     \"Period_minutes\": gaussian(103.160, 5.075),\n     \"Inclination_radians\": gaussian(1.320, 0.393),\n     \"Users\": categorical([0.012, 0.012, 0.506, 0.012, 0.012, 0.024, 0.012, 0.176, 0.047, 0.012, 0.012, 0.024, 0.035, 0.059, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.915, 0.014, 0.056, 0.014]),\n     \"Launch_Site\": categorical([0.109, 0.033, 0.011, 0.283, 0.022, 0.011, 0.054, 0.011, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.109, 0.152, 0.011, 0.011, 0.022])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3136.053, 5251.891),\n     \"Apogee_km\": gaussian(25022.719, 56516.059),\n     \"Perigee_km\": gaussian(25795.821, 51625.672),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(924.691, 2113.651),\n     \"Inclination_radians\": gaussian(16.878, 24.640),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 13) {\n    return {\n     \"Launch_Mass_kg\": gaussian(303.029, 167.470),\n     \"Apogee_km\": gaussian(670.267, 82.201),\n     \"Perigee_km\": gaussian(567.094, 137.138),\n     \"Type_of_Orbit\": categorical([0.167, 0.056, 0.111, 0.444, 0.056, 0.111, 0.056]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.049, 0.016, 0.066, 0.016, 0.016, 0.033, 0.016, 0.016, 0.016, 0.016, 0.066, 0.066, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.049]),\n     \"Period_minutes\": gaussian(97.096, 2.017),\n     \"Inclination_radians\": gaussian(1.120, 0.839),\n     \"Users\": categorical([0.030, 0.121, 0.182, 0.030, 0.030, 0.030, 0.030, 0.212, 0.030, 0.030, 0.030, 0.030, 0.061, 0.030, 0.030, 0.030, 0.030, 0.030]),\n     \"Class_of_Orbit\": categorical([0.842, 0.053, 0.053, 0.053]),\n     \"Launch_Site\": categorical([0.025, 0.050, 0.050, 0.075, 0.050, 0.050, 0.025, 0.025, 0.025, 0.025, 0.100, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.075, 0.125, 0.025, 0.025, 0.025, 0.025])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.912, 0.057, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.686, 0.201)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.373, 0.086, 0.064, 0.065, 0.005, 0.027, 0.199, 0.016, 0.074, 0.086, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3787.153, 1496.651),\n     \"Apogee_km\": gaussian(35721.596, 1253.774),\n     \"Perigee_km\": gaussian(35731.994, 1289.397),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.554, 46.415),\n     \"Inclination_radians\": gaussian(0.021, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.659, 42.120),\n     \"Apogee_km\": gaussian(709.575, 139.747),\n     \"Perigee_km\": gaussian(614.058, 145.087),\n     \"Type_of_Orbit\": categorical([0.459, 0.014, 0.014, 0.473, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.220, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.319, 0.007, 0.007, 0.057, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.927, 2.501),\n     \"Inclination_radians\": gaussian(1.043, 0.493),\n     \"Users\": categorical([0.009, 0.062, 0.186, 0.018, 0.009, 0.035, 0.009, 0.115, 0.336, 0.009, 0.009, 0.009, 0.009, 0.142, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.083, 0.017, 0.008, 0.217, 0.008, 0.042, 0.008, 0.008, 0.033, 0.008, 0.008, 0.383, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.017, 0.042, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.645, 50.991),\n     \"Apogee_km\": gaussian(777.172, 8.404),\n     \"Perigee_km\": gaussian(773.524, 11.622),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.366, 0.153),\n     \"Inclination_radians\": gaussian(1.508, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1738.640, 562.547),\n     \"Apogee_km\": gaussian(19840.839, 1976.667),\n     \"Perigee_km\": gaussian(19777.274, 1908.816),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.954, 67.630),\n     \"Inclination_radians\": gaussian(1.033, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.951, 0.494),\n     \"Apogee_km\": gaussian(695.756, 8.526),\n     \"Perigee_km\": gaussian(676.622, 3.148),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.702, 0.871),\n     \"Inclination_radians\": gaussian(1.712, 0.052),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2676.025, 1651.435),\n     \"Apogee_km\": gaussian(37470.917, 6390.789),\n     \"Perigee_km\": gaussian(15651.617, 17620.343),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.079, 0.013, 0.013, 0.132, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.039, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.066, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013]),\n     \"Period_minutes\": gaussian(827.014, 469.934),\n     \"Inclination_radians\": gaussian(0.779, 0.494),\n     \"Users\": categorical([0.021, 0.021, 0.479, 0.021, 0.021, 0.021, 0.021, 0.125, 0.083, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.029, 0.382, 0.559, 0.029]),\n     \"Launch_Site\": categorical([0.073, 0.018, 0.018, 0.055, 0.018, 0.018, 0.055, 0.018, 0.036, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018, 0.200, 0.127, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(575.573, 760.728),\n     \"Apogee_km\": gaussian(683.486, 100.122),\n     \"Perigee_km\": gaussian(653.368, 101.643),\n     \"Type_of_Orbit\": categorical([0.936, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.026, 0.004, 0.038, 0.004, 0.026, 0.015, 0.004, 0.008, 0.004, 0.008, 0.008, 0.023, 0.004, 0.215, 0.008, 0.004, 0.091, 0.004, 0.011, 0.034, 0.042, 0.008, 0.008, 0.004, 0.155, 0.015, 0.023, 0.008, 0.008, 0.023, 0.008, 0.004, 0.004, 0.011, 0.004, 0.011, 0.057, 0.004, 0.008, 0.015, 0.019, 0.008, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.082, 2.052),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.017, 0.076, 0.008, 0.004, 0.004, 0.013, 0.477, 0.139, 0.004, 0.008, 0.021, 0.021, 0.169, 0.004, 0.004, 0.008, 0.017]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.131, 0.074, 0.004, 0.143, 0.111, 0.004, 0.041, 0.004, 0.094, 0.004, 0.004, 0.004, 0.066, 0.135, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.061, 0.004, 0.057, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1654.184, 1761.235),\n     \"Apogee_km\": gaussian(113505.022, 111738.630),\n     \"Perigee_km\": gaussian(10837.974, 11323.632),\n     \"Type_of_Orbit\": categorical([0.067, 0.600, 0.067, 0.067, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.109, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.172, 0.016, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(1733.282, 1576.675),\n     \"Inclination_radians\": gaussian(1.776, 5.874),\n     \"Users\": categorical([0.028, 0.111, 0.028, 0.028, 0.028, 0.028, 0.028, 0.278, 0.194, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.136, 0.591, 0.227]),\n     \"Launch_Site\": categorical([0.163, 0.023, 0.023, 0.023, 0.023, 0.023, 0.163, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.047, 0.140, 0.023, 0.023, 0.023, 0.023])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(429.392, 202.359),\n     \"Apogee_km\": gaussian(1447.810, 80.807),\n     \"Perigee_km\": gaussian(1431.933, 71.844),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.634, 1.508),\n     \"Inclination_radians\": gaussian(1.132, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3554.056, 4997.170),\n     \"Apogee_km\": gaussian(871.475, 306.038),\n     \"Perigee_km\": gaussian(702.367, 303.363),\n     \"Type_of_Orbit\": categorical([0.224, 0.015, 0.149, 0.552, 0.015, 0.030, 0.015]),\n     \"Purpose\": categorical([0.007, 0.035, 0.007, 0.035, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.113, 0.014, 0.078, 0.014, 0.092, 0.021, 0.007, 0.113, 0.028, 0.050, 0.007, 0.043, 0.007, 0.014, 0.007, 0.007, 0.035, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.064, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(100.572, 5.489),\n     \"Inclination_radians\": gaussian(1.298, 0.489),\n     \"Users\": categorical([0.009, 0.062, 0.469, 0.009, 0.009, 0.018, 0.009, 0.204, 0.053, 0.009, 0.009, 0.018, 0.035, 0.053, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.939, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.117, 0.025, 0.017, 0.242, 0.025, 0.008, 0.042, 0.008, 0.025, 0.008, 0.033, 0.025, 0.017, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.017, 0.108, 0.158, 0.008, 0.017, 0.025])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(244.498, 306.643),\n     \"Apogee_km\": gaussian(5847.227, 5870.005),\n     \"Perigee_km\": gaussian(865.953, 726.976),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(154.006, 89.885),\n     \"Inclination_radians\": gaussian(1.146, 0.328),\n     \"Users\": categorical([0.043, 0.043, 0.174, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.222, 0.111, 0.444, 0.222]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.067, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.909, 0.060, 0.030, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.696, 0.166)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.184, 0.244)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.067, 0.057, 0.374, 0.154, 0.065, 0.004, 0.181, 0.045, 0.051, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(488.851, 527.533),\n     \"Apogee_km\": gaussian(508.493, 43.072),\n     \"Perigee_km\": gaussian(486.466, 48.287),\n     \"Type_of_Orbit\": categorical([0.731, 0.019, 0.115, 0.077, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.292, 0.017, 0.008, 0.067, 0.008, 0.025, 0.008, 0.083, 0.025, 0.025, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.058, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.058, 0.017, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.679, 0.870),\n     \"Inclination_radians\": gaussian(1.215, 0.523),\n     \"Users\": categorical([0.011, 0.043, 0.293, 0.022, 0.011, 0.011, 0.033, 0.250, 0.087, 0.011, 0.011, 0.022, 0.022, 0.120, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.121, 0.010, 0.010, 0.040, 0.071, 0.010, 0.010, 0.010, 0.020, 0.010, 0.030, 0.232, 0.061, 0.020, 0.020, 0.010, 0.030, 0.040, 0.010, 0.010, 0.040, 0.111, 0.010, 0.040, 0.020])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(32.302, 29.106),\n     \"Apogee_km\": gaussian(805.978, 57.730),\n     \"Perigee_km\": gaussian(668.547, 148.281),\n     \"Type_of_Orbit\": categorical([0.240, 0.020, 0.020, 0.660, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.284, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.174, 0.009, 0.009, 0.055, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.474, 1.585),\n     \"Inclination_radians\": gaussian(1.128, 0.556),\n     \"Users\": categorical([0.012, 0.074, 0.111, 0.012, 0.012, 0.049, 0.012, 0.086, 0.432, 0.012, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.057, 0.011, 0.011, 0.307, 0.011, 0.045, 0.011, 0.011, 0.045, 0.011, 0.011, 0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3727.732, 1409.368),\n     \"Apogee_km\": gaussian(35823.438, 1235.830),\n     \"Perigee_km\": gaussian(35777.523, 1268.791),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.806, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.004, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1436.651, 47.122),\n     \"Inclination_radians\": gaussian(0.020, 0.077),\n     \"Users\": categorical([0.002, 0.012, 0.165, 0.002, 0.007, 0.002, 0.021, 0.121, 0.626, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.355, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.066, 0.002, 0.215, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(557.136, 202.141),\n     \"Apogee_km\": gaussian(1140.653, 342.019),\n     \"Perigee_km\": gaussian(1113.746, 320.207),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.429, 0.535, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.708, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.051, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.803, 7.435),\n     \"Inclination_radians\": gaussian(1.322, 0.291),\n     \"Users\": categorical([0.011, 0.005, 0.202, 0.005, 0.005, 0.005, 0.005, 0.021, 0.255, 0.005, 0.005, 0.005, 0.383, 0.021, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.971, 0.006, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.292, 0.005, 0.005, 0.267, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.246, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1744.213, 588.705),\n     \"Apogee_km\": gaussian(19871.899, 1902.994),\n     \"Perigee_km\": gaussian(19815.781, 1880.611),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.702, 65.215),\n     \"Inclination_radians\": gaussian(1.035, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.895, 0.707),\n     \"Apogee_km\": gaussian(694.336, 9.370),\n     \"Perigee_km\": gaussian(675.891, 1.484),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.470, 0.656),\n     \"Inclination_radians\": gaussian(1.714, 0.064),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(640.674, 1053.382),\n     \"Apogee_km\": gaussian(709.913, 80.807),\n     \"Perigee_km\": gaussian(672.005, 87.662),\n     \"Type_of_Orbit\": categorical([0.922, 0.006, 0.050, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.045, 0.004, 0.041, 0.004, 0.029, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.204, 0.004, 0.004, 0.073, 0.004, 0.012, 0.037, 0.029, 0.008, 0.008, 0.004, 0.159, 0.016, 0.024, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.065, 0.004, 0.008, 0.020, 0.020, 0.004, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.578, 1.698),\n     \"Inclination_radians\": gaussian(1.713, 0.010),\n     \"Users\": categorical([0.005, 0.023, 0.065, 0.009, 0.005, 0.005, 0.005, 0.475, 0.143, 0.005, 0.009, 0.018, 0.018, 0.180, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.134, 0.080, 0.004, 0.152, 0.094, 0.004, 0.054, 0.004, 0.103, 0.004, 0.004, 0.004, 0.049, 0.147, 0.009, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.054, 0.004, 0.054, 0.009])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2099.086, 1756.570),\n     \"Apogee_km\": gaussian(66532.576, 75537.590),\n     \"Perigee_km\": gaussian(11894.195, 14776.451),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.010, 0.010, 0.167, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.042, 0.010, 0.031, 0.010, 0.010, 0.010, 0.125, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.063, 0.010]),\n     \"Period_minutes\": gaussian(1051.410, 1125.844),\n     \"Inclination_radians\": gaussian(0.738, 0.546),\n     \"Users\": categorical([0.015, 0.059, 0.382, 0.015, 0.015, 0.015, 0.015, 0.206, 0.132, 0.015, 0.015, 0.015, 0.015, 0.029, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.037, 0.241, 0.630, 0.093]),\n     \"Launch_Site\": categorical([0.133, 0.013, 0.013, 0.053, 0.013, 0.027, 0.107, 0.013, 0.027, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.080, 0.027, 0.200, 0.093, 0.013, 0.027, 0.027])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5203.349, 6100.087),\n     \"Apogee_km\": gaussian(915.454, 303.767),\n     \"Perigee_km\": gaussian(704.815, 308.772),\n     \"Type_of_Orbit\": categorical([0.300, 0.025, 0.025, 0.550, 0.025, 0.050, 0.025]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.039, 0.010, 0.137, 0.020, 0.010, 0.029, 0.118, 0.010, 0.010, 0.108, 0.020, 0.049, 0.010, 0.049, 0.010, 0.020, 0.010, 0.010, 0.039, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010]),\n     \"Period_minutes\": gaussian(101.026, 5.491),\n     \"Inclination_radians\": gaussian(1.214, 0.513),\n     \"Users\": categorical([0.014, 0.054, 0.419, 0.014, 0.014, 0.027, 0.014, 0.216, 0.014, 0.014, 0.014, 0.027, 0.041, 0.068, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.917, 0.017, 0.050, 0.017]),\n     \"Launch_Site\": categorical([0.074, 0.049, 0.025, 0.284, 0.025, 0.025, 0.037, 0.012, 0.025, 0.012, 0.025, 0.012, 0.025, 0.012, 0.012, 0.025, 0.012, 0.012, 0.012, 0.037, 0.148, 0.049, 0.012, 0.012, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3168.601, 7200.116),\n     \"Apogee_km\": gaussian(22488.321, 43887.193),\n     \"Perigee_km\": gaussian(24681.675, 45121.436),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(964.125, 2272.877),\n     \"Inclination_radians\": gaussian(17.675, 38.016),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.914, 0.055, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.697, 0.190)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.101, 0.075, 0.373, 0.064, 0.065, 0.005, 0.027, 0.134, 0.074, 0.061, 0.016, 0.005]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2599.160, 4655.884),\n     \"Apogee_km\": gaussian(903.548, 248.740),\n     \"Perigee_km\": gaussian(763.736, 247.373),\n     \"Type_of_Orbit\": categorical([0.189, 0.011, 0.033, 0.722, 0.011, 0.022, 0.011]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.197, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.025, 0.006, 0.102, 0.013, 0.070, 0.051, 0.083, 0.006, 0.006, 0.070, 0.013, 0.032, 0.006, 0.045, 0.006, 0.013, 0.006, 0.006, 0.025, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.019]),\n     \"Period_minutes\": gaussian(101.714, 4.201),\n     \"Inclination_radians\": gaussian(1.089, 0.465),\n     \"Users\": categorical([0.008, 0.070, 0.341, 0.008, 0.008, 0.016, 0.008, 0.163, 0.240, 0.008, 0.008, 0.016, 0.031, 0.047, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.948, 0.009, 0.035, 0.009]),\n     \"Launch_Site\": categorical([0.074, 0.022, 0.015, 0.243, 0.022, 0.022, 0.022, 0.007, 0.037, 0.007, 0.015, 0.199, 0.015, 0.007, 0.007, 0.015, 0.007, 0.007, 0.007, 0.022, 0.103, 0.096, 0.007, 0.007, 0.015])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6.784, 11.918),\n     \"Apogee_km\": gaussian(727.206, 93.778),\n     \"Perigee_km\": gaussian(586.764, 82.880),\n     \"Type_of_Orbit\": categorical([0.864, 0.015, 0.015, 0.061, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.085, 0.008, 0.054, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.054, 0.008, 0.411, 0.008, 0.008, 0.016, 0.008, 0.039, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.873, 0.938),\n     \"Inclination_radians\": gaussian(1.678, 0.279),\n     \"Users\": categorical([0.010, 0.010, 0.079, 0.010, 0.010, 0.040, 0.010, 0.079, 0.287, 0.010, 0.020, 0.010, 0.010, 0.376, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.966, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.176, 0.028, 0.009, 0.176, 0.009, 0.028, 0.019, 0.009, 0.120, 0.009, 0.009, 0.009, 0.037, 0.231, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.019, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3653.940, 1424.847),\n     \"Apogee_km\": gaussian(35838.239, 1266.521),\n     \"Perigee_km\": gaussian(35729.398, 1230.120),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.039, 45.422),\n     \"Inclination_radians\": gaussian(0.017, 0.072),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.364, 48.907),\n     \"Apogee_km\": gaussian(776.990, 8.395),\n     \"Perigee_km\": gaussian(773.768, 11.397),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.164),\n     \"Inclination_radians\": gaussian(1.509, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1725.008, 543.484),\n     \"Apogee_km\": gaussian(20033.107, 1909.592),\n     \"Perigee_km\": gaussian(19743.002, 1971.407),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(703.943, 68.541),\n     \"Inclination_radians\": gaussian(1.040, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.981, 0.590),\n     \"Apogee_km\": gaussian(696.086, 9.178),\n     \"Perigee_km\": gaussian(676.679, 3.184),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.617, 0.723),\n     \"Inclination_radians\": gaussian(1.712, 0.054),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2644.730, 1720.370),\n     \"Apogee_km\": gaussian(37524.795, 6427.291),\n     \"Perigee_km\": gaussian(16339.324, 16010.993),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.079, 0.013, 0.013, 0.132, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.039, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.066, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013]),\n     \"Period_minutes\": gaussian(858.416, 481.769),\n     \"Inclination_radians\": gaussian(0.782, 0.490),\n     \"Users\": categorical([0.021, 0.021, 0.479, 0.021, 0.021, 0.021, 0.021, 0.125, 0.083, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.029, 0.382, 0.559, 0.029]),\n     \"Launch_Site\": categorical([0.073, 0.018, 0.018, 0.055, 0.018, 0.018, 0.055, 0.018, 0.036, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018, 0.200, 0.127, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(954.936, 1099.403),\n     \"Apogee_km\": gaussian(712.577, 89.576),\n     \"Perigee_km\": gaussian(690.115, 95.471),\n     \"Type_of_Orbit\": categorical([0.895, 0.008, 0.068, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.005, 0.057, 0.005, 0.021, 0.005, 0.005, 0.021, 0.005, 0.010, 0.005, 0.005, 0.010, 0.015, 0.005, 0.098, 0.005, 0.005, 0.088, 0.005, 0.005, 0.046, 0.041, 0.010, 0.010, 0.005, 0.196, 0.021, 0.031, 0.010, 0.010, 0.010, 0.010, 0.005, 0.005, 0.015, 0.005, 0.015, 0.082, 0.005, 0.010, 0.021, 0.026, 0.010, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.648, 1.937),\n     \"Inclination_radians\": gaussian(1.713, 0.012),\n     \"Users\": categorical([0.006, 0.030, 0.102, 0.012, 0.006, 0.006, 0.006, 0.602, 0.066, 0.006, 0.006, 0.024, 0.018, 0.060, 0.006, 0.006, 0.012, 0.024]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.116, 0.098, 0.006, 0.208, 0.121, 0.006, 0.064, 0.006, 0.064, 0.006, 0.006, 0.006, 0.046, 0.052, 0.006, 0.006, 0.006, 0.012, 0.012, 0.006, 0.006, 0.058, 0.006, 0.069, 0.012])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(431.443, 200.524),\n     \"Apogee_km\": gaussian(1446.229, 80.023),\n     \"Perigee_km\": gaussian(1431.079, 72.289),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.614, 1.549),\n     \"Inclination_radians\": gaussian(1.141, 0.299),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(467.290, 497.342),\n     \"Apogee_km\": gaussian(507.039, 40.607),\n     \"Perigee_km\": gaussian(485.044, 45.208),\n     \"Type_of_Orbit\": categorical([0.702, 0.021, 0.128, 0.085, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.274, 0.018, 0.009, 0.071, 0.009, 0.027, 0.009, 0.080, 0.027, 0.027, 0.009, 0.027, 0.009, 0.009, 0.009, 0.009, 0.053, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.062, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(94.569, 0.900),\n     \"Inclination_radians\": gaussian(1.223, 0.526),\n     \"Users\": categorical([0.012, 0.047, 0.282, 0.024, 0.012, 0.012, 0.035, 0.247, 0.082, 0.012, 0.012, 0.024, 0.035, 0.106, 0.024, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.958, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.087, 0.011, 0.011, 0.033, 0.076, 0.011, 0.011, 0.011, 0.022, 0.011, 0.033, 0.239, 0.065, 0.022, 0.033, 0.011, 0.033, 0.033, 0.011, 0.011, 0.043, 0.120, 0.011, 0.033, 0.022])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1676.665, 1814.962),\n     \"Apogee_km\": gaussian(113737.567, 114502.310),\n     \"Perigee_km\": gaussian(10241.325, 11947.262),\n     \"Type_of_Orbit\": categorical([0.067, 0.600, 0.067, 0.067, 0.067, 0.067, 0.067]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.109, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.172, 0.016, 0.016, 0.047, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(1751.564, 1543.409),\n     \"Inclination_radians\": gaussian(2.114, 5.812),\n     \"Users\": categorical([0.028, 0.111, 0.028, 0.028, 0.028, 0.028, 0.028, 0.278, 0.194, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028, 0.028]),\n     \"Class_of_Orbit\": categorical([0.045, 0.136, 0.591, 0.227]),\n     \"Launch_Site\": categorical([0.163, 0.023, 0.023, 0.023, 0.023, 0.023, 0.163, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.047, 0.140, 0.023, 0.023, 0.023, 0.023])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(240.037, 296.712),\n     \"Apogee_km\": gaussian(5940.446, 6145.881),\n     \"Perigee_km\": gaussian(850.086, 716.849),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(151.079, 93.426),\n     \"Inclination_radians\": gaussian(1.130, 0.323),\n     \"Users\": categorical([0.043, 0.043, 0.174, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.222, 0.111, 0.444, 0.222]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.067, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.915, 0.053, 0.031, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.682, 0.179)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.014, 0.092)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.064, 0.203, 0.373, 0.074, 0.065, 0.005, 0.089, 0.046, 0.080, 0.001, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.073, 50.636),\n     \"Apogee_km\": gaussian(777.443, 8.113),\n     \"Perigee_km\": gaussian(774.107, 10.728),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.372, 0.159),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(598.946, 838.059),\n     \"Apogee_km\": gaussian(675.043, 104.282),\n     \"Perigee_km\": gaussian(653.686, 100.431),\n     \"Type_of_Orbit\": categorical([0.937, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.033, 0.004, 0.041, 0.004, 0.022, 0.015, 0.004, 0.007, 0.004, 0.007, 0.007, 0.022, 0.004, 0.208, 0.007, 0.004, 0.089, 0.004, 0.011, 0.033, 0.048, 0.007, 0.007, 0.004, 0.152, 0.015, 0.022, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.056, 0.004, 0.007, 0.015, 0.019, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.088, 1.998),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.017, 0.091, 0.008, 0.004, 0.004, 0.012, 0.473, 0.137, 0.004, 0.008, 0.021, 0.021, 0.162, 0.004, 0.004, 0.008, 0.017]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.133, 0.073, 0.004, 0.149, 0.109, 0.004, 0.048, 0.004, 0.089, 0.004, 0.004, 0.004, 0.065, 0.129, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.065, 0.004, 0.056, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3750.868, 1495.976),\n     \"Apogee_km\": gaussian(35786.373, 1247.266),\n     \"Perigee_km\": gaussian(35684.269, 1252.655),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.651, 48.318),\n     \"Inclination_radians\": gaussian(0.018, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(425.022, 194.308),\n     \"Apogee_km\": gaussian(1445.314, 79.432),\n     \"Perigee_km\": gaussian(1431.722, 69.248),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.619, 1.554),\n     \"Inclination_radians\": gaussian(1.154, 0.300),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1747.680, 562.950),\n     \"Apogee_km\": gaussian(19994.724, 1949.072),\n     \"Perigee_km\": gaussian(19738.429, 1967.501),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.638, 66.306),\n     \"Inclination_radians\": gaussian(1.041, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.871, 0.606),\n     \"Apogee_km\": gaussian(696.151, 8.603),\n     \"Perigee_km\": gaussian(676.817, 2.715),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.654, 0.707),\n     \"Inclination_radians\": gaussian(1.713, 0.053),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.413, 43.326),\n     \"Apogee_km\": gaussian(702.108, 146.631),\n     \"Perigee_km\": gaussian(619.275, 138.312),\n     \"Type_of_Orbit\": categorical([0.461, 0.013, 0.013, 0.474, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.208, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.326, 0.007, 0.007, 0.056, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.953, 2.609),\n     \"Inclination_radians\": gaussian(1.081, 0.533),\n     \"Users\": categorical([0.009, 0.060, 0.190, 0.017, 0.009, 0.034, 0.009, 0.121, 0.328, 0.009, 0.009, 0.009, 0.009, 0.147, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.081, 0.016, 0.008, 0.220, 0.008, 0.041, 0.008, 0.008, 0.041, 0.008, 0.008, 0.374, 0.008, 0.016, 0.008, 0.008, 0.024, 0.008, 0.008, 0.016, 0.041, 0.016, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2206.023, 1783.451),\n     \"Apogee_km\": gaussian(67877.390, 78270.524),\n     \"Perigee_km\": gaussian(12614.232, 14568.320),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.062, 0.010, 0.010, 0.165, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.124, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010]),\n     \"Period_minutes\": gaussian(1173.314, 1090.274),\n     \"Inclination_radians\": gaussian(0.738, 0.544),\n     \"Users\": categorical([0.014, 0.058, 0.362, 0.014, 0.014, 0.014, 0.014, 0.217, 0.130, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.018, 0.255, 0.618, 0.109]),\n     \"Launch_Site\": categorical([0.145, 0.013, 0.013, 0.053, 0.013, 0.026, 0.105, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.026, 0.211, 0.092, 0.013, 0.013, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3716.498, 4831.540),\n     \"Apogee_km\": gaussian(879.977, 303.985),\n     \"Perigee_km\": gaussian(717.141, 297.862),\n     \"Type_of_Orbit\": categorical([0.177, 0.016, 0.161, 0.581, 0.016, 0.032, 0.016]),\n     \"Purpose\": categorical([0.007, 0.022, 0.007, 0.037, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.112, 0.015, 0.082, 0.015, 0.097, 0.015, 0.007, 0.104, 0.030, 0.052, 0.007, 0.045, 0.007, 0.015, 0.007, 0.007, 0.030, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.067, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007]),\n     \"Period_minutes\": gaussian(101.231, 5.538),\n     \"Inclination_radians\": gaussian(1.257, 0.492),\n     \"Users\": categorical([0.009, 0.066, 0.453, 0.009, 0.009, 0.019, 0.009, 0.198, 0.057, 0.009, 0.009, 0.019, 0.038, 0.057, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.935, 0.011, 0.043, 0.011]),\n     \"Launch_Site\": categorical([0.115, 0.027, 0.018, 0.230, 0.027, 0.009, 0.027, 0.009, 0.027, 0.009, 0.035, 0.027, 0.018, 0.018, 0.018, 0.018, 0.009, 0.009, 0.009, 0.018, 0.115, 0.159, 0.009, 0.018, 0.027])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3151.018, 6234.633),\n     \"Apogee_km\": gaussian(22013.081, 69107.527),\n     \"Perigee_km\": gaussian(25977.485, 53442.748),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(885.594, 2022.118),\n     \"Inclination_radians\": gaussian(16.359, 23.079),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(99.044, 64.968),\n     \"Apogee_km\": gaussian(548.427, 410.566),\n     \"Perigee_km\": gaussian(479.567, 316.015),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(65.648, 103.663),\n     \"Inclination_radians\": gaussian(1.062, 1.272),\n     \"Users\": categorical([0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.400, 0.200, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.918, 0.051, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.688, 0.186)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.074, 0.373, 0.060, 0.065, 0.004, 0.163, 0.064, 0.074, 0.047, 0.074, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(423.982, 187.192),\n     \"Apogee_km\": gaussian(1445.517, 83.489),\n     \"Perigee_km\": gaussian(1422.309, 92.519),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.625, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.592, 1.505),\n     \"Inclination_radians\": gaussian(1.136, 0.292),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.460, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.364, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.336, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3718.143, 1534.928),\n     \"Apogee_km\": gaussian(35790.437, 1238.713),\n     \"Perigee_km\": gaussian(35742.388, 1230.932),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.951, 48.338),\n     \"Inclination_radians\": gaussian(0.016, 0.074),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.935, 28.734),\n     \"Apogee_km\": gaussian(807.010, 57.170),\n     \"Perigee_km\": gaussian(673.684, 144.414),\n     \"Type_of_Orbit\": categorical([0.269, 0.019, 0.019, 0.635, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.268, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.036, 0.009, 0.179, 0.009, 0.009, 0.054, 0.009, 0.027, 0.009, 0.009, 0.009, 0.018, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027]),\n     \"Period_minutes\": gaussian(99.649, 1.493),\n     \"Inclination_radians\": gaussian(1.169, 0.577),\n     \"Users\": categorical([0.012, 0.071, 0.107, 0.012, 0.012, 0.048, 0.012, 0.107, 0.417, 0.012, 0.012, 0.012, 0.012, 0.107, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.957, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.055, 0.011, 0.011, 0.308, 0.011, 0.044, 0.011, 0.011, 0.044, 0.011, 0.011, 0.286, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.033, 0.022, 0.011, 0.022, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1761.818, 575.837),\n     \"Apogee_km\": gaussian(20008.105, 1963.273),\n     \"Perigee_km\": gaussian(19846.267, 1870.624),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.427, 66.144),\n     \"Inclination_radians\": gaussian(1.033, 0.106),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.986, 0.564),\n     \"Apogee_km\": gaussian(694.326, 9.523),\n     \"Perigee_km\": gaussian(675.518, 2.450),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.624, 0.777),\n     \"Inclination_radians\": gaussian(1.711, 0.065),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(562.644, 844.185),\n     \"Apogee_km\": gaussian(692.588, 72.901),\n     \"Perigee_km\": gaussian(653.773, 72.839),\n     \"Type_of_Orbit\": categorical([0.939, 0.006, 0.031, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.009, 0.004, 0.049, 0.004, 0.031, 0.018, 0.004, 0.009, 0.004, 0.009, 0.004, 0.027, 0.004, 0.217, 0.004, 0.004, 0.075, 0.004, 0.013, 0.040, 0.027, 0.004, 0.004, 0.004, 0.173, 0.018, 0.009, 0.009, 0.009, 0.004, 0.009, 0.004, 0.004, 0.013, 0.004, 0.013, 0.062, 0.004, 0.009, 0.022, 0.022, 0.009, 0.013, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.308, 1.435),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.005, 0.015, 0.040, 0.010, 0.005, 0.005, 0.005, 0.480, 0.157, 0.005, 0.010, 0.010, 0.020, 0.192, 0.005, 0.005, 0.010, 0.020]),\n     \"Class_of_Orbit\": categorical([0.984, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.137, 0.083, 0.005, 0.102, 0.102, 0.005, 0.059, 0.005, 0.107, 0.005, 0.005, 0.005, 0.049, 0.161, 0.010, 0.005, 0.005, 0.010, 0.010, 0.005, 0.005, 0.054, 0.005, 0.054, 0.010])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.400, 46.981),\n     \"Apogee_km\": gaussian(777.223, 8.324),\n     \"Perigee_km\": gaussian(773.250, 11.907),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.355, 0.156),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(533.446, 562.943),\n     \"Apogee_km\": gaussian(516.563, 51.345),\n     \"Perigee_km\": gaussian(498.450, 52.321),\n     \"Type_of_Orbit\": categorical([0.691, 0.018, 0.109, 0.127, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.291, 0.016, 0.008, 0.063, 0.008, 0.024, 0.008, 0.087, 0.031, 0.047, 0.008, 0.024, 0.008, 0.008, 0.008, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.055, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.921, 1.091),\n     \"Inclination_radians\": gaussian(1.217, 0.534),\n     \"Users\": categorical([0.010, 0.071, 0.273, 0.020, 0.010, 0.010, 0.030, 0.253, 0.081, 0.010, 0.010, 0.030, 0.020, 0.121, 0.020, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.104, 0.028, 0.009, 0.047, 0.066, 0.009, 0.009, 0.009, 0.028, 0.009, 0.028, 0.217, 0.066, 0.019, 0.019, 0.009, 0.028, 0.028, 0.009, 0.019, 0.057, 0.113, 0.009, 0.038, 0.019])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2142.487, 1795.979),\n     \"Apogee_km\": gaussian(62985.074, 79479.231),\n     \"Perigee_km\": gaussian(11819.878, 14444.323),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1143.077, 1087.551),\n     \"Inclination_radians\": gaussian(0.762, 0.521),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4071.104, 5277.309),\n     \"Apogee_km\": gaussian(945.199, 262.901),\n     \"Perigee_km\": gaussian(778.877, 278.101),\n     \"Type_of_Orbit\": categorical([0.333, 0.015, 0.106, 0.485, 0.015, 0.030, 0.015]),\n     \"Purpose\": categorical([0.008, 0.078, 0.008, 0.031, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.102, 0.016, 0.086, 0.031, 0.102, 0.008, 0.008, 0.086, 0.016, 0.016, 0.008, 0.047, 0.008, 0.047, 0.008, 0.008, 0.031, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.031, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008]),\n     \"Period_minutes\": gaussian(102.120, 4.405),\n     \"Inclination_radians\": gaussian(1.377, 0.450),\n     \"Users\": categorical([0.010, 0.030, 0.490, 0.010, 0.010, 0.020, 0.010, 0.220, 0.030, 0.010, 0.010, 0.030, 0.040, 0.040, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.930, 0.012, 0.047, 0.012]),\n     \"Launch_Site\": categorical([0.112, 0.028, 0.019, 0.346, 0.028, 0.019, 0.028, 0.009, 0.019, 0.009, 0.019, 0.009, 0.019, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.019, 0.093, 0.121, 0.009, 0.009, 0.019])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3271.305, 6556.235),\n     \"Apogee_km\": gaussian(22969.480, 103550.526),\n     \"Perigee_km\": gaussian(20539.773, 60272.488),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1023.107, 2052.863),\n     \"Inclination_radians\": gaussian(17.198, 55.279),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.916, 0.053, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.687, 0.199)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.153, 0.373, 0.057, 0.065, 0.005, 0.180, 0.070, 0.046, 0.049, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(562.359, 213.379),\n     \"Apogee_km\": gaussian(1136.190, 330.302),\n     \"Perigee_km\": gaussian(1106.521, 329.359),\n     \"Type_of_Orbit\": categorical([0.018, 0.006, 0.429, 0.529, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.712, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.014, 0.009, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.847, 7.243),\n     \"Inclination_radians\": gaussian(1.316, 0.276),\n     \"Users\": categorical([0.011, 0.005, 0.198, 0.005, 0.005, 0.011, 0.005, 0.011, 0.257, 0.005, 0.005, 0.011, 0.385, 0.021, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.012]),\n     \"Launch_Site\": categorical([0.294, 0.005, 0.005, 0.263, 0.052, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.247, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3791.252, 1472.550),\n     \"Apogee_km\": gaussian(35762.787, 1214.499),\n     \"Perigee_km\": gaussian(35784.913, 1238.937),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1433.982, 47.694),\n     \"Inclination_radians\": gaussian(0.020, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(39.489, 36.925),\n     \"Apogee_km\": gaussian(797.319, 62.504),\n     \"Perigee_km\": gaussian(672.301, 148.259),\n     \"Type_of_Orbit\": categorical([0.216, 0.020, 0.020, 0.686, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.275, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.046, 0.009, 0.156, 0.009, 0.009, 0.064, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.485, 1.558),\n     \"Inclination_radians\": gaussian(1.137, 0.578),\n     \"Users\": categorical([0.012, 0.074, 0.086, 0.012, 0.012, 0.049, 0.012, 0.111, 0.432, 0.012, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.057, 0.011, 0.011, 0.295, 0.011, 0.045, 0.011, 0.011, 0.045, 0.011, 0.011, 0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.023, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1743.883, 545.883),\n     \"Apogee_km\": gaussian(19902.665, 1876.641),\n     \"Perigee_km\": gaussian(19823.296, 1900.129),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.972, 66.066),\n     \"Inclination_radians\": gaussian(1.039, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.974, 0.343),\n     \"Apogee_km\": gaussian(696.076, 9.027),\n     \"Perigee_km\": gaussian(676.420, 3.544),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.495, 0.486),\n     \"Inclination_radians\": gaussian(1.710, 0.056),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(689.796, 995.950),\n     \"Apogee_km\": gaussian(709.469, 82.383),\n     \"Perigee_km\": gaussian(667.527, 88.086),\n     \"Type_of_Orbit\": categorical([0.921, 0.006, 0.051, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.045, 0.004, 0.045, 0.004, 0.029, 0.016, 0.004, 0.008, 0.004, 0.008, 0.004, 0.025, 0.004, 0.209, 0.004, 0.004, 0.074, 0.004, 0.012, 0.037, 0.029, 0.008, 0.008, 0.004, 0.160, 0.016, 0.025, 0.008, 0.004, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.066, 0.004, 0.008, 0.016, 0.020, 0.004, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.520, 1.674),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.023, 0.065, 0.009, 0.005, 0.005, 0.005, 0.472, 0.144, 0.005, 0.009, 0.019, 0.019, 0.181, 0.005, 0.005, 0.009, 0.019]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.135, 0.081, 0.004, 0.152, 0.094, 0.004, 0.054, 0.004, 0.103, 0.004, 0.004, 0.004, 0.049, 0.148, 0.009, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.049, 0.004, 0.054, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(444.634, 503.627),\n     \"Apogee_km\": gaussian(515.078, 50.758),\n     \"Perigee_km\": gaussian(496.370, 53.856),\n     \"Type_of_Orbit\": categorical([0.736, 0.019, 0.113, 0.075, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.301, 0.016, 0.008, 0.065, 0.008, 0.024, 0.008, 0.081, 0.024, 0.024, 0.008, 0.024, 0.008, 0.008, 0.008, 0.008, 0.057, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.057, 0.016, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.819, 0.984),\n     \"Inclination_radians\": gaussian(1.236, 0.533),\n     \"Users\": categorical([0.011, 0.042, 0.284, 0.021, 0.011, 0.011, 0.032, 0.263, 0.084, 0.011, 0.011, 0.021, 0.021, 0.126, 0.021, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.963, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.118, 0.020, 0.010, 0.039, 0.069, 0.010, 0.010, 0.010, 0.020, 0.010, 0.029, 0.225, 0.059, 0.020, 0.020, 0.010, 0.029, 0.039, 0.010, 0.020, 0.039, 0.118, 0.010, 0.039, 0.020])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2147.198, 1801.073),\n     \"Apogee_km\": gaussian(68103.814, 76886.120),\n     \"Perigee_km\": gaussian(13313.215, 14853.705),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.062, 0.010, 0.010, 0.165, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.124, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010]),\n     \"Period_minutes\": gaussian(1133.356, 1151.006),\n     \"Inclination_radians\": gaussian(0.748, 0.534),\n     \"Users\": categorical([0.014, 0.058, 0.377, 0.014, 0.014, 0.014, 0.014, 0.217, 0.130, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.255, 0.618, 0.091]),\n     \"Launch_Site\": categorical([0.132, 0.013, 0.013, 0.053, 0.013, 0.026, 0.105, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.026, 0.211, 0.092, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5833.417, 5734.357),\n     \"Apogee_km\": gaussian(939.448, 307.599),\n     \"Perigee_km\": gaussian(712.048, 310.650),\n     \"Type_of_Orbit\": categorical([0.289, 0.026, 0.026, 0.553, 0.026, 0.053, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.120, 0.010, 0.010, 0.020, 0.130, 0.010, 0.010, 0.110, 0.020, 0.050, 0.010, 0.060, 0.010, 0.020, 0.010, 0.020, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010]),\n     \"Period_minutes\": gaussian(101.547, 5.292),\n     \"Inclination_radians\": gaussian(1.254, 0.529),\n     \"Users\": categorical([0.014, 0.056, 0.472, 0.014, 0.014, 0.014, 0.014, 0.194, 0.014, 0.014, 0.014, 0.014, 0.042, 0.056, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.897, 0.017, 0.069, 0.017]),\n     \"Launch_Site\": categorical([0.076, 0.038, 0.025, 0.316, 0.025, 0.025, 0.038, 0.013, 0.025, 0.013, 0.025, 0.013, 0.025, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.152, 0.038, 0.013, 0.013, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3191.647, 6694.876),\n     \"Apogee_km\": gaussian(23229.371, 56660.423),\n     \"Perigee_km\": gaussian(25370.263, 52858.896),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1080.963, 2148.302),\n     \"Inclination_radians\": gaussian(17.297, 29.506),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.919, 0.050, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.033, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.691, 0.173)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.998, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.020, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.037, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.003, 0.010, 0.019, 0.004, 0.405, 0.002, 0.002, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.047, 0.373, 0.064, 0.074, 0.065, 0.004, 0.205, 0.070, 0.097, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2121.372, 1782.717),\n     \"Apogee_km\": gaussian(64374.740, 76759.316),\n     \"Perigee_km\": gaussian(12527.063, 14396.428),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1117.136, 1106.768),\n     \"Inclination_radians\": gaussian(0.769, 0.521),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3720.593, 1412.817),\n     \"Apogee_km\": gaussian(35825.243, 1251.955),\n     \"Perigee_km\": gaussian(35730.227, 1258.152),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.171, 48.006),\n     \"Inclination_radians\": gaussian(0.018, 0.074),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.353, 48.178),\n     \"Apogee_km\": gaussian(776.722, 8.355),\n     \"Perigee_km\": gaussian(773.523, 11.081),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.358, 0.158),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(423.280, 200.109),\n     \"Apogee_km\": gaussian(1445.084, 81.662),\n     \"Perigee_km\": gaussian(1430.679, 73.238),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.735, 1.511),\n     \"Inclination_radians\": gaussian(1.139, 0.312),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.020, 0.455, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.340, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1769.867, 554.006),\n     \"Apogee_km\": gaussian(19947.516, 1877.380),\n     \"Perigee_km\": gaussian(19783.826, 1954.977),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.103, 67.991),\n     \"Inclination_radians\": gaussian(1.037, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.869, 0.850),\n     \"Apogee_km\": gaussian(694.553, 9.408),\n     \"Perigee_km\": gaussian(675.718, 2.131),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.679, 1.008),\n     \"Inclination_radians\": gaussian(1.714, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(692.857, 1016.314),\n     \"Apogee_km\": gaussian(684.635, 105.697),\n     \"Perigee_km\": gaussian(657.431, 100.517),\n     \"Type_of_Orbit\": categorical([0.929, 0.005, 0.046, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.040, 0.004, 0.040, 0.004, 0.029, 0.015, 0.004, 0.007, 0.004, 0.007, 0.007, 0.022, 0.004, 0.199, 0.004, 0.004, 0.088, 0.004, 0.011, 0.033, 0.048, 0.007, 0.007, 0.004, 0.151, 0.015, 0.022, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.059, 0.004, 0.007, 0.018, 0.018, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.193, 1.993),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.004, 0.020, 0.090, 0.008, 0.004, 0.004, 0.012, 0.467, 0.143, 0.004, 0.008, 0.020, 0.020, 0.160, 0.004, 0.004, 0.008, 0.016]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.143, 0.072, 0.004, 0.151, 0.096, 0.004, 0.048, 0.004, 0.092, 0.004, 0.004, 0.004, 0.064, 0.131, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.068, 0.004, 0.052, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.642, 172.530),\n     \"Apogee_km\": gaussian(613.330, 162.618),\n     \"Perigee_km\": gaussian(493.148, 84.600),\n     \"Type_of_Orbit\": categorical([0.638, 0.021, 0.128, 0.128, 0.021, 0.043, 0.021]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.041, 0.008, 0.407, 0.016, 0.008, 0.049, 0.008, 0.033, 0.008, 0.024, 0.033, 0.024, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.057, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016]),\n     \"Period_minutes\": gaussian(95.756, 1.997),\n     \"Inclination_radians\": gaussian(1.119, 0.633),\n     \"Users\": categorical([0.011, 0.074, 0.295, 0.021, 0.011, 0.042, 0.011, 0.189, 0.074, 0.011, 0.011, 0.011, 0.011, 0.179, 0.021, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.963, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.059, 0.029, 0.020, 0.206, 0.039, 0.039, 0.010, 0.010, 0.020, 0.010, 0.039, 0.225, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.029, 0.059, 0.069, 0.010, 0.029, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3129.570, 4617.523),\n     \"Apogee_km\": gaussian(912.851, 251.730),\n     \"Perigee_km\": gaussian(767.953, 231.976),\n     \"Type_of_Orbit\": categorical([0.161, 0.011, 0.034, 0.759, 0.011, 0.011, 0.011]),\n     \"Purpose\": categorical([0.007, 0.007, 0.013, 0.222, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.092, 0.013, 0.072, 0.026, 0.085, 0.013, 0.007, 0.078, 0.007, 0.033, 0.007, 0.046, 0.007, 0.013, 0.007, 0.007, 0.026, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(101.364, 4.235),\n     \"Inclination_radians\": gaussian(1.137, 0.428),\n     \"Users\": categorical([0.008, 0.048, 0.336, 0.008, 0.008, 0.016, 0.008, 0.144, 0.280, 0.008, 0.008, 0.016, 0.032, 0.048, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.946, 0.009, 0.036, 0.009]),\n     \"Launch_Site\": categorical([0.106, 0.015, 0.008, 0.235, 0.023, 0.015, 0.023, 0.008, 0.038, 0.008, 0.008, 0.197, 0.015, 0.015, 0.015, 0.015, 0.008, 0.008, 0.008, 0.008, 0.091, 0.098, 0.008, 0.008, 0.023])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3476.837, 8498.531),\n     \"Apogee_km\": gaussian(23407.863, 49355.243),\n     \"Perigee_km\": gaussian(20613.084, 58037.699),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1015.885, 1685.124),\n     \"Inclination_radians\": gaussian(16.918, 28.938),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.913, 0.056, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.686, 0.186)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.074, 0.073, 0.373, 0.065, 0.004, 0.134, 0.065, 0.064, 0.046, 0.028, 0.071, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(428.129, 194.412),\n     \"Apogee_km\": gaussian(1448.760, 80.176),\n     \"Perigee_km\": gaussian(1423.807, 88.314),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.625, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.614, 1.454),\n     \"Inclination_radians\": gaussian(1.145, 0.290),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.460, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.364, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.336, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(7.422, 14.739),\n     \"Apogee_km\": gaussian(728.881, 89.183),\n     \"Perigee_km\": gaussian(585.240, 79.488),\n     \"Type_of_Orbit\": categorical([0.846, 0.015, 0.031, 0.062, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.087, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.056, 0.008, 0.413, 0.008, 0.008, 0.008, 0.008, 0.032, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.830, 0.849),\n     \"Inclination_radians\": gaussian(1.670, 0.293),\n     \"Users\": categorical([0.010, 0.010, 0.082, 0.010, 0.010, 0.041, 0.010, 0.102, 0.265, 0.010, 0.020, 0.010, 0.010, 0.367, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.171, 0.029, 0.010, 0.181, 0.010, 0.029, 0.019, 0.010, 0.105, 0.010, 0.010, 0.010, 0.057, 0.229, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3720.031, 1439.728),\n     \"Apogee_km\": gaussian(35866.041, 1215.013),\n     \"Perigee_km\": gaussian(35778.240, 1244.298),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.170, 46.370),\n     \"Inclination_radians\": gaussian(0.018, 0.071),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1728.759, 548.975),\n     \"Apogee_km\": gaussian(20080.644, 1908.398),\n     \"Perigee_km\": gaussian(19699.428, 1944.563),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.251, 66.634),\n     \"Inclination_radians\": gaussian(1.039, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.957, 0.694),\n     \"Apogee_km\": gaussian(694.247, 10.311),\n     \"Perigee_km\": gaussian(675.782, 1.526),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.651, 0.867),\n     \"Inclination_radians\": gaussian(1.715, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(938.561, 1109.561),\n     \"Apogee_km\": gaussian(713.479, 91.918),\n     \"Perigee_km\": gaussian(692.786, 92.944),\n     \"Type_of_Orbit\": categorical([0.902, 0.008, 0.061, 0.008, 0.008, 0.008, 0.008]),\n     \"Purpose\": categorical([0.005, 0.057, 0.005, 0.021, 0.005, 0.005, 0.021, 0.005, 0.010, 0.005, 0.005, 0.010, 0.015, 0.005, 0.103, 0.005, 0.005, 0.093, 0.005, 0.010, 0.046, 0.031, 0.010, 0.010, 0.005, 0.196, 0.021, 0.031, 0.005, 0.010, 0.005, 0.010, 0.005, 0.005, 0.015, 0.005, 0.015, 0.082, 0.005, 0.010, 0.026, 0.026, 0.005, 0.010, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.892, 1.909),\n     \"Inclination_radians\": gaussian(1.713, 0.011),\n     \"Users\": categorical([0.006, 0.030, 0.090, 0.012, 0.006, 0.006, 0.006, 0.584, 0.084, 0.006, 0.006, 0.024, 0.018, 0.072, 0.006, 0.006, 0.012, 0.024]),\n     \"Class_of_Orbit\": categorical([0.980, 0.007, 0.007, 0.007]),\n     \"Launch_Site\": categorical([0.121, 0.098, 0.006, 0.202, 0.121, 0.006, 0.064, 0.006, 0.075, 0.006, 0.006, 0.006, 0.029, 0.058, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.006, 0.064, 0.006, 0.069, 0.012])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(491.102, 528.221),\n     \"Apogee_km\": gaussian(507.658, 43.717),\n     \"Perigee_km\": gaussian(490.620, 48.085),\n     \"Type_of_Orbit\": categorical([0.720, 0.020, 0.120, 0.080, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.271, 0.017, 0.008, 0.068, 0.008, 0.025, 0.008, 0.093, 0.025, 0.025, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.059, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.059, 0.017, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.622, 0.945),\n     \"Inclination_radians\": gaussian(1.236, 0.528),\n     \"Users\": categorical([0.011, 0.044, 0.300, 0.022, 0.011, 0.011, 0.033, 0.256, 0.078, 0.011, 0.011, 0.022, 0.033, 0.100, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.961, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.082, 0.010, 0.010, 0.041, 0.072, 0.010, 0.010, 0.010, 0.021, 0.010, 0.031, 0.237, 0.072, 0.021, 0.031, 0.010, 0.031, 0.041, 0.010, 0.010, 0.041, 0.113, 0.010, 0.041, 0.021])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.175, 47.977),\n     \"Apogee_km\": gaussian(777.558, 8.302),\n     \"Perigee_km\": gaussian(773.892, 11.378),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.358, 0.152),\n     \"Inclination_radians\": gaussian(1.510, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2076.251, 1791.672),\n     \"Apogee_km\": gaussian(58097.911, 69155.039),\n     \"Perigee_km\": gaussian(11922.898, 14443.761),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.062, 0.010, 0.010, 0.155, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.124, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010]),\n     \"Period_minutes\": gaussian(1126.080, 1114.602),\n     \"Inclination_radians\": gaussian(0.742, 0.515),\n     \"Users\": categorical([0.014, 0.058, 0.377, 0.014, 0.014, 0.014, 0.014, 0.217, 0.116, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.236, 0.618, 0.109]),\n     \"Launch_Site\": categorical([0.145, 0.013, 0.013, 0.053, 0.013, 0.026, 0.092, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.026, 0.211, 0.092, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(48.351, 14.992),\n     \"Apogee_km\": gaussian(795.445, 23.068),\n     \"Perigee_km\": gaussian(778.179, 17.294),\n     \"Type_of_Orbit\": categorical([0.132, 0.026, 0.026, 0.737, 0.026, 0.026, 0.026]),\n     \"Purpose\": categorical([0.013, 0.013, 0.026, 0.351, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.624, 0.218),\n     \"Inclination_radians\": gaussian(0.891, 0.271),\n     \"Users\": categorical([0.020, 0.102, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.551, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.018, 0.018, 0.018, 0.107, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.464, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3850.498, 5358.571),\n     \"Apogee_km\": gaussian(954.009, 270.895),\n     \"Perigee_km\": gaussian(749.089, 283.182),\n     \"Type_of_Orbit\": categorical([0.224, 0.017, 0.052, 0.638, 0.017, 0.034, 0.017]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.032, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.032, 0.008, 0.121, 0.016, 0.089, 0.032, 0.105, 0.008, 0.008, 0.089, 0.016, 0.040, 0.008, 0.056, 0.008, 0.016, 0.008, 0.008, 0.032, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.024]),\n     \"Period_minutes\": gaussian(101.987, 4.717),\n     \"Inclination_radians\": gaussian(1.198, 0.520),\n     \"Users\": categorical([0.010, 0.052, 0.448, 0.010, 0.010, 0.021, 0.010, 0.208, 0.042, 0.010, 0.010, 0.021, 0.042, 0.063, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.927, 0.012, 0.049, 0.012]),\n     \"Launch_Site\": categorical([0.087, 0.029, 0.019, 0.272, 0.029, 0.019, 0.029, 0.010, 0.049, 0.010, 0.019, 0.010, 0.019, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.029, 0.136, 0.126, 0.010, 0.010, 0.019])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4092.636, 5772.173),\n     \"Apogee_km\": gaussian(144946.618, 297340.839),\n     \"Perigee_km\": gaussian(28486.477, 24852.056),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.063, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1213.839, 897.811),\n     \"Inclination_radians\": gaussian(9.749, 19.528),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.150, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.500, 0.167, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.111, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.906, 0.063, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.003)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.026, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.693, 0.190)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.373, 0.055, 0.153, 0.065, 0.004, 0.180, 0.071, 0.046, 0.052, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3643.992, 1421.690),\n     \"Apogee_km\": gaussian(35702.185, 1240.038),\n     \"Perigee_km\": gaussian(35746.390, 1244.750),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.434, 47.212),\n     \"Inclination_radians\": gaussian(0.019, 0.074),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(34.075, 27.768),\n     \"Apogee_km\": gaussian(809.198, 53.919),\n     \"Perigee_km\": gaussian(676.468, 154.519),\n     \"Type_of_Orbit\": categorical([0.250, 0.021, 0.021, 0.646, 0.021, 0.021, 0.021]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.271, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.168, 0.009, 0.009, 0.056, 0.009, 0.028, 0.009, 0.009, 0.009, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.607, 1.448),\n     \"Inclination_radians\": gaussian(1.179, 0.595),\n     \"Users\": categorical([0.013, 0.076, 0.101, 0.013, 0.013, 0.051, 0.013, 0.101, 0.418, 0.013, 0.013, 0.013, 0.013, 0.101, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.954, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.035, 0.012, 0.012, 0.302, 0.012, 0.047, 0.012, 0.012, 0.047, 0.012, 0.012, 0.302, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.035, 0.023, 0.012, 0.012, 0.012])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(575.058, 193.195),\n     \"Apogee_km\": gaussian(1124.807, 341.030),\n     \"Perigee_km\": gaussian(1117.544, 338.668),\n     \"Type_of_Orbit\": categorical([0.006, 0.006, 0.429, 0.541, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.724, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.769, 6.983),\n     \"Inclination_radians\": gaussian(1.315, 0.278),\n     \"Users\": categorical([0.011, 0.005, 0.199, 0.005, 0.005, 0.005, 0.005, 0.011, 0.269, 0.005, 0.005, 0.005, 0.387, 0.016, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.012]),\n     \"Launch_Site\": categorical([0.301, 0.005, 0.005, 0.254, 0.052, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.249, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1751.931, 583.395),\n     \"Apogee_km\": gaussian(19924.939, 1858.393),\n     \"Perigee_km\": gaussian(19821.682, 1982.685),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.199, 65.946),\n     \"Inclination_radians\": gaussian(1.040, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.957, 0.630),\n     \"Apogee_km\": gaussian(694.202, 8.137),\n     \"Perigee_km\": gaussian(675.393, 2.302),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.509, 0.576),\n     \"Inclination_radians\": gaussian(1.713, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(707.270, 995.675),\n     \"Apogee_km\": gaussian(715.929, 82.843),\n     \"Perigee_km\": gaussian(677.285, 83.283),\n     \"Type_of_Orbit\": categorical([0.921, 0.006, 0.051, 0.006, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.004, 0.045, 0.004, 0.041, 0.004, 0.029, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.025, 0.004, 0.209, 0.004, 0.004, 0.074, 0.004, 0.012, 0.037, 0.029, 0.008, 0.004, 0.004, 0.156, 0.016, 0.025, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.066, 0.004, 0.008, 0.020, 0.020, 0.004, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.658, 1.620),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.023, 0.069, 0.009, 0.005, 0.005, 0.005, 0.472, 0.144, 0.005, 0.009, 0.019, 0.014, 0.181, 0.005, 0.005, 0.009, 0.019]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.135, 0.081, 0.004, 0.157, 0.094, 0.004, 0.054, 0.004, 0.103, 0.004, 0.004, 0.004, 0.049, 0.148, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.049, 0.004, 0.054, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(494.952, 532.951),\n     \"Apogee_km\": gaussian(513.180, 49.274),\n     \"Perigee_km\": gaussian(495.484, 51.894),\n     \"Type_of_Orbit\": categorical([0.714, 0.018, 0.107, 0.107, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.290, 0.016, 0.008, 0.065, 0.008, 0.024, 0.008, 0.081, 0.024, 0.040, 0.008, 0.032, 0.008, 0.008, 0.008, 0.008, 0.056, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.056, 0.016, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.846, 0.932),\n     \"Inclination_radians\": gaussian(1.227, 0.531),\n     \"Users\": categorical([0.010, 0.063, 0.281, 0.021, 0.010, 0.010, 0.031, 0.250, 0.083, 0.010, 0.010, 0.021, 0.031, 0.115, 0.021, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.963, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.117, 0.019, 0.010, 0.049, 0.068, 0.010, 0.010, 0.010, 0.019, 0.010, 0.029, 0.223, 0.058, 0.019, 0.029, 0.010, 0.029, 0.039, 0.010, 0.010, 0.049, 0.107, 0.010, 0.039, 0.019])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2214.339, 1750.447),\n     \"Apogee_km\": gaussian(69866.100, 78958.421),\n     \"Perigee_km\": gaussian(12737.214, 15237.202),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.062, 0.010, 0.010, 0.165, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.124, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010]),\n     \"Period_minutes\": gaussian(1119.974, 1108.373),\n     \"Inclination_radians\": gaussian(0.734, 0.518),\n     \"Users\": categorical([0.014, 0.058, 0.377, 0.014, 0.014, 0.014, 0.014, 0.217, 0.130, 0.014, 0.014, 0.014, 0.014, 0.029, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.255, 0.618, 0.091]),\n     \"Launch_Site\": categorical([0.132, 0.013, 0.013, 0.053, 0.013, 0.026, 0.105, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.026, 0.211, 0.092, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5124.748, 5962.237),\n     \"Apogee_km\": gaussian(956.516, 326.955),\n     \"Perigee_km\": gaussian(742.621, 339.052),\n     \"Type_of_Orbit\": categorical([0.308, 0.026, 0.026, 0.538, 0.026, 0.051, 0.026]),\n     \"Purpose\": categorical([0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010, 0.010, 0.039, 0.010, 0.126, 0.019, 0.010, 0.029, 0.126, 0.010, 0.010, 0.107, 0.019, 0.029, 0.010, 0.058, 0.010, 0.019, 0.010, 0.010, 0.039, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.029, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.019, 0.010]),\n     \"Period_minutes\": gaussian(101.666, 5.572),\n     \"Inclination_radians\": gaussian(1.247, 0.501),\n     \"Users\": categorical([0.013, 0.027, 0.427, 0.013, 0.013, 0.027, 0.013, 0.227, 0.013, 0.013, 0.013, 0.027, 0.040, 0.080, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.902, 0.016, 0.066, 0.016]),\n     \"Launch_Site\": categorical([0.085, 0.037, 0.024, 0.305, 0.024, 0.024, 0.037, 0.012, 0.024, 0.012, 0.024, 0.012, 0.024, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.037, 0.134, 0.049, 0.012, 0.012, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3150.048, 6421.887),\n     \"Apogee_km\": gaussian(23591.446, 49923.755),\n     \"Perigee_km\": gaussian(26660.425, 45918.296),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1019.778, 2008.064),\n     \"Inclination_radians\": gaussian(17.800, 30.626),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.915, 0.054, 0.027, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.732, 0.139)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.320, 0.163)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.203, 0.085, 0.373, 0.064, 0.065, 0.005, 0.047, 0.073, 0.084, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(602.181, 887.978),\n     \"Apogee_km\": gaussian(682.275, 97.664),\n     \"Perigee_km\": gaussian(650.906, 102.400),\n     \"Type_of_Orbit\": categorical([0.937, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.037, 0.004, 0.041, 0.004, 0.030, 0.015, 0.004, 0.007, 0.004, 0.007, 0.007, 0.022, 0.004, 0.208, 0.007, 0.004, 0.089, 0.004, 0.011, 0.033, 0.045, 0.007, 0.007, 0.004, 0.152, 0.015, 0.019, 0.007, 0.007, 0.026, 0.007, 0.004, 0.004, 0.011, 0.004, 0.011, 0.052, 0.004, 0.007, 0.015, 0.019, 0.007, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(97.987, 2.101),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.021, 0.087, 0.008, 0.004, 0.004, 0.012, 0.465, 0.141, 0.004, 0.008, 0.021, 0.021, 0.166, 0.004, 0.004, 0.008, 0.017]),\n     \"Class_of_Orbit\": categorical([0.987, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.137, 0.073, 0.004, 0.149, 0.109, 0.004, 0.040, 0.004, 0.089, 0.004, 0.004, 0.004, 0.065, 0.133, 0.008, 0.004, 0.004, 0.016, 0.008, 0.004, 0.004, 0.065, 0.004, 0.056, 0.008])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.868, 39.279),\n     \"Apogee_km\": gaussian(702.085, 146.135),\n     \"Perigee_km\": gaussian(622.679, 145.426),\n     \"Type_of_Orbit\": categorical([0.446, 0.014, 0.014, 0.486, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.214, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.036, 0.007, 0.321, 0.007, 0.007, 0.057, 0.007, 0.029, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.058, 2.677),\n     \"Inclination_radians\": gaussian(1.015, 0.503),\n     \"Users\": categorical([0.009, 0.063, 0.170, 0.018, 0.009, 0.036, 0.009, 0.134, 0.330, 0.009, 0.009, 0.009, 0.009, 0.143, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.084, 0.017, 0.008, 0.210, 0.008, 0.034, 0.008, 0.008, 0.042, 0.008, 0.008, 0.387, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.017, 0.042, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3726.933, 1408.720),\n     \"Apogee_km\": gaussian(35813.798, 1279.793),\n     \"Perigee_km\": gaussian(35718.425, 1247.584),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.018, 0.002, 0.807, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.007, 0.002, 0.007, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.009, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.801, 46.937),\n     \"Inclination_radians\": gaussian(0.015, 0.073),\n     \"Users\": categorical([0.002, 0.012, 0.166, 0.002, 0.007, 0.002, 0.021, 0.119, 0.627, 0.005, 0.002, 0.005, 0.009, 0.005, 0.002, 0.002, 0.009, 0.002]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.356, 0.011, 0.009, 0.005, 0.002, 0.002, 0.014, 0.002, 0.002, 0.002, 0.002, 0.002, 0.067, 0.002, 0.213, 0.002, 0.053, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.576, 47.341),\n     \"Apogee_km\": gaussian(776.994, 8.224),\n     \"Perigee_km\": gaussian(773.260, 10.630),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.371, 0.143),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1726.469, 559.779),\n     \"Apogee_km\": gaussian(19880.698, 1874.474),\n     \"Perigee_km\": gaussian(19687.329, 1893.254),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(709.752, 67.807),\n     \"Inclination_radians\": gaussian(1.044, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.991, 0.479),\n     \"Apogee_km\": gaussian(696.247, 8.563),\n     \"Perigee_km\": gaussian(679.048, 7.258),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.717, 0.772),\n     \"Inclination_radians\": gaussian(1.714, 0.049),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2145.841, 1751.787),\n     \"Apogee_km\": gaussian(63523.012, 74530.658),\n     \"Perigee_km\": gaussian(12816.332, 14945.294),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.163, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.122, 0.010, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1188.500, 1140.102),\n     \"Inclination_radians\": gaussian(0.731, 0.540),\n     \"Users\": categorical([0.014, 0.057, 0.371, 0.014, 0.014, 0.014, 0.014, 0.214, 0.129, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.250, 0.607, 0.107]),\n     \"Launch_Site\": categorical([0.143, 0.013, 0.013, 0.052, 0.013, 0.026, 0.104, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.078, 0.026, 0.208, 0.091, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(420.763, 198.519),\n     \"Apogee_km\": gaussian(1451.724, 78.444),\n     \"Perigee_km\": gaussian(1433.536, 73.033),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.916, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.627, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.686, 1.441),\n     \"Inclination_radians\": gaussian(1.146, 0.300),\n     \"Users\": categorical([0.020, 0.010, 0.265, 0.010, 0.010, 0.010, 0.010, 0.010, 0.459, 0.010, 0.010, 0.010, 0.010, 0.031, 0.010, 0.010, 0.092, 0.010]),\n     \"Class_of_Orbit\": categorical([0.964, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.362, 0.010, 0.010, 0.019, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.076, 0.343, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3554.231, 5056.859),\n     \"Apogee_km\": gaussian(885.299, 309.322),\n     \"Perigee_km\": gaussian(708.187, 294.721),\n     \"Type_of_Orbit\": categorical([0.188, 0.016, 0.156, 0.578, 0.016, 0.031, 0.016]),\n     \"Purpose\": categorical([0.007, 0.014, 0.007, 0.036, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.123, 0.014, 0.080, 0.014, 0.094, 0.014, 0.007, 0.109, 0.029, 0.051, 0.007, 0.043, 0.007, 0.022, 0.007, 0.007, 0.029, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.072, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(101.192, 5.583),\n     \"Inclination_radians\": gaussian(1.307, 0.508),\n     \"Users\": categorical([0.009, 0.055, 0.473, 0.009, 0.009, 0.018, 0.009, 0.200, 0.055, 0.009, 0.009, 0.018, 0.036, 0.055, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.938, 0.010, 0.042, 0.010]),\n     \"Launch_Site\": categorical([0.103, 0.026, 0.017, 0.248, 0.026, 0.017, 0.034, 0.009, 0.026, 0.009, 0.034, 0.026, 0.017, 0.017, 0.017, 0.017, 0.009, 0.009, 0.009, 0.017, 0.111, 0.154, 0.009, 0.017, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3435.811, 5848.542),\n     \"Apogee_km\": gaussian(24027.889, 40882.076),\n     \"Perigee_km\": gaussian(24460.950, 43775.493),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1097.345, 1658.760),\n     \"Inclination_radians\": gaussian(18.154, 31.112),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.918, 0.051, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.032, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.689, 0.184)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.003, 0.015, 0.003, 0.002, 0.022, 0.003, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.003, 0.002, 0.003, 0.002, 0.019, 0.001, 0.006, 0.047, 0.005, 0.002, 0.003, 0.002, 0.004, 0.036, 0.003, 0.005, 0.003, 0.002, 0.002, 0.096, 0.010, 0.010, 0.002, 0.002, 0.003, 0.066, 0.004, 0.002, 0.008, 0.002, 0.002, 0.003, 0.003, 0.002, 0.015, 0.003, 0.012, 0.004, 0.010, 0.019, 0.004, 0.404, 0.002, 0.003, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.003, 0.002, 0.003, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ],
  [
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.060, 0.371, 0.070, 0.062, 0.005, 0.213, 0.093, 0.032, 0.080, 0.015, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(686.203, 49.268),\n     \"Apogee_km\": gaussian(777.165, 8.440),\n     \"Perigee_km\": gaussian(774.284, 11.451),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.369, 0.149),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3713.207, 1491.715),\n     \"Apogee_km\": gaussian(35771.413, 1196.804),\n     \"Perigee_km\": gaussian(35748.435, 1253.855),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.035, 47.213),\n     \"Inclination_radians\": gaussian(0.017, 0.069),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(407.929, 204.336),\n     \"Apogee_km\": gaussian(1448.195, 77.032),\n     \"Perigee_km\": gaussian(1430.411, 69.719),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.690, 1.495),\n     \"Inclination_radians\": gaussian(1.156, 0.305),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1736.452, 541.452),\n     \"Apogee_km\": gaussian(19983.720, 1944.698),\n     \"Perigee_km\": gaussian(19756.102, 1817.269),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.915, 69.945),\n     \"Inclination_radians\": gaussian(1.041, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.982, 0.483),\n     \"Apogee_km\": gaussian(695.473, 7.102),\n     \"Perigee_km\": gaussian(679.200, 7.519),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.710, 0.724),\n     \"Inclination_radians\": gaussian(1.713, 0.046),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(714.570, 975.057),\n     \"Apogee_km\": gaussian(675.348, 109.903),\n     \"Perigee_km\": gaussian(643.298, 106.628),\n     \"Type_of_Orbit\": categorical([0.944, 0.005, 0.033, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.027, 0.003, 0.037, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.201, 0.007, 0.003, 0.126, 0.003, 0.017, 0.031, 0.048, 0.007, 0.007, 0.003, 0.160, 0.014, 0.020, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.048, 0.003, 0.007, 0.014, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.962, 2.116),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.015, 0.113, 0.008, 0.004, 0.004, 0.019, 0.459, 0.139, 0.004, 0.008, 0.019, 0.019, 0.158, 0.004, 0.004, 0.008, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.121, 0.088, 0.004, 0.136, 0.147, 0.004, 0.040, 0.004, 0.092, 0.004, 0.004, 0.004, 0.059, 0.132, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.059, 0.004, 0.051, 0.007])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(75.142, 109.492),\n     \"Apogee_km\": gaussian(699.658, 143.739),\n     \"Perigee_km\": gaussian(594.226, 148.647),\n     \"Type_of_Orbit\": categorical([0.423, 0.013, 0.013, 0.500, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.195, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.039, 0.006, 0.312, 0.006, 0.006, 0.052, 0.006, 0.039, 0.006, 0.019, 0.026, 0.019, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019]),\n     \"Period_minutes\": gaussian(97.735, 2.632),\n     \"Inclination_radians\": gaussian(1.037, 0.572),\n     \"Users\": categorical([0.008, 0.071, 0.230, 0.016, 0.008, 0.032, 0.008, 0.135, 0.286, 0.008, 0.008, 0.008, 0.008, 0.135, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.973, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.075, 0.015, 0.015, 0.211, 0.008, 0.038, 0.008, 0.008, 0.038, 0.008, 0.030, 0.361, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.023, 0.053, 0.015, 0.008, 0.015, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2273.904, 1842.460),\n     \"Apogee_km\": gaussian(30968.151, 13758.785),\n     \"Perigee_km\": gaussian(13658.976, 16306.869),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.072, 0.012, 0.012, 0.181, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.024, 0.012, 0.048, 0.012, 0.036, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.060, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.072, 0.012]),\n     \"Period_minutes\": gaussian(701.811, 514.361),\n     \"Inclination_radians\": gaussian(0.754, 0.506),\n     \"Users\": categorical([0.018, 0.018, 0.473, 0.018, 0.018, 0.018, 0.018, 0.091, 0.145, 0.018, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.049, 0.317, 0.488, 0.146]),\n     \"Launch_Site\": categorical([0.081, 0.016, 0.016, 0.065, 0.016, 0.032, 0.113, 0.016, 0.032, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.097, 0.016, 0.161, 0.113, 0.016, 0.032, 0.016])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4221.604, 4933.768),\n     \"Apogee_km\": gaussian(952.075, 295.459),\n     \"Perigee_km\": gaussian(781.960, 305.364),\n     \"Type_of_Orbit\": categorical([0.356, 0.014, 0.137, 0.452, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.029, 0.007, 0.043, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.115, 0.014, 0.079, 0.101, 0.094, 0.007, 0.007, 0.086, 0.007, 0.036, 0.007, 0.036, 0.007, 0.014, 0.007, 0.007, 0.029, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.065, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(102.514, 5.565),\n     \"Inclination_radians\": gaussian(1.308, 0.390),\n     \"Users\": categorical([0.009, 0.045, 0.468, 0.009, 0.009, 0.018, 0.009, 0.198, 0.054, 0.009, 0.009, 0.018, 0.036, 0.072, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.938, 0.010, 0.041, 0.010]),\n     \"Launch_Site\": categorical([0.110, 0.102, 0.008, 0.229, 0.059, 0.008, 0.034, 0.008, 0.017, 0.008, 0.008, 0.008, 0.017, 0.017, 0.017, 0.017, 0.008, 0.008, 0.008, 0.008, 0.102, 0.153, 0.008, 0.008, 0.025])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1744.720, 1814.127),\n     \"Apogee_km\": gaussian(152712.930, 134568.750),\n     \"Perigee_km\": gaussian(8725.208, 10521.757),\n     \"Type_of_Orbit\": categorical([0.059, 0.588, 0.059, 0.059, 0.059, 0.059, 0.118]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.206, 0.016, 0.016, 0.063, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(3035.109, 4574.420),\n     \"Inclination_radians\": gaussian(0.798, 0.626),\n     \"Users\": categorical([0.029, 0.114, 0.029, 0.029, 0.029, 0.029, 0.029, 0.371, 0.057, 0.029, 0.029, 0.029, 0.029, 0.057, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.048, 0.095, 0.810, 0.048]),\n     \"Launch_Site\": categorical([0.167, 0.024, 0.024, 0.024, 0.024, 0.024, 0.071, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.048, 0.190, 0.024, 0.024, 0.024, 0.048])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3616.794, 8205.269),\n     \"Apogee_km\": gaussian(25155.276, 40716.609),\n     \"Perigee_km\": gaussian(23628.360, 55147.114),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.043, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(1019.252, 2114.983),\n     \"Inclination_radians\": gaussian(17.341, 17.895),\n     \"Users\": categorical([0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.105, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053, 0.053]),\n     \"Class_of_Orbit\": categorical([0.200, 0.400, 0.200, 0.200]),\n     \"Launch_Site\": categorical([0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.077, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.913, 0.056, 0.032]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.696, 0.188)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.062, 0.060, 0.370, 0.070, 0.003, 0.214, 0.094, 0.046, 0.078, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1749.807, 564.093),\n     \"Apogee_km\": gaussian(19960.407, 1928.511),\n     \"Perigee_km\": gaussian(19845.866, 1913.854),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.785, 68.487),\n     \"Inclination_radians\": gaussian(1.034, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(687.557, 50.817),\n     \"Apogee_km\": gaussian(777.241, 8.787),\n     \"Perigee_km\": gaussian(773.857, 11.046),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.158),\n     \"Inclination_radians\": gaussian(1.510, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3656.819, 1424.279),\n     \"Apogee_km\": gaussian(35719.066, 1261.676),\n     \"Perigee_km\": gaussian(35697.025, 1262.958),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.660, 46.120),\n     \"Inclination_radians\": gaussian(0.014, 0.069),\n     \"Users\": categorical([0.002, 0.011, 0.167, 0.002, 0.007, 0.002, 0.024, 0.122, 0.618, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.346, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.206, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(428.350, 206.259),\n     \"Apogee_km\": gaussian(1447.027, 83.198),\n     \"Perigee_km\": gaussian(1428.489, 72.294),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.686, 1.483),\n     \"Inclination_radians\": gaussian(1.163, 0.301),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.980, 0.187),\n     \"Apogee_km\": gaussian(694.212, 8.975),\n     \"Perigee_km\": gaussian(675.889, 1.468),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.683, 0.935),\n     \"Inclination_radians\": gaussian(1.713, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(724.080, 990.474),\n     \"Apogee_km\": gaussian(673.030, 107.726),\n     \"Perigee_km\": gaussian(645.185, 104.302),\n     \"Type_of_Orbit\": categorical([0.945, 0.005, 0.032, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.024, 0.003, 0.037, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.003, 0.020, 0.003, 0.199, 0.010, 0.003, 0.125, 0.003, 0.020, 0.030, 0.047, 0.007, 0.007, 0.003, 0.159, 0.014, 0.020, 0.007, 0.003, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.054, 0.003, 0.007, 0.017, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.928, 2.183),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.015, 0.104, 0.007, 0.004, 0.004, 0.019, 0.466, 0.134, 0.004, 0.007, 0.022, 0.019, 0.160, 0.004, 0.004, 0.007, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.124, 0.087, 0.004, 0.131, 0.145, 0.004, 0.044, 0.004, 0.091, 0.004, 0.004, 0.004, 0.058, 0.131, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.062, 0.004, 0.051, 0.007])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(68.203, 109.874),\n     \"Apogee_km\": gaussian(711.510, 165.541),\n     \"Perigee_km\": gaussian(603.942, 161.648),\n     \"Type_of_Orbit\": categorical([0.436, 0.013, 0.013, 0.487, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.192, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.038, 0.006, 0.327, 0.006, 0.006, 0.051, 0.006, 0.026, 0.006, 0.019, 0.026, 0.019, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019]),\n     \"Period_minutes\": gaussian(98.033, 2.607),\n     \"Inclination_radians\": gaussian(1.063, 0.573),\n     \"Users\": categorical([0.008, 0.070, 0.234, 0.016, 0.008, 0.031, 0.008, 0.125, 0.289, 0.008, 0.008, 0.008, 0.008, 0.141, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.974, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.074, 0.007, 0.015, 0.215, 0.007, 0.037, 0.022, 0.007, 0.037, 0.007, 0.030, 0.356, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.022, 0.052, 0.015, 0.007, 0.015, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2192.325, 1837.287),\n     \"Apogee_km\": gaussian(66188.726, 75002.651),\n     \"Perigee_km\": gaussian(12054.977, 14826.130),\n     \"Type_of_Orbit\": categorical([0.037, 0.370, 0.037, 0.037, 0.444, 0.037, 0.037]),\n     \"Purpose\": categorical([0.060, 0.010, 0.010, 0.170, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.130, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.050, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.060, 0.010]),\n     \"Period_minutes\": gaussian(1106.201, 1105.299),\n     \"Inclination_radians\": gaussian(0.744, 0.519),\n     \"Users\": categorical([0.014, 0.056, 0.375, 0.014, 0.014, 0.014, 0.014, 0.222, 0.125, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.034, 0.259, 0.603, 0.103]),\n     \"Launch_Site\": categorical([0.139, 0.013, 0.013, 0.051, 0.013, 0.025, 0.114, 0.013, 0.025, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.076, 0.025, 0.215, 0.089, 0.013, 0.025, 0.025])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4240.445, 5008.730),\n     \"Apogee_km\": gaussian(926.298, 306.640),\n     \"Perigee_km\": gaussian(803.601, 294.345),\n     \"Type_of_Orbit\": categorical([0.342, 0.014, 0.137, 0.466, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.036, 0.007, 0.044, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007, 0.095, 0.007, 0.080, 0.102, 0.095, 0.015, 0.007, 0.088, 0.007, 0.036, 0.007, 0.036, 0.007, 0.015, 0.007, 0.015, 0.029, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.058, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007]),\n     \"Period_minutes\": gaussian(102.409, 5.733),\n     \"Inclination_radians\": gaussian(1.322, 0.396),\n     \"Users\": categorical([0.009, 0.046, 0.486, 0.009, 0.009, 0.018, 0.009, 0.202, 0.055, 0.009, 0.009, 0.009, 0.037, 0.055, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.937, 0.011, 0.042, 0.011]),\n     \"Launch_Site\": categorical([0.103, 0.112, 0.009, 0.233, 0.060, 0.009, 0.017, 0.009, 0.017, 0.009, 0.009, 0.009, 0.017, 0.017, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.103, 0.155, 0.009, 0.009, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2641.710, 3303.667),\n     \"Apogee_km\": gaussian(188200.081, 433521.583),\n     \"Perigee_km\": gaussian(13698.032, 36272.463),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(9077.476, 14764.500),\n     \"Inclination_radians\": gaussian(10.614, 17.659),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.333, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.914, 0.055, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.024)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.691, 0.192)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.999, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.001, 0.006, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.060, 0.370, 0.086, 0.069, 0.062, 0.005, 0.213, 0.044, 0.087, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(687.950, 49.064),\n     \"Apogee_km\": gaussian(777.585, 8.397),\n     \"Perigee_km\": gaussian(773.490, 11.135),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.368, 0.150),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3693.125, 1510.444),\n     \"Apogee_km\": gaussian(35809.038, 1240.399),\n     \"Perigee_km\": gaussian(35668.537, 1256.156),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.480, 47.571),\n     \"Inclination_radians\": gaussian(0.018, 0.070),\n     \"Users\": categorical([0.002, 0.011, 0.167, 0.002, 0.007, 0.002, 0.024, 0.122, 0.618, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.346, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.206, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(36.213, 40.354),\n     \"Apogee_km\": gaussian(732.268, 179.256),\n     \"Perigee_km\": gaussian(611.125, 158.558),\n     \"Type_of_Orbit\": categorical([0.453, 0.013, 0.013, 0.480, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.212, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007, 0.336, 0.014, 0.007, 0.055, 0.007, 0.027, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.992, 2.748),\n     \"Inclination_radians\": gaussian(1.044, 0.509),\n     \"Users\": categorical([0.008, 0.068, 0.186, 0.017, 0.008, 0.042, 0.008, 0.119, 0.305, 0.008, 0.008, 0.017, 0.008, 0.153, 0.017, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.088, 0.008, 0.008, 0.224, 0.008, 0.040, 0.024, 0.008, 0.032, 0.008, 0.008, 0.368, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.016, 0.040, 0.016, 0.008, 0.016, 0.008])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(414.697, 201.381),\n     \"Apogee_km\": gaussian(1446.953, 79.259),\n     \"Perigee_km\": gaussian(1433.438, 69.297),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.917, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.622, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.594, 1.502),\n     \"Inclination_radians\": gaussian(1.146, 0.287),\n     \"Users\": categorical([0.020, 0.010, 0.263, 0.010, 0.010, 0.010, 0.010, 0.010, 0.455, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.091, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.358, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.349, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1747.587, 562.421),\n     \"Apogee_km\": gaussian(20025.261, 1911.008),\n     \"Perigee_km\": gaussian(19830.843, 1970.570),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.103, 65.248),\n     \"Inclination_radians\": gaussian(1.037, 0.103),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.948, 0.343),\n     \"Apogee_km\": gaussian(695.702, 7.789),\n     \"Perigee_km\": gaussian(679.072, 6.859),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.655, 0.669),\n     \"Inclination_radians\": gaussian(1.714, 0.045),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(702.670, 946.886),\n     \"Apogee_km\": gaussian(677.074, 105.670),\n     \"Perigee_km\": gaussian(640.384, 103.591),\n     \"Type_of_Orbit\": categorical([0.949, 0.005, 0.028, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.027, 0.003, 0.034, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.204, 0.007, 0.003, 0.122, 0.003, 0.020, 0.031, 0.048, 0.007, 0.007, 0.003, 0.160, 0.014, 0.017, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.051, 0.003, 0.007, 0.014, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.923, 2.122),\n     \"Inclination_radians\": gaussian(1.710, 0.010),\n     \"Users\": categorical([0.004, 0.011, 0.117, 0.008, 0.004, 0.004, 0.019, 0.455, 0.139, 0.004, 0.008, 0.019, 0.019, 0.162, 0.004, 0.004, 0.008, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.125, 0.088, 0.004, 0.139, 0.143, 0.004, 0.040, 0.004, 0.092, 0.004, 0.004, 0.004, 0.059, 0.132, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.059, 0.004, 0.048, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2082.644, 1828.853),\n     \"Apogee_km\": gaussian(49673.942, 39570.252),\n     \"Perigee_km\": gaussian(12345.008, 14744.634),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.062, 0.010, 0.010, 0.165, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.041, 0.010, 0.031, 0.010, 0.010, 0.010, 0.124, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010]),\n     \"Period_minutes\": gaussian(1203.525, 1110.979),\n     \"Inclination_radians\": gaussian(0.787, 0.532),\n     \"Users\": categorical([0.014, 0.058, 0.391, 0.014, 0.014, 0.014, 0.014, 0.203, 0.116, 0.014, 0.014, 0.014, 0.014, 0.043, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.036, 0.255, 0.600, 0.109]),\n     \"Launch_Site\": categorical([0.132, 0.013, 0.013, 0.053, 0.013, 0.026, 0.105, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013, 0.224, 0.092, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3579.141, 4994.197),\n     \"Apogee_km\": gaussian(874.439, 314.156),\n     \"Perigee_km\": gaussian(761.732, 298.467),\n     \"Type_of_Orbit\": categorical([0.312, 0.013, 0.143, 0.481, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.027, 0.007, 0.041, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.095, 0.007, 0.074, 0.101, 0.088, 0.014, 0.007, 0.095, 0.027, 0.047, 0.007, 0.041, 0.007, 0.020, 0.007, 0.007, 0.027, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.061, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(101.720, 5.808),\n     \"Inclination_radians\": gaussian(1.271, 0.495),\n     \"Users\": categorical([0.008, 0.058, 0.483, 0.008, 0.008, 0.008, 0.008, 0.225, 0.050, 0.008, 0.008, 0.008, 0.033, 0.050, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.943, 0.009, 0.038, 0.009]),\n     \"Launch_Site\": categorical([0.087, 0.102, 0.016, 0.213, 0.063, 0.008, 0.016, 0.008, 0.024, 0.008, 0.031, 0.024, 0.016, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.016, 0.110, 0.142, 0.008, 0.016, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2689.588, 2485.608),\n     \"Apogee_km\": gaussian(272687.321, 198692.325),\n     \"Perigee_km\": gaussian(14231.742, 21280.837),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(4340.803, 9436.555),\n     \"Inclination_radians\": gaussian(4.745, 11.697),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.913, 0.057, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.692, 0.187)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.060, 0.371, 0.070, 0.215, 0.062, 0.003, 0.094, 0.033, 0.077, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.019, 48.771),\n     \"Apogee_km\": gaussian(777.371, 8.350),\n     \"Perigee_km\": gaussian(773.325, 11.246),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.370, 0.149),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3763.236, 1469.569),\n     \"Apogee_km\": gaussian(35758.034, 1253.334),\n     \"Perigee_km\": gaussian(35659.822, 1221.773),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.633, 45.821),\n     \"Inclination_radians\": gaussian(0.016, 0.071),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(409.750, 194.761),\n     \"Apogee_km\": gaussian(1452.652, 79.612),\n     \"Perigee_km\": gaussian(1431.242, 68.843),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.675, 1.483),\n     \"Inclination_radians\": gaussian(1.142, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(704.640, 978.943),\n     \"Apogee_km\": gaussian(673.586, 105.082),\n     \"Perigee_km\": gaussian(647.733, 100.821),\n     \"Type_of_Orbit\": categorical([0.950, 0.005, 0.027, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.030, 0.003, 0.037, 0.003, 0.027, 0.013, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.195, 0.007, 0.003, 0.125, 0.003, 0.020, 0.030, 0.047, 0.007, 0.007, 0.003, 0.158, 0.013, 0.017, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.054, 0.003, 0.007, 0.017, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.788, 2.098),\n     \"Inclination_radians\": gaussian(1.710, 0.010),\n     \"Users\": categorical([0.004, 0.015, 0.115, 0.007, 0.004, 0.004, 0.019, 0.461, 0.138, 0.004, 0.007, 0.019, 0.019, 0.156, 0.004, 0.004, 0.007, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.120, 0.087, 0.004, 0.141, 0.141, 0.004, 0.043, 0.004, 0.091, 0.004, 0.004, 0.004, 0.058, 0.130, 0.007, 0.004, 0.004, 0.014, 0.007, 0.004, 0.004, 0.062, 0.004, 0.051, 0.007])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1713.316, 582.052),\n     \"Apogee_km\": gaussian(19948.528, 1881.999),\n     \"Perigee_km\": gaussian(19819.813, 1934.770),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(705.896, 64.891),\n     \"Inclination_radians\": gaussian(1.029, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.947, 0.628),\n     \"Apogee_km\": gaussian(694.663, 9.107),\n     \"Perigee_km\": gaussian(675.934, 1.427),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.668, 0.871),\n     \"Inclination_radians\": gaussian(1.712, 0.058),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(79.105, 106.501),\n     \"Apogee_km\": gaussian(703.103, 167.931),\n     \"Perigee_km\": gaussian(583.884, 151.210),\n     \"Type_of_Orbit\": categorical([0.416, 0.013, 0.013, 0.506, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.006, 0.006, 0.013, 0.192, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.038, 0.006, 0.327, 0.006, 0.006, 0.051, 0.006, 0.032, 0.006, 0.019, 0.026, 0.019, 0.006, 0.019, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.013, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019]),\n     \"Period_minutes\": gaussian(97.841, 2.658),\n     \"Inclination_radians\": gaussian(1.086, 0.535),\n     \"Users\": categorical([0.008, 0.070, 0.227, 0.016, 0.008, 0.031, 0.008, 0.133, 0.281, 0.008, 0.008, 0.008, 0.008, 0.148, 0.016, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.974, 0.009, 0.009, 0.009]),\n     \"Launch_Site\": categorical([0.067, 0.015, 0.015, 0.207, 0.015, 0.037, 0.022, 0.007, 0.037, 0.007, 0.030, 0.356, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.022, 0.052, 0.015, 0.007, 0.015, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2262.727, 1739.655),\n     \"Apogee_km\": gaussian(29921.197, 13954.899),\n     \"Perigee_km\": gaussian(13903.189, 16005.635),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.071, 0.012, 0.012, 0.176, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.024, 0.012, 0.047, 0.012, 0.035, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.024, 0.012, 0.012, 0.012, 0.012, 0.059, 0.012, 0.035, 0.012, 0.012, 0.012, 0.012, 0.012, 0.012, 0.071, 0.012]),\n     \"Period_minutes\": gaussian(689.946, 485.333),\n     \"Inclination_radians\": gaussian(0.732, 0.530),\n     \"Users\": categorical([0.018, 0.018, 0.456, 0.018, 0.018, 0.018, 0.018, 0.105, 0.140, 0.018, 0.018, 0.018, 0.018, 0.053, 0.018, 0.018, 0.018, 0.018]),\n     \"Class_of_Orbit\": categorical([0.047, 0.302, 0.512, 0.140]),\n     \"Launch_Site\": categorical([0.078, 0.016, 0.016, 0.063, 0.016, 0.031, 0.109, 0.016, 0.031, 0.016, 0.016, 0.016, 0.031, 0.016, 0.016, 0.016, 0.016, 0.016, 0.094, 0.016, 0.172, 0.109, 0.016, 0.031, 0.031])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3926.932, 5266.855),\n     \"Apogee_km\": gaussian(973.094, 304.444),\n     \"Perigee_km\": gaussian(795.794, 293.343),\n     \"Type_of_Orbit\": categorical([0.333, 0.014, 0.153, 0.458, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.022, 0.007, 0.044, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007, 0.103, 0.015, 0.081, 0.103, 0.096, 0.007, 0.007, 0.088, 0.007, 0.037, 0.007, 0.037, 0.007, 0.022, 0.007, 0.007, 0.029, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.059, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007]),\n     \"Period_minutes\": gaussian(102.622, 5.624),\n     \"Inclination_radians\": gaussian(1.297, 0.373),\n     \"Users\": categorical([0.009, 0.046, 0.472, 0.009, 0.009, 0.019, 0.009, 0.204, 0.056, 0.009, 0.009, 0.019, 0.037, 0.056, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.936, 0.011, 0.043, 0.011]),\n     \"Launch_Site\": categorical([0.122, 0.104, 0.009, 0.217, 0.061, 0.009, 0.017, 0.009, 0.017, 0.009, 0.009, 0.009, 0.017, 0.017, 0.017, 0.017, 0.009, 0.009, 0.009, 0.009, 0.104, 0.157, 0.009, 0.009, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1974.206, 1874.025),\n     \"Apogee_km\": gaussian(164206.536, 133498.913),\n     \"Perigee_km\": gaussian(10240.619, 12157.337),\n     \"Type_of_Orbit\": categorical([0.059, 0.588, 0.059, 0.059, 0.059, 0.059, 0.118]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.048, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.194, 0.016, 0.016, 0.065, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016]),\n     \"Period_minutes\": gaussian(3425.697, 4658.309),\n     \"Inclination_radians\": gaussian(2.375, 6.135),\n     \"Users\": categorical([0.029, 0.118, 0.029, 0.029, 0.029, 0.029, 0.029, 0.353, 0.088, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.050, 0.150, 0.750, 0.050]),\n     \"Launch_Site\": categorical([0.171, 0.024, 0.024, 0.024, 0.024, 0.024, 0.098, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.049, 0.171, 0.024, 0.024, 0.024, 0.024])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.911, 0.058, 0.030, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.712, 0.171)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.180, 0.218)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.062, 0.371, 0.060, 0.070, 0.003, 0.135, 0.060, 0.075, 0.045, 0.040, 0.063, 0.002, 0.014]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1699.593, 566.828),\n     \"Apogee_km\": gaussian(19886.716, 2012.468),\n     \"Perigee_km\": gaussian(19871.842, 1953.682),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(711.774, 66.711),\n     \"Inclination_radians\": gaussian(1.031, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3743.536, 1464.835),\n     \"Apogee_km\": gaussian(35789.008, 1213.126),\n     \"Perigee_km\": gaussian(35760.747, 1237.224),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.140, 48.106),\n     \"Inclination_radians\": gaussian(0.020, 0.072),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(28.633, 23.652),\n     \"Apogee_km\": gaussian(810.299, 55.870),\n     \"Perigee_km\": gaussian(656.803, 140.450),\n     \"Type_of_Orbit\": categorical([0.368, 0.018, 0.018, 0.544, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.009, 0.009, 0.017, 0.259, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.043, 0.009, 0.198, 0.009, 0.009, 0.052, 0.009, 0.034, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(99.499, 1.454),\n     \"Inclination_radians\": gaussian(1.243, 0.551),\n     \"Users\": categorical([0.011, 0.068, 0.091, 0.011, 0.011, 0.045, 0.011, 0.080, 0.477, 0.011, 0.011, 0.011, 0.011, 0.102, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.095, 0.011, 0.011, 0.284, 0.011, 0.042, 0.011, 0.011, 0.053, 0.011, 0.011, 0.274, 0.011, 0.053, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(419.215, 200.643),\n     \"Apogee_km\": gaussian(1447.703, 82.659),\n     \"Perigee_km\": gaussian(1431.893, 69.896),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.585, 1.581),\n     \"Inclination_radians\": gaussian(1.126, 0.290),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.961, 0.508),\n     \"Apogee_km\": gaussian(693.533, 8.367),\n     \"Perigee_km\": gaussian(675.873, 1.343),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.600, 0.728),\n     \"Inclination_radians\": gaussian(1.712, 0.062),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(546.065, 945.761),\n     \"Apogee_km\": gaussian(670.053, 48.551),\n     \"Perigee_km\": gaussian(635.420, 45.975),\n     \"Type_of_Orbit\": categorical([0.930, 0.007, 0.035, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.054, 0.005, 0.034, 0.020, 0.005, 0.005, 0.005, 0.010, 0.005, 0.020, 0.005, 0.212, 0.005, 0.005, 0.108, 0.005, 0.020, 0.044, 0.039, 0.010, 0.005, 0.005, 0.143, 0.020, 0.005, 0.010, 0.005, 0.005, 0.010, 0.005, 0.005, 0.005, 0.005, 0.015, 0.054, 0.005, 0.010, 0.025, 0.010, 0.010, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(97.766, 0.890),\n     \"Inclination_radians\": gaussian(1.710, 0.009),\n     \"Users\": categorical([0.006, 0.017, 0.063, 0.011, 0.006, 0.006, 0.006, 0.451, 0.131, 0.006, 0.011, 0.017, 0.017, 0.206, 0.006, 0.006, 0.011, 0.023]),\n     \"Class_of_Orbit\": categorical([0.981, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.110, 0.099, 0.005, 0.110, 0.110, 0.005, 0.055, 0.005, 0.110, 0.005, 0.005, 0.005, 0.060, 0.170, 0.005, 0.005, 0.005, 0.011, 0.011, 0.005, 0.005, 0.044, 0.005, 0.033, 0.011])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.717, 49.439),\n     \"Apogee_km\": gaussian(777.453, 8.683),\n     \"Perigee_km\": gaussian(773.780, 11.038),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.355, 0.157),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(905.839, 1197.355),\n     \"Apogee_km\": gaussian(507.281, 44.287),\n     \"Perigee_km\": gaussian(490.298, 40.509),\n     \"Type_of_Orbit\": categorical([0.762, 0.016, 0.095, 0.079, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.271, 0.015, 0.008, 0.113, 0.008, 0.023, 0.008, 0.075, 0.008, 0.030, 0.008, 0.075, 0.008, 0.008, 0.008, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.053, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.683, 0.955),\n     \"Inclination_radians\": gaussian(1.268, 0.485),\n     \"Users\": categorical([0.010, 0.038, 0.286, 0.010, 0.010, 0.010, 0.038, 0.295, 0.076, 0.010, 0.010, 0.019, 0.038, 0.105, 0.019, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.116, 0.036, 0.009, 0.045, 0.143, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.205, 0.063, 0.018, 0.027, 0.009, 0.027, 0.027, 0.009, 0.009, 0.036, 0.098, 0.009, 0.036, 0.018])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2118.131, 1723.930),\n     \"Apogee_km\": gaussian(62944.874, 77461.473),\n     \"Perigee_km\": gaussian(11158.008, 14139.683),\n     \"Type_of_Orbit\": categorical([0.037, 0.370, 0.037, 0.037, 0.444, 0.037, 0.037]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.162, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.131, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1140.695, 1078.055),\n     \"Inclination_radians\": gaussian(0.765, 0.522),\n     \"Users\": categorical([0.014, 0.056, 0.366, 0.014, 0.014, 0.014, 0.014, 0.225, 0.127, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.035, 0.246, 0.614, 0.105]),\n     \"Launch_Site\": categorical([0.141, 0.013, 0.013, 0.051, 0.013, 0.026, 0.115, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.077, 0.026, 0.205, 0.090, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1144.401, 1206.088),\n     \"Apogee_km\": gaussian(819.252, 33.781),\n     \"Perigee_km\": gaussian(808.562, 34.346),\n     \"Type_of_Orbit\": categorical([0.800, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.011, 0.118, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011, 0.022, 0.022, 0.011, 0.065, 0.011, 0.011, 0.032, 0.011, 0.022, 0.011, 0.011, 0.011, 0.022, 0.011, 0.118, 0.011, 0.065, 0.011, 0.022, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.054, 0.011, 0.011, 0.011, 0.043, 0.011, 0.011, 0.011, 0.011]),\n     \"Period_minutes\": gaussian(101.182, 0.696),\n     \"Inclination_radians\": gaussian(1.723, 0.016),\n     \"Users\": categorical([0.015, 0.046, 0.154, 0.015, 0.015, 0.015, 0.031, 0.415, 0.062, 0.015, 0.015, 0.031, 0.015, 0.092, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.941, 0.020, 0.020, 0.020]),\n     \"Launch_Site\": categorical([0.097, 0.069, 0.014, 0.222, 0.083, 0.014, 0.042, 0.014, 0.069, 0.014, 0.014, 0.014, 0.014, 0.028, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.014, 0.069, 0.014, 0.097, 0.014])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(4400.748, 5716.617),\n     \"Apogee_km\": gaussian(1051.646, 256.218),\n     \"Perigee_km\": gaussian(838.398, 316.495),\n     \"Type_of_Orbit\": categorical([0.383, 0.017, 0.050, 0.500, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.050, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.108, 0.017, 0.092, 0.117, 0.108, 0.008, 0.008, 0.092, 0.008, 0.008, 0.008, 0.025, 0.008, 0.017, 0.008, 0.008, 0.033, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008]),\n     \"Period_minutes\": gaussian(103.761, 4.844),\n     \"Inclination_radians\": gaussian(1.300, 0.369),\n     \"Users\": categorical([0.011, 0.011, 0.533, 0.011, 0.011, 0.022, 0.011, 0.163, 0.043, 0.011, 0.011, 0.022, 0.033, 0.065, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.923, 0.013, 0.051, 0.013]),\n     \"Launch_Site\": categorical([0.081, 0.121, 0.010, 0.242, 0.071, 0.010, 0.040, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.101, 0.131, 0.010, 0.010, 0.020])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2482.479, 3417.830),\n     \"Apogee_km\": gaussian(176616.455, 374258.021),\n     \"Perigee_km\": gaussian(12374.199, 30368.404),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(9749.391, 16602.951),\n     \"Inclination_radians\": gaussian(9.090, 19.940),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.333, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  } else if (cluster_id == 13) {\n    return {\n     \"Launch_Mass_kg\": gaussian(287.879, 185.400),\n     \"Apogee_km\": gaussian(661.211, 88.780),\n     \"Perigee_km\": gaussian(570.247, 133.309),\n     \"Type_of_Orbit\": categorical([0.125, 0.063, 0.063, 0.500, 0.063, 0.125, 0.063]),\n     \"Purpose\": categorical([0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.048, 0.016, 0.081, 0.016, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.065, 0.065, 0.016, 0.032, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.016, 0.048]),\n     \"Period_minutes\": gaussian(97.124, 1.822),\n     \"Inclination_radians\": gaussian(1.145, 0.876),\n     \"Users\": categorical([0.029, 0.118, 0.176, 0.059, 0.029, 0.029, 0.029, 0.206, 0.029, 0.029, 0.029, 0.029, 0.029, 0.059, 0.029, 0.029, 0.029, 0.029]),\n     \"Class_of_Orbit\": categorical([0.850, 0.050, 0.050, 0.050]),\n     \"Launch_Site\": categorical([0.049, 0.024, 0.049, 0.073, 0.024, 0.049, 0.024, 0.024, 0.024, 0.024, 0.098, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.073, 0.146, 0.049, 0.024, 0.024, 0.024])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.913, 0.056, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.706, 0.188)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.369, 0.083, 0.060, 0.062, 0.003, 0.026, 0.214, 0.016, 0.070, 0.089, 0.004, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3717.883, 1458.108),\n     \"Apogee_km\": gaussian(35753.940, 1193.076),\n     \"Perigee_km\": gaussian(35726.975, 1206.931),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1433.218, 47.296),\n     \"Inclination_radians\": gaussian(0.014, 0.067),\n     \"Users\": categorical([0.002, 0.011, 0.165, 0.002, 0.007, 0.002, 0.024, 0.122, 0.619, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.346, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.204, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(32.852, 37.237),\n     \"Apogee_km\": gaussian(720.429, 161.481),\n     \"Perigee_km\": gaussian(604.797, 149.814),\n     \"Type_of_Orbit\": categorical([0.452, 0.014, 0.014, 0.479, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.217, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.035, 0.007, 0.336, 0.007, 0.007, 0.049, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(97.938, 2.611),\n     \"Inclination_radians\": gaussian(1.051, 0.504),\n     \"Users\": categorical([0.009, 0.070, 0.183, 0.017, 0.009, 0.035, 0.009, 0.113, 0.322, 0.009, 0.009, 0.009, 0.009, 0.157, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.970, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.082, 0.016, 0.008, 0.221, 0.008, 0.041, 0.025, 0.008, 0.033, 0.008, 0.008, 0.369, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.041, 0.016, 0.008, 0.016, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.840, 48.730),\n     \"Apogee_km\": gaussian(777.161, 8.455),\n     \"Perigee_km\": gaussian(773.407, 10.906),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.363, 0.146),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1771.038, 558.614),\n     \"Apogee_km\": gaussian(19894.945, 1925.763),\n     \"Perigee_km\": gaussian(19852.035, 1952.294),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.586, 68.041),\n     \"Inclination_radians\": gaussian(1.044, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.007, 0.676),\n     \"Apogee_km\": gaussian(694.119, 7.960),\n     \"Perigee_km\": gaussian(675.865, 1.435),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.662, 0.900),\n     \"Inclination_radians\": gaussian(1.717, 0.063),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2888.697, 1984.179),\n     \"Apogee_km\": gaussian(36695.604, 5460.821),\n     \"Perigee_km\": gaussian(17390.685, 17754.094),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.079, 0.013, 0.013, 0.132, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.039, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.066, 0.013, 0.039, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.079, 0.013]),\n     \"Period_minutes\": gaussian(843.771, 494.869),\n     \"Inclination_radians\": gaussian(0.742, 0.505),\n     \"Users\": categorical([0.021, 0.021, 0.521, 0.021, 0.021, 0.021, 0.021, 0.125, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Class_of_Orbit\": categorical([0.029, 0.441, 0.500, 0.029]),\n     \"Launch_Site\": categorical([0.036, 0.018, 0.018, 0.055, 0.018, 0.018, 0.055, 0.018, 0.036, 0.018, 0.018, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.109, 0.018, 0.236, 0.127, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(749.242, 984.926),\n     \"Apogee_km\": gaussian(673.158, 107.066),\n     \"Perigee_km\": gaussian(644.364, 104.071),\n     \"Type_of_Orbit\": categorical([0.945, 0.005, 0.032, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.027, 0.003, 0.034, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.199, 0.007, 0.003, 0.122, 0.003, 0.020, 0.030, 0.047, 0.007, 0.007, 0.003, 0.159, 0.014, 0.020, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.054, 0.003, 0.007, 0.017, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.889, 2.056),\n     \"Inclination_radians\": gaussian(1.710, 0.010),\n     \"Users\": categorical([0.004, 0.011, 0.116, 0.007, 0.004, 0.004, 0.019, 0.466, 0.134, 0.004, 0.007, 0.015, 0.019, 0.160, 0.004, 0.004, 0.007, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.120, 0.087, 0.004, 0.138, 0.145, 0.004, 0.044, 0.004, 0.091, 0.004, 0.004, 0.004, 0.058, 0.131, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.062, 0.004, 0.047, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1760.470, 1689.404),\n     \"Apogee_km\": gaussian(104830.571, 94972.836),\n     \"Perigee_km\": gaussian(7688.173, 6360.526),\n     \"Type_of_Orbit\": categorical([0.063, 0.625, 0.063, 0.063, 0.063, 0.063, 0.063]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.108, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.185, 0.015, 0.015, 0.046, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(1831.040, 1541.405),\n     \"Inclination_radians\": gaussian(0.706, 0.605),\n     \"Users\": categorical([0.027, 0.108, 0.027, 0.027, 0.027, 0.027, 0.027, 0.297, 0.189, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027, 0.027]),\n     \"Class_of_Orbit\": categorical([0.043, 0.043, 0.696, 0.217]),\n     \"Launch_Site\": categorical([0.205, 0.023, 0.023, 0.023, 0.023, 0.023, 0.136, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.023, 0.045, 0.136, 0.023, 0.023, 0.023, 0.023])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(409.764, 202.551),\n     \"Apogee_km\": gaussian(1447.341, 81.728),\n     \"Perigee_km\": gaussian(1432.625, 70.845),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.743, 1.424),\n     \"Inclination_radians\": gaussian(1.145, 0.295),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3538.076, 4736.224),\n     \"Apogee_km\": gaussian(902.903, 319.962),\n     \"Perigee_km\": gaussian(751.921, 296.185),\n     \"Type_of_Orbit\": categorical([0.333, 0.013, 0.128, 0.474, 0.013, 0.026, 0.013]),\n     \"Purpose\": categorical([0.007, 0.027, 0.007, 0.040, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.107, 0.013, 0.073, 0.107, 0.087, 0.013, 0.007, 0.093, 0.027, 0.047, 0.007, 0.040, 0.007, 0.013, 0.007, 0.007, 0.027, 0.007, 0.013, 0.007, 0.007, 0.007, 0.007, 0.053, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.013, 0.007]),\n     \"Period_minutes\": gaussian(101.703, 6.002),\n     \"Inclination_radians\": gaussian(1.265, 0.484),\n     \"Users\": categorical([0.008, 0.057, 0.484, 0.008, 0.008, 0.016, 0.008, 0.205, 0.049, 0.008, 0.008, 0.025, 0.033, 0.049, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.944, 0.009, 0.037, 0.009]),\n     \"Launch_Site\": categorical([0.101, 0.093, 0.016, 0.209, 0.054, 0.008, 0.016, 0.008, 0.023, 0.008, 0.031, 0.031, 0.016, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.023, 0.109, 0.140, 0.008, 0.016, 0.023])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(244.093, 294.111),\n     \"Apogee_km\": gaussian(5513.287, 5843.812),\n     \"Perigee_km\": gaussian(855.931, 715.821),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(156.524, 94.126),\n     \"Inclination_radians\": gaussian(1.142, 0.347),\n     \"Users\": categorical([0.043, 0.043, 0.174, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.222, 0.111, 0.444, 0.222]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.067, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3183.077, 2875.289),\n     \"Apogee_km\": gaussian(245038.075, 291050.540),\n     \"Perigee_km\": gaussian(18939.650, 30561.323),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.061, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(6600.092, 13060.343),\n     \"Inclination_radians\": gaussian(7.487, 16.265),\n     \"Users\": categorical([0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.095, 0.143, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048]),\n     \"Class_of_Orbit\": categorical([0.143, 0.429, 0.286, 0.143]),\n     \"Launch_Site\": categorical([0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.107, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.071, 0.036, 0.036, 0.036, 0.036])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.914, 0.055, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.030, 0.024)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.706, 0.189)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.054, 0.371, 0.147, 0.062, 0.004, 0.185, 0.042, 0.061, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(555.713, 595.949),\n     \"Apogee_km\": gaussian(509.189, 46.770),\n     \"Perigee_km\": gaussian(490.197, 51.558),\n     \"Type_of_Orbit\": categorical([0.712, 0.017, 0.102, 0.119, 0.017, 0.017, 0.017]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.281, 0.016, 0.008, 0.102, 0.008, 0.023, 0.008, 0.078, 0.023, 0.047, 0.008, 0.023, 0.008, 0.008, 0.008, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.055, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.674, 0.961),\n     \"Inclination_radians\": gaussian(1.255, 0.524),\n     \"Users\": categorical([0.010, 0.070, 0.320, 0.020, 0.010, 0.010, 0.020, 0.240, 0.080, 0.010, 0.010, 0.020, 0.020, 0.110, 0.020, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.112, 0.009, 0.009, 0.047, 0.131, 0.009, 0.009, 0.009, 0.019, 0.009, 0.028, 0.215, 0.056, 0.019, 0.019, 0.009, 0.028, 0.019, 0.009, 0.009, 0.056, 0.103, 0.009, 0.037, 0.019])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(34.178, 29.611),\n     \"Apogee_km\": gaussian(808.143, 54.357),\n     \"Perigee_km\": gaussian(673.534, 148.281),\n     \"Type_of_Orbit\": categorical([0.275, 0.020, 0.020, 0.627, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.266, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.046, 0.009, 0.165, 0.009, 0.009, 0.055, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.512, 1.452),\n     \"Inclination_radians\": gaussian(1.150, 0.582),\n     \"Users\": categorical([0.012, 0.074, 0.086, 0.012, 0.012, 0.049, 0.012, 0.099, 0.432, 0.012, 0.012, 0.012, 0.012, 0.111, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.045, 0.011, 0.011, 0.295, 0.011, 0.045, 0.011, 0.011, 0.045, 0.011, 0.011, 0.295, 0.011, 0.023, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.023, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3726.405, 1492.600),\n     \"Apogee_km\": gaussian(35847.267, 1228.691),\n     \"Perigee_km\": gaussian(35714.493, 1200.372),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1431.371, 47.380),\n     \"Inclination_radians\": gaussian(0.014, 0.073),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(555.742, 210.732),\n     \"Apogee_km\": gaussian(1131.689, 334.669),\n     \"Perigee_km\": gaussian(1109.823, 345.015),\n     \"Type_of_Orbit\": categorical([0.017, 0.006, 0.424, 0.535, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.714, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.018, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.623, 7.114),\n     \"Inclination_radians\": gaussian(1.321, 0.294),\n     \"Users\": categorical([0.011, 0.005, 0.196, 0.005, 0.005, 0.011, 0.005, 0.011, 0.259, 0.005, 0.005, 0.005, 0.381, 0.032, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.011]),\n     \"Launch_Site\": categorical([0.291, 0.005, 0.005, 0.260, 0.056, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.250, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1737.747, 563.425),\n     \"Apogee_km\": gaussian(20000.334, 1970.603),\n     \"Perigee_km\": gaussian(19787.444, 1928.898),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.973, 67.248),\n     \"Inclination_radians\": gaussian(1.039, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.995, 0.433),\n     \"Apogee_km\": gaussian(696.410, 9.658),\n     \"Perigee_km\": gaussian(676.473, 2.804),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.476, 0.436),\n     \"Inclination_radians\": gaussian(1.713, 0.054),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(695.534, 1035.215),\n     \"Apogee_km\": gaussian(702.006, 81.177),\n     \"Perigee_km\": gaussian(669.037, 87.041),\n     \"Type_of_Orbit\": categorical([0.929, 0.005, 0.046, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.042, 0.004, 0.042, 0.004, 0.027, 0.015, 0.004, 0.008, 0.004, 0.008, 0.004, 0.019, 0.004, 0.198, 0.004, 0.004, 0.099, 0.004, 0.023, 0.034, 0.031, 0.008, 0.008, 0.004, 0.168, 0.015, 0.023, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.011, 0.004, 0.011, 0.057, 0.004, 0.008, 0.015, 0.019, 0.008, 0.011, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.468, 1.782),\n     \"Inclination_radians\": gaussian(1.713, 0.010),\n     \"Users\": categorical([0.004, 0.021, 0.085, 0.009, 0.004, 0.004, 0.013, 0.466, 0.137, 0.004, 0.009, 0.017, 0.017, 0.175, 0.004, 0.004, 0.009, 0.017]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.124, 0.100, 0.004, 0.145, 0.112, 0.004, 0.050, 0.004, 0.104, 0.004, 0.004, 0.004, 0.046, 0.145, 0.008, 0.004, 0.004, 0.012, 0.008, 0.004, 0.004, 0.046, 0.004, 0.046, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2186.840, 1741.564),\n     \"Apogee_km\": gaussian(48998.898, 38892.775),\n     \"Perigee_km\": gaussian(12075.716, 14843.519),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.011, 0.011, 0.158, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.042, 0.011, 0.032, 0.011, 0.011, 0.011, 0.126, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.063, 0.011]),\n     \"Period_minutes\": gaussian(1197.664, 1145.848),\n     \"Inclination_radians\": gaussian(0.761, 0.540),\n     \"Users\": categorical([0.015, 0.060, 0.388, 0.015, 0.015, 0.015, 0.015, 0.209, 0.119, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.038, 0.245, 0.623, 0.094]),\n     \"Launch_Site\": categorical([0.122, 0.014, 0.014, 0.054, 0.014, 0.027, 0.108, 0.014, 0.027, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.081, 0.014, 0.216, 0.095, 0.014, 0.027, 0.027])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5389.922, 5662.717),\n     \"Apogee_km\": gaussian(973.209, 309.925),\n     \"Perigee_km\": gaussian(759.076, 331.980),\n     \"Type_of_Orbit\": categorical([0.490, 0.020, 0.020, 0.392, 0.020, 0.039, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.034, 0.009, 0.137, 0.017, 0.009, 0.128, 0.111, 0.009, 0.009, 0.094, 0.017, 0.017, 0.009, 0.060, 0.009, 0.017, 0.009, 0.009, 0.034, 0.009, 0.017, 0.009, 0.009, 0.009, 0.009, 0.026, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.017, 0.009]),\n     \"Period_minutes\": gaussian(102.638, 5.611),\n     \"Inclination_radians\": gaussian(1.229, 0.463),\n     \"Users\": categorical([0.011, 0.011, 0.472, 0.011, 0.011, 0.011, 0.022, 0.247, 0.011, 0.011, 0.011, 0.022, 0.034, 0.067, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.920, 0.013, 0.053, 0.013]),\n     \"Launch_Site\": categorical([0.073, 0.135, 0.021, 0.260, 0.052, 0.021, 0.042, 0.010, 0.021, 0.010, 0.021, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.031, 0.115, 0.042, 0.010, 0.010, 0.021])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2496.470, 2339.666),\n     \"Apogee_km\": gaussian(277262.318, 201317.018),\n     \"Perigee_km\": gaussian(14909.419, 20998.239),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(4259.675, 9954.211),\n     \"Inclination_radians\": gaussian(5.059, 11.801),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.912, 0.057, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.706, 0.175)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.111, 0.070, 0.369, 0.060, 0.062, 0.003, 0.027, 0.141, 0.070, 0.064, 0.017, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2436.136, 4598.386),\n     \"Apogee_km\": gaussian(927.131, 253.311),\n     \"Perigee_km\": gaussian(778.950, 264.285),\n     \"Type_of_Orbit\": categorical([0.283, 0.009, 0.028, 0.642, 0.009, 0.019, 0.009]),\n     \"Purpose\": categorical([0.006, 0.006, 0.011, 0.199, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.023, 0.006, 0.102, 0.011, 0.063, 0.114, 0.074, 0.006, 0.006, 0.063, 0.011, 0.034, 0.006, 0.040, 0.006, 0.011, 0.006, 0.006, 0.023, 0.006, 0.011, 0.006, 0.006, 0.006, 0.006, 0.017, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.011, 0.017]),\n     \"Period_minutes\": gaussian(101.958, 4.641),\n     \"Inclination_radians\": gaussian(1.099, 0.463),\n     \"Users\": categorical([0.007, 0.068, 0.365, 0.007, 0.007, 0.014, 0.007, 0.169, 0.223, 0.007, 0.007, 0.014, 0.027, 0.054, 0.007, 0.007, 0.007, 0.007]),\n     \"Class_of_Orbit\": categorical([0.955, 0.007, 0.030, 0.007]),\n     \"Launch_Site\": categorical([0.077, 0.077, 0.013, 0.219, 0.045, 0.019, 0.026, 0.006, 0.032, 0.006, 0.013, 0.174, 0.013, 0.006, 0.006, 0.013, 0.006, 0.006, 0.006, 0.019, 0.103, 0.084, 0.006, 0.006, 0.013])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(8.400, 12.874),\n     \"Apogee_km\": gaussian(725.586, 92.617),\n     \"Perigee_km\": gaussian(586.864, 76.964),\n     \"Type_of_Orbit\": categorical([0.896, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.063, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.055, 0.008, 0.438, 0.008, 0.008, 0.008, 0.008, 0.055, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.805, 1.008),\n     \"Inclination_radians\": gaussian(1.675, 0.265),\n     \"Users\": categorical([0.010, 0.010, 0.070, 0.010, 0.010, 0.040, 0.010, 0.070, 0.260, 0.010, 0.020, 0.010, 0.010, 0.420, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.159, 0.047, 0.009, 0.168, 0.009, 0.028, 0.019, 0.009, 0.112, 0.009, 0.009, 0.009, 0.047, 0.243, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3737.154, 1468.565),\n     \"Apogee_km\": gaussian(35851.359, 1234.559),\n     \"Perigee_km\": gaussian(35717.766, 1224.396),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1435.475, 45.986),\n     \"Inclination_radians\": gaussian(0.019, 0.069),\n     \"Users\": categorical([0.002, 0.011, 0.165, 0.002, 0.007, 0.002, 0.024, 0.122, 0.619, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.232, 0.002, 0.002, 0.002, 0.002, 0.002, 0.346, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.204, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.232, 47.609),\n     \"Apogee_km\": gaussian(777.213, 8.134),\n     \"Perigee_km\": gaussian(773.684, 10.906),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.369, 0.154),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1752.623, 565.889),\n     \"Apogee_km\": gaussian(19999.885, 1928.255),\n     \"Perigee_km\": gaussian(19865.761, 1935.768),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(710.053, 64.869),\n     \"Inclination_radians\": gaussian(1.033, 0.100),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.007, 0.630),\n     \"Apogee_km\": gaussian(694.312, 8.782),\n     \"Perigee_km\": gaussian(675.897, 1.456),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.621, 0.841),\n     \"Inclination_radians\": gaussian(1.712, 0.059),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2922.001, 1943.344),\n     \"Apogee_km\": gaussian(37204.539, 6199.080),\n     \"Perigee_km\": gaussian(17441.515, 16490.737),\n     \"Type_of_Orbit\": categorical([0.056, 0.056, 0.056, 0.056, 0.667, 0.056, 0.056]),\n     \"Purpose\": categorical([0.077, 0.013, 0.013, 0.154, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.026, 0.013, 0.038, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.064, 0.013, 0.038, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.077, 0.013]),\n     \"Period_minutes\": gaussian(887.937, 498.226),\n     \"Inclination_radians\": gaussian(0.770, 0.484),\n     \"Users\": categorical([0.020, 0.020, 0.500, 0.020, 0.020, 0.020, 0.020, 0.120, 0.080, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.028, 0.417, 0.528, 0.028]),\n     \"Launch_Site\": categorical([0.070, 0.018, 0.018, 0.053, 0.018, 0.018, 0.053, 0.018, 0.035, 0.018, 0.018, 0.018, 0.035, 0.018, 0.018, 0.018, 0.018, 0.018, 0.105, 0.018, 0.228, 0.123, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1037.343, 1162.323),\n     \"Apogee_km\": gaussian(704.735, 91.508),\n     \"Perigee_km\": gaussian(686.917, 91.348),\n     \"Type_of_Orbit\": categorical([0.905, 0.007, 0.061, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.052, 0.005, 0.019, 0.005, 0.005, 0.019, 0.005, 0.010, 0.005, 0.010, 0.010, 0.014, 0.005, 0.090, 0.005, 0.005, 0.114, 0.005, 0.010, 0.043, 0.043, 0.010, 0.010, 0.005, 0.205, 0.019, 0.029, 0.010, 0.010, 0.005, 0.010, 0.005, 0.005, 0.014, 0.005, 0.014, 0.076, 0.005, 0.010, 0.024, 0.024, 0.010, 0.010, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.717, 1.838),\n     \"Inclination_radians\": gaussian(1.714, 0.011),\n     \"Users\": categorical([0.005, 0.027, 0.115, 0.011, 0.005, 0.005, 0.016, 0.588, 0.077, 0.005, 0.005, 0.022, 0.016, 0.055, 0.005, 0.005, 0.011, 0.022]),\n     \"Class_of_Orbit\": categorical([0.982, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.106, 0.111, 0.005, 0.201, 0.138, 0.005, 0.058, 0.005, 0.074, 0.005, 0.005, 0.005, 0.037, 0.058, 0.005, 0.005, 0.005, 0.011, 0.011, 0.005, 0.005, 0.058, 0.005, 0.063, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(419.618, 199.865),\n     \"Apogee_km\": gaussian(1448.367, 84.468),\n     \"Perigee_km\": gaussian(1428.754, 72.886),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.658, 1.475),\n     \"Inclination_radians\": gaussian(1.134, 0.296),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(600.468, 634.865),\n     \"Apogee_km\": gaussian(504.383, 39.863),\n     \"Perigee_km\": gaussian(483.610, 43.300),\n     \"Type_of_Orbit\": categorical([0.764, 0.018, 0.109, 0.055, 0.018, 0.018, 0.018]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.256, 0.017, 0.008, 0.124, 0.008, 0.025, 0.008, 0.074, 0.025, 0.017, 0.008, 0.033, 0.008, 0.008, 0.008, 0.008, 0.058, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.058, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.487, 0.805),\n     \"Inclination_radians\": gaussian(1.290, 0.526),\n     \"Users\": categorical([0.011, 0.032, 0.323, 0.022, 0.011, 0.011, 0.032, 0.269, 0.075, 0.011, 0.011, 0.022, 0.032, 0.086, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.080, 0.010, 0.010, 0.030, 0.150, 0.010, 0.010, 0.010, 0.020, 0.010, 0.030, 0.220, 0.060, 0.020, 0.030, 0.010, 0.030, 0.030, 0.010, 0.010, 0.030, 0.110, 0.010, 0.040, 0.020])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1819.320, 1741.106),\n     \"Apogee_km\": gaussian(143211.303, 133628.480),\n     \"Perigee_km\": gaussian(9708.751, 10724.812),\n     \"Type_of_Orbit\": categorical([0.059, 0.588, 0.059, 0.059, 0.059, 0.059, 0.118]),\n     \"Purpose\": categorical([0.015, 0.015, 0.015, 0.106, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.182, 0.015, 0.015, 0.061, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015, 0.015]),\n     \"Period_minutes\": gaussian(2867.067, 4193.329),\n     \"Inclination_radians\": gaussian(1.743, 5.617),\n     \"Users\": categorical([0.026, 0.105, 0.026, 0.026, 0.026, 0.026, 0.026, 0.316, 0.184, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026, 0.026]),\n     \"Class_of_Orbit\": categorical([0.042, 0.125, 0.625, 0.208]),\n     \"Launch_Site\": categorical([0.156, 0.022, 0.022, 0.022, 0.022, 0.022, 0.178, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.044, 0.156, 0.022, 0.022, 0.022, 0.022])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(244.597, 288.059),\n     \"Apogee_km\": gaussian(5887.297, 6110.068),\n     \"Perigee_km\": gaussian(887.534, 710.613),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(150.284, 90.414),\n     \"Inclination_radians\": gaussian(1.128, 0.315),\n     \"Users\": categorical([0.043, 0.043, 0.174, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.130, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.222, 0.111, 0.444, 0.222]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.067, 0.033, 0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.908, 0.060, 0.029, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.027, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.734, 0.161)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.287, 0.204)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.060, 0.212, 0.371, 0.070, 0.062, 0.005, 0.081, 0.045, 0.093, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(683.341, 53.461),\n     \"Apogee_km\": gaussian(777.106, 8.358),\n     \"Perigee_km\": gaussian(773.931, 10.901),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.359, 0.152),\n     \"Inclination_radians\": gaussian(1.509, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(658.749, 908.178),\n     \"Apogee_km\": gaussian(669.165, 103.580),\n     \"Perigee_km\": gaussian(646.344, 102.560),\n     \"Type_of_Orbit\": categorical([0.944, 0.005, 0.033, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.031, 0.003, 0.034, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.201, 0.007, 0.003, 0.126, 0.003, 0.020, 0.031, 0.048, 0.007, 0.007, 0.003, 0.157, 0.014, 0.017, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.048, 0.003, 0.007, 0.014, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.916, 2.102),\n     \"Inclination_radians\": gaussian(1.711, 0.010),\n     \"Users\": categorical([0.004, 0.015, 0.117, 0.008, 0.004, 0.004, 0.015, 0.457, 0.136, 0.004, 0.008, 0.019, 0.019, 0.162, 0.004, 0.004, 0.008, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.121, 0.088, 0.004, 0.132, 0.147, 0.004, 0.040, 0.004, 0.092, 0.004, 0.004, 0.004, 0.059, 0.132, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.059, 0.004, 0.051, 0.007])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3774.021, 1435.665),\n     \"Apogee_km\": gaussian(35725.006, 1256.712),\n     \"Perigee_km\": gaussian(35695.201, 1248.856),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.635, 45.056),\n     \"Inclination_radians\": gaussian(0.021, 0.072),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(420.445, 202.721),\n     \"Apogee_km\": gaussian(1449.545, 81.683),\n     \"Perigee_km\": gaussian(1432.827, 70.434),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.691, 1.484),\n     \"Inclination_radians\": gaussian(1.132, 0.280),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1741.147, 556.848),\n     \"Apogee_km\": gaussian(19823.332, 1893.648),\n     \"Perigee_km\": gaussian(19808.884, 1944.886),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.355, 67.155),\n     \"Inclination_radians\": gaussian(1.040, 0.104),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.939, 0.471),\n     \"Apogee_km\": gaussian(695.869, 8.239),\n     \"Perigee_km\": gaussian(679.489, 7.559),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.630, 0.621),\n     \"Inclination_radians\": gaussian(1.713, 0.046),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(31.720, 34.090),\n     \"Apogee_km\": gaussian(728.246, 172.294),\n     \"Perigee_km\": gaussian(608.640, 154.933),\n     \"Type_of_Orbit\": categorical([0.444, 0.014, 0.014, 0.486, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.221, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.036, 0.007, 0.321, 0.007, 0.007, 0.050, 0.007, 0.029, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.278, 2.719),\n     \"Inclination_radians\": gaussian(1.028, 0.503),\n     \"Users\": categorical([0.009, 0.063, 0.179, 0.018, 0.009, 0.036, 0.009, 0.107, 0.330, 0.009, 0.009, 0.009, 0.009, 0.161, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.092, 0.008, 0.008, 0.218, 0.008, 0.034, 0.025, 0.008, 0.034, 0.008, 0.008, 0.387, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.034, 0.017, 0.008, 0.008, 0.008])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2142.141, 1644.661),\n     \"Apogee_km\": gaussian(65544.038, 77083.820),\n     \"Perigee_km\": gaussian(12701.916, 14399.427),\n     \"Type_of_Orbit\": categorical([0.037, 0.370, 0.037, 0.037, 0.444, 0.037, 0.037]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.162, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.131, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1174.238, 1138.720),\n     \"Inclination_radians\": gaussian(0.739, 0.550),\n     \"Users\": categorical([0.014, 0.056, 0.366, 0.014, 0.014, 0.014, 0.014, 0.225, 0.127, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.035, 0.246, 0.614, 0.105]),\n     \"Launch_Site\": categorical([0.141, 0.013, 0.013, 0.051, 0.013, 0.026, 0.115, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.077, 0.026, 0.205, 0.090, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3295.581, 4768.094),\n     \"Apogee_km\": gaussian(891.606, 308.978),\n     \"Perigee_km\": gaussian(756.987, 294.343),\n     \"Type_of_Orbit\": categorical([0.350, 0.013, 0.125, 0.463, 0.013, 0.025, 0.013]),\n     \"Purpose\": categorical([0.006, 0.019, 0.006, 0.039, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.019, 0.006, 0.123, 0.013, 0.071, 0.097, 0.084, 0.013, 0.006, 0.091, 0.026, 0.045, 0.006, 0.045, 0.006, 0.019, 0.006, 0.006, 0.026, 0.006, 0.013, 0.006, 0.006, 0.006, 0.006, 0.058, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.013, 0.006]),\n     \"Period_minutes\": gaussian(101.549, 5.614),\n     \"Inclination_radians\": gaussian(1.255, 0.494),\n     \"Users\": categorical([0.008, 0.056, 0.476, 0.008, 0.008, 0.016, 0.016, 0.222, 0.048, 0.008, 0.008, 0.016, 0.032, 0.048, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.946, 0.009, 0.036, 0.009]),\n     \"Launch_Site\": categorical([0.090, 0.098, 0.015, 0.226, 0.053, 0.015, 0.015, 0.008, 0.023, 0.008, 0.030, 0.023, 0.015, 0.015, 0.015, 0.015, 0.008, 0.008, 0.008, 0.023, 0.113, 0.135, 0.008, 0.015, 0.023])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2478.238, 4276.292),\n     \"Apogee_km\": gaussian(207935.954, 427270.829),\n     \"Perigee_km\": gaussian(14402.022, 32460.535),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(8808.630, 14509.754),\n     \"Inclination_radians\": gaussian(10.814, 16.870),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.333, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.913, 0.055, 0.032, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.709, 0.192)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.011, 0.121)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.371, 0.054, 0.062, 0.005, 0.171, 0.060, 0.081, 0.045, 0.080, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(415.276, 195.211),\n     \"Apogee_km\": gaussian(1449.066, 78.025),\n     \"Perigee_km\": gaussian(1431.547, 74.927),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.592, 1.462),\n     \"Inclination_radians\": gaussian(1.157, 0.304),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3784.132, 1438.011),\n     \"Apogee_km\": gaussian(35766.162, 1190.425),\n     \"Perigee_km\": gaussian(35710.394, 1191.058),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1434.093, 44.566),\n     \"Inclination_radians\": gaussian(0.019, 0.073),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(34.495, 27.839),\n     \"Apogee_km\": gaussian(797.970, 55.558),\n     \"Perigee_km\": gaussian(676.786, 149.404),\n     \"Type_of_Orbit\": categorical([0.255, 0.020, 0.020, 0.647, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.018, 0.275, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.165, 0.009, 0.009, 0.055, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.009, 0.009, 0.009, 0.009, 0.018, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.535, 1.499),\n     \"Inclination_radians\": gaussian(1.191, 0.571),\n     \"Users\": categorical([0.012, 0.074, 0.086, 0.012, 0.012, 0.049, 0.012, 0.099, 0.444, 0.012, 0.012, 0.012, 0.012, 0.099, 0.012, 0.012, 0.012, 0.012]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.057, 0.011, 0.011, 0.295, 0.011, 0.045, 0.011, 0.011, 0.057, 0.011, 0.011, 0.295, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1726.407, 571.408),\n     \"Apogee_km\": gaussian(19911.882, 1958.514),\n     \"Perigee_km\": gaussian(19852.300, 1967.825),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.963, 67.910),\n     \"Inclination_radians\": gaussian(1.036, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.952, 0.434),\n     \"Apogee_km\": gaussian(695.367, 8.808),\n     \"Perigee_km\": gaussian(679.161, 7.257),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.656, 0.658),\n     \"Inclination_radians\": gaussian(1.713, 0.047),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(595.144, 974.762),\n     \"Apogee_km\": gaussian(705.252, 74.690),\n     \"Perigee_km\": gaussian(671.325, 78.838),\n     \"Type_of_Orbit\": categorical([0.934, 0.005, 0.038, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.016, 0.004, 0.045, 0.004, 0.029, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.024, 0.004, 0.212, 0.004, 0.004, 0.094, 0.004, 0.024, 0.037, 0.020, 0.004, 0.008, 0.004, 0.167, 0.016, 0.024, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.057, 0.004, 0.008, 0.016, 0.020, 0.008, 0.008, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.535, 1.562),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.005, 0.014, 0.060, 0.009, 0.005, 0.005, 0.009, 0.475, 0.147, 0.005, 0.009, 0.009, 0.018, 0.194, 0.005, 0.005, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.985, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.125, 0.098, 0.004, 0.129, 0.107, 0.004, 0.045, 0.004, 0.103, 0.004, 0.004, 0.004, 0.045, 0.161, 0.009, 0.004, 0.004, 0.009, 0.009, 0.004, 0.004, 0.049, 0.004, 0.054, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(682.961, 49.142),\n     \"Apogee_km\": gaussian(777.202, 8.420),\n     \"Perigee_km\": gaussian(773.780, 10.804),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.364, 0.157),\n     \"Inclination_radians\": gaussian(1.510, 0.020),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(915.978, 1175.045),\n     \"Apogee_km\": gaussian(511.493, 49.926),\n     \"Perigee_km\": gaussian(492.189, 49.330),\n     \"Type_of_Orbit\": categorical([0.727, 0.015, 0.091, 0.121, 0.015, 0.015, 0.015]),\n     \"Purpose\": categorical([0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.257, 0.014, 0.007, 0.107, 0.007, 0.021, 0.007, 0.086, 0.029, 0.050, 0.007, 0.064, 0.007, 0.007, 0.007, 0.007, 0.050, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.050, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(94.728, 1.033),\n     \"Inclination_radians\": gaussian(1.260, 0.509),\n     \"Users\": categorical([0.009, 0.063, 0.295, 0.018, 0.009, 0.009, 0.036, 0.277, 0.071, 0.009, 0.009, 0.027, 0.027, 0.098, 0.018, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.969, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.109, 0.025, 0.008, 0.050, 0.143, 0.008, 0.008, 0.008, 0.025, 0.008, 0.025, 0.193, 0.067, 0.017, 0.017, 0.008, 0.025, 0.025, 0.008, 0.008, 0.059, 0.092, 0.008, 0.034, 0.017])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2204.435, 1718.031),\n     \"Apogee_km\": gaussian(61976.908, 79689.745),\n     \"Perigee_km\": gaussian(12940.420, 14761.588),\n     \"Type_of_Orbit\": categorical([0.037, 0.370, 0.037, 0.037, 0.444, 0.037, 0.037]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.162, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.131, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1181.377, 1087.962),\n     \"Inclination_radians\": gaussian(0.775, 0.525),\n     \"Users\": categorical([0.014, 0.056, 0.366, 0.014, 0.014, 0.014, 0.014, 0.225, 0.127, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.035, 0.246, 0.614, 0.105]),\n     \"Launch_Site\": categorical([0.141, 0.013, 0.013, 0.051, 0.013, 0.026, 0.115, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.077, 0.026, 0.205, 0.090, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3854.719, 5094.938),\n     \"Apogee_km\": gaussian(976.649, 256.141),\n     \"Perigee_km\": gaussian(801.416, 294.002),\n     \"Type_of_Orbit\": categorical([0.432, 0.014, 0.068, 0.432, 0.014, 0.027, 0.014]),\n     \"Purpose\": categorical([0.007, 0.058, 0.007, 0.043, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.029, 0.007, 0.129, 0.014, 0.079, 0.115, 0.094, 0.007, 0.007, 0.086, 0.014, 0.007, 0.007, 0.029, 0.007, 0.014, 0.007, 0.007, 0.029, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.022, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(102.870, 4.787),\n     \"Inclination_radians\": gaussian(1.317, 0.424),\n     \"Users\": categorical([0.009, 0.027, 0.532, 0.009, 0.009, 0.018, 0.009, 0.180, 0.036, 0.009, 0.009, 0.027, 0.027, 0.063, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.938, 0.010, 0.041, 0.010]),\n     \"Launch_Site\": categorical([0.093, 0.110, 0.017, 0.271, 0.059, 0.017, 0.042, 0.008, 0.017, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.025, 0.085, 0.119, 0.008, 0.008, 0.017])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2427.752, 3760.793),\n     \"Apogee_km\": gaussian(211217.399, 375589.769),\n     \"Perigee_km\": gaussian(14777.974, 31637.840),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(8309.026, 17549.409),\n     \"Inclination_radians\": gaussian(10.232, 19.678),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.333, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.914, 0.055, 0.027, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.026)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.744, 0.154)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.327, 0.194)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.144, 0.371, 0.053, 0.062, 0.005, 0.183, 0.074, 0.042, 0.062, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(567.680, 204.500),\n     \"Apogee_km\": gaussian(1144.497, 352.101),\n     \"Perigee_km\": gaussian(1131.587, 315.588),\n     \"Type_of_Orbit\": categorical([0.012, 0.006, 0.429, 0.535, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.720, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(107.548, 7.339),\n     \"Inclination_radians\": gaussian(1.316, 0.274),\n     \"Users\": categorical([0.011, 0.005, 0.199, 0.005, 0.005, 0.005, 0.005, 0.011, 0.258, 0.005, 0.005, 0.005, 0.387, 0.027, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.012]),\n     \"Launch_Site\": categorical([0.290, 0.005, 0.005, 0.254, 0.057, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.254, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3614.267, 1494.372),\n     \"Apogee_km\": gaussian(35713.154, 1238.190),\n     \"Perigee_km\": gaussian(35728.459, 1201.509),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1433.172, 48.362),\n     \"Inclination_radians\": gaussian(0.019, 0.071),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(33.952, 28.324),\n     \"Apogee_km\": gaussian(805.178, 54.973),\n     \"Perigee_km\": gaussian(675.626, 145.628),\n     \"Type_of_Orbit\": categorical([0.224, 0.020, 0.020, 0.673, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.278, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.037, 0.009, 0.167, 0.009, 0.009, 0.056, 0.009, 0.028, 0.009, 0.009, 0.009, 0.019, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.436, 1.491),\n     \"Inclination_radians\": gaussian(1.137, 0.579),\n     \"Users\": categorical([0.013, 0.075, 0.100, 0.013, 0.013, 0.050, 0.013, 0.100, 0.425, 0.013, 0.013, 0.013, 0.013, 0.100, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.046, 0.011, 0.011, 0.299, 0.011, 0.046, 0.011, 0.011, 0.046, 0.011, 0.011, 0.299, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.023, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1726.490, 548.347),\n     \"Apogee_km\": gaussian(19884.124, 1999.838),\n     \"Perigee_km\": gaussian(19773.513, 1968.875),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.261, 68.003),\n     \"Inclination_radians\": gaussian(1.039, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.910, 0.549),\n     \"Apogee_km\": gaussian(695.615, 8.271),\n     \"Perigee_km\": gaussian(678.882, 7.305),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.556, 0.384),\n     \"Inclination_radians\": gaussian(1.715, 0.047),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(732.844, 1004.825),\n     \"Apogee_km\": gaussian(706.120, 83.970),\n     \"Perigee_km\": gaussian(668.521, 88.175),\n     \"Type_of_Orbit\": categorical([0.928, 0.005, 0.046, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.042, 0.004, 0.042, 0.004, 0.027, 0.015, 0.004, 0.008, 0.004, 0.008, 0.008, 0.023, 0.004, 0.200, 0.004, 0.004, 0.092, 0.004, 0.023, 0.035, 0.031, 0.004, 0.004, 0.004, 0.169, 0.015, 0.023, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.058, 0.004, 0.008, 0.015, 0.019, 0.008, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.482, 1.720),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.004, 0.022, 0.086, 0.009, 0.004, 0.004, 0.009, 0.457, 0.147, 0.004, 0.009, 0.013, 0.017, 0.181, 0.004, 0.004, 0.009, 0.017]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.130, 0.100, 0.004, 0.151, 0.109, 0.004, 0.046, 0.004, 0.100, 0.004, 0.004, 0.004, 0.042, 0.151, 0.008, 0.004, 0.004, 0.008, 0.008, 0.004, 0.004, 0.042, 0.004, 0.050, 0.008])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(560.495, 618.578),\n     \"Apogee_km\": gaussian(514.668, 50.078),\n     \"Perigee_km\": gaussian(490.984, 50.347),\n     \"Type_of_Orbit\": categorical([0.726, 0.016, 0.097, 0.113, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.280, 0.015, 0.008, 0.114, 0.008, 0.023, 0.008, 0.076, 0.030, 0.045, 0.008, 0.023, 0.008, 0.008, 0.008, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.053, 0.015, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.645, 0.999),\n     \"Inclination_radians\": gaussian(1.261, 0.501),\n     \"Users\": categorical([0.010, 0.067, 0.298, 0.019, 0.010, 0.010, 0.029, 0.250, 0.077, 0.010, 0.010, 0.029, 0.019, 0.115, 0.019, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.108, 0.009, 0.009, 0.036, 0.135, 0.009, 0.009, 0.009, 0.027, 0.009, 0.027, 0.207, 0.063, 0.018, 0.018, 0.009, 0.027, 0.027, 0.009, 0.009, 0.054, 0.108, 0.009, 0.036, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2225.491, 1787.591),\n     \"Apogee_km\": gaussian(49587.852, 39383.972),\n     \"Perigee_km\": gaussian(12402.286, 14390.868),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.011, 0.011, 0.158, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.042, 0.011, 0.032, 0.011, 0.011, 0.011, 0.126, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.063, 0.011]),\n     \"Period_minutes\": gaussian(1124.724, 1098.209),\n     \"Inclination_radians\": gaussian(0.764, 0.525),\n     \"Users\": categorical([0.015, 0.060, 0.388, 0.015, 0.015, 0.015, 0.015, 0.209, 0.119, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.038, 0.245, 0.623, 0.094]),\n     \"Launch_Site\": categorical([0.122, 0.014, 0.014, 0.054, 0.014, 0.027, 0.108, 0.014, 0.027, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.081, 0.014, 0.216, 0.095, 0.014, 0.027, 0.027])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5347.725, 5683.984),\n     \"Apogee_km\": gaussian(978.042, 302.775),\n     \"Perigee_km\": gaussian(791.954, 316.645),\n     \"Type_of_Orbit\": categorical([0.509, 0.019, 0.019, 0.377, 0.019, 0.038, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008, 0.008, 0.034, 0.008, 0.136, 0.017, 0.008, 0.127, 0.110, 0.008, 0.008, 0.093, 0.017, 0.017, 0.008, 0.059, 0.008, 0.017, 0.008, 0.008, 0.034, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008]),\n     \"Period_minutes\": gaussian(102.714, 5.581),\n     \"Inclination_radians\": gaussian(1.244, 0.477),\n     \"Users\": categorical([0.011, 0.011, 0.467, 0.011, 0.011, 0.022, 0.022, 0.244, 0.011, 0.011, 0.011, 0.022, 0.033, 0.067, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.921, 0.013, 0.053, 0.013]),\n     \"Launch_Site\": categorical([0.072, 0.134, 0.021, 0.278, 0.052, 0.021, 0.041, 0.010, 0.021, 0.010, 0.021, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.031, 0.113, 0.031, 0.010, 0.010, 0.021])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2761.546, 2417.574),\n     \"Apogee_km\": gaussian(267799.506, 200526.667),\n     \"Perigee_km\": gaussian(15261.538, 20072.975),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(4022.865, 9276.742),\n     \"Inclination_radians\": gaussian(4.846, 11.681),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.918, 0.051, 0.030, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.029, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.718, 0.166)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.147, 0.205)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.994, 0.006]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.019, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.036, 0.003, 0.005, 0.002, 0.002, 0.001, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.002, 0.002, 0.014, 0.002, 0.011, 0.003, 0.011, 0.019, 0.004, 0.392, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.025, 0.002, 0.002, 0.002, 0.002, 0.002, 0.005, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categoricaln    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.043, 0.371, 0.060, 0.070, 0.062, 0.005, 0.216, 0.063, 0.105, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2184.205, 1738.900),\n     \"Apogee_km\": gaussian(48226.761, 40099.969),\n     \"Perigee_km\": gaussian(12275.425, 14252.594),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.010, 0.010, 0.156, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.042, 0.010, 0.031, 0.010, 0.010, 0.010, 0.125, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.063, 0.010]),\n     \"Period_minutes\": gaussian(1179.060, 1126.170),\n     \"Inclination_radians\": gaussian(0.777, 0.528),\n     \"Users\": categorical([0.015, 0.059, 0.382, 0.015, 0.015, 0.015, 0.015, 0.206, 0.118, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.037, 0.241, 0.611, 0.111]),\n     \"Launch_Site\": categorical([0.133, 0.013, 0.013, 0.053, 0.013, 0.027, 0.107, 0.013, 0.027, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.080, 0.013, 0.213, 0.093, 0.013, 0.027, 0.027])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3759.349, 1459.860),\n     \"Apogee_km\": gaussian(35733.292, 1231.478),\n     \"Perigee_km\": gaussian(35695.755, 1188.460),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1436.581, 46.124),\n     \"Inclination_radians\": gaussian(0.024, 0.069),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.438, 49.836),\n     \"Apogee_km\": gaussian(776.936, 8.324),\n     \"Perigee_km\": gaussian(774.008, 11.284),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.361, 0.169),\n     \"Inclination_radians\": gaussian(1.510, 0.022),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(416.786, 195.337),\n     \"Apogee_km\": gaussian(1445.570, 79.743),\n     \"Perigee_km\": gaussian(1433.888, 67.684),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.611, 1.492),\n     \"Inclination_radians\": gaussian(1.155, 0.298),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1681.796, 555.012),\n     \"Apogee_km\": gaussian(19793.037, 1917.425),\n     \"Perigee_km\": gaussian(19825.589, 1934.313),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(708.708, 65.788),\n     \"Inclination_radians\": gaussian(1.039, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.018, 0.423),\n     \"Apogee_km\": gaussian(695.986, 8.000),\n     \"Perigee_km\": gaussian(678.907, 6.989),\n     \"Type_of_Orbit\": categorical([0.231, 0.077, 0.385, 0.077, 0.077, 0.077, 0.077]),\n     \"Purpose\": categorical([0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.096, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.019, 0.038, 0.019, 0.019, 0.038, 0.019, 0.019, 0.019, 0.019, 0.019]),\n     \"Period_minutes\": gaussian(98.655, 0.702),\n     \"Inclination_radians\": gaussian(1.714, 0.048),\n     \"Users\": categorical([0.042, 0.042, 0.208, 0.042, 0.042, 0.042, 0.042, 0.125, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042, 0.042]),\n     \"Class_of_Orbit\": categorical([0.700, 0.100, 0.100, 0.100]),\n     \"Launch_Site\": categorical([0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.194, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.032, 0.065, 0.032, 0.032, 0.032])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(774.759, 1086.200),\n     \"Apogee_km\": gaussian(672.612, 107.850),\n     \"Perigee_km\": gaussian(647.039, 103.050),\n     \"Type_of_Orbit\": categorical([0.940, 0.005, 0.037, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.034, 0.003, 0.037, 0.003, 0.027, 0.013, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.198, 0.003, 0.003, 0.124, 0.003, 0.020, 0.030, 0.047, 0.007, 0.007, 0.003, 0.161, 0.013, 0.020, 0.007, 0.007, 0.023, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.050, 0.003, 0.007, 0.013, 0.017, 0.007, 0.010, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.996, 2.133),\n     \"Inclination_radians\": gaussian(1.710, 0.010),\n     \"Users\": categorical([0.004, 0.015, 0.119, 0.007, 0.004, 0.004, 0.019, 0.452, 0.137, 0.004, 0.007, 0.019, 0.022, 0.159, 0.004, 0.004, 0.007, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.130, 0.087, 0.004, 0.144, 0.141, 0.004, 0.040, 0.004, 0.090, 0.004, 0.004, 0.004, 0.058, 0.130, 0.007, 0.004, 0.004, 0.014, 0.007, 0.004, 0.004, 0.058, 0.004, 0.047, 0.007])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(131.621, 183.767),\n     \"Apogee_km\": gaussian(613.511, 161.282),\n     \"Perigee_km\": gaussian(495.687, 71.582),\n     \"Type_of_Orbit\": categorical([0.596, 0.021, 0.128, 0.170, 0.021, 0.043, 0.021]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.050, 0.008, 0.400, 0.017, 0.008, 0.025, 0.008, 0.042, 0.008, 0.025, 0.033, 0.033, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.058, 0.017, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(95.798, 1.789),\n     \"Inclination_radians\": gaussian(1.148, 0.626),\n     \"Users\": categorical([0.011, 0.065, 0.304, 0.022, 0.011, 0.043, 0.011, 0.185, 0.076, 0.011, 0.011, 0.011, 0.011, 0.174, 0.022, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.962, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.071, 0.020, 0.020, 0.212, 0.020, 0.040, 0.010, 0.010, 0.020, 0.010, 0.040, 0.232, 0.010, 0.010, 0.010, 0.010, 0.030, 0.010, 0.010, 0.030, 0.051, 0.071, 0.010, 0.030, 0.010])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2710.239, 4864.508),\n     \"Apogee_km\": gaussian(922.672, 256.897),\n     \"Perigee_km\": gaussian(788.702, 255.095),\n     \"Type_of_Orbit\": categorical([0.287, 0.010, 0.040, 0.634, 0.010, 0.010, 0.010]),\n     \"Purpose\": categorical([0.006, 0.012, 0.012, 0.207, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.012, 0.006, 0.095, 0.012, 0.065, 0.112, 0.077, 0.006, 0.006, 0.071, 0.006, 0.024, 0.006, 0.036, 0.006, 0.012, 0.006, 0.006, 0.024, 0.006, 0.012, 0.006, 0.006, 0.006, 0.006, 0.018, 0.006, 0.006, 0.006, 0.006, 0.006, 0.006, 0.012, 0.018]),\n     \"Period_minutes\": gaussian(102.251, 4.543),\n     \"Inclination_radians\": gaussian(1.147, 0.427),\n     \"Users\": categorical([0.007, 0.057, 0.362, 0.007, 0.007, 0.014, 0.007, 0.156, 0.248, 0.007, 0.007, 0.014, 0.021, 0.057, 0.007, 0.007, 0.007, 0.007]),\n     \"Class_of_Orbit\": categorical([0.953, 0.008, 0.031, 0.008]),\n     \"Launch_Site\": categorical([0.088, 0.081, 0.007, 0.209, 0.047, 0.014, 0.027, 0.007, 0.034, 0.007, 0.007, 0.176, 0.014, 0.014, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.095, 0.088, 0.007, 0.007, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2818.595, 2370.682),\n     \"Apogee_km\": gaussian(268793.149, 205668.189),\n     \"Perigee_km\": gaussian(15172.050, 20883.054),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(3944.094, 9399.985),\n     \"Inclination_radians\": gaussian(5.323, 12.505),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.917, 0.052, 0.030, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.003)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.024)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.709, 0.179)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.180, 0.289)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.070, 0.075, 0.371, 0.062, 0.004, 0.138, 0.065, 0.060, 0.045, 0.027, 0.081, 0.002]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(418.041, 198.269),\n     \"Apogee_km\": gaussian(1442.919, 81.119),\n     \"Perigee_km\": gaussian(1429.950, 70.194),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.617, 1.574),\n     \"Inclination_radians\": gaussian(1.150, 0.289),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(6.565, 11.560),\n     \"Apogee_km\": gaussian(730.929, 95.871),\n     \"Perigee_km\": gaussian(587.724, 76.583),\n     \"Type_of_Orbit\": categorical([0.871, 0.014, 0.014, 0.057, 0.014, 0.014, 0.014]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.083, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.060, 0.008, 0.406, 0.008, 0.008, 0.015, 0.008, 0.053, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.023, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(97.882, 0.989),\n     \"Inclination_radians\": gaussian(1.667, 0.256),\n     \"Users\": categorical([0.010, 0.010, 0.076, 0.010, 0.010, 0.038, 0.010, 0.067, 0.286, 0.010, 0.019, 0.010, 0.010, 0.400, 0.010, 0.010, 0.010, 0.010]),\n     \"Class_of_Orbit\": categorical([0.967, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.170, 0.045, 0.009, 0.170, 0.009, 0.027, 0.018, 0.009, 0.098, 0.009, 0.009, 0.009, 0.036, 0.250, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.027, 0.009, 0.027, 0.009])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3720.399, 1475.042),\n     \"Apogee_km\": gaussian(35772.065, 1221.690),\n     \"Perigee_km\": gaussian(35707.840, 1217.243),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1432.411, 44.374),\n     \"Inclination_radians\": gaussian(0.017, 0.071),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1740.949, 563.465),\n     \"Apogee_km\": gaussian(19903.074, 1954.566),\n     \"Perigee_km\": gaussian(19733.066, 1920.879),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(700.844, 66.480),\n     \"Inclination_radians\": gaussian(1.041, 0.105),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(120.008, 0.339),\n     \"Apogee_km\": gaussian(696.568, 9.082),\n     \"Perigee_km\": gaussian(676.811, 2.800),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.684, 0.717),\n     \"Inclination_radians\": gaussian(1.712, 0.049),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1089.366, 1152.757),\n     \"Apogee_km\": gaussian(701.406, 86.687),\n     \"Perigee_km\": gaussian(684.882, 97.735),\n     \"Type_of_Orbit\": categorical([0.904, 0.007, 0.062, 0.007, 0.007, 0.007, 0.007]),\n     \"Purpose\": categorical([0.005, 0.053, 0.005, 0.019, 0.005, 0.005, 0.019, 0.005, 0.010, 0.005, 0.010, 0.010, 0.010, 0.005, 0.092, 0.005, 0.005, 0.111, 0.005, 0.010, 0.043, 0.043, 0.010, 0.010, 0.005, 0.213, 0.019, 0.029, 0.010, 0.010, 0.005, 0.010, 0.005, 0.005, 0.014, 0.005, 0.014, 0.077, 0.005, 0.010, 0.019, 0.024, 0.010, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(98.645, 1.919),\n     \"Inclination_radians\": gaussian(1.713, 0.011),\n     \"Users\": categorical([0.006, 0.028, 0.112, 0.011, 0.006, 0.006, 0.017, 0.598, 0.067, 0.006, 0.006, 0.022, 0.022, 0.050, 0.006, 0.006, 0.011, 0.022]),\n     \"Class_of_Orbit\": categorical([0.982, 0.006, 0.006, 0.006]),\n     \"Launch_Site\": categorical([0.108, 0.113, 0.005, 0.199, 0.140, 0.005, 0.059, 0.005, 0.081, 0.005, 0.005, 0.005, 0.043, 0.048, 0.011, 0.005, 0.005, 0.011, 0.011, 0.005, 0.005, 0.054, 0.005, 0.054, 0.011])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(557.090, 625.394),\n     \"Apogee_km\": gaussian(502.452, 41.246),\n     \"Perigee_km\": gaussian(483.930, 43.056),\n     \"Type_of_Orbit\": categorical([0.741, 0.019, 0.111, 0.074, 0.019, 0.019, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.270, 0.016, 0.008, 0.123, 0.008, 0.025, 0.008, 0.074, 0.025, 0.025, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.057, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.057, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(94.548, 0.897),\n     \"Inclination_radians\": gaussian(1.274, 0.517),\n     \"Users\": categorical([0.011, 0.043, 0.330, 0.021, 0.011, 0.011, 0.032, 0.255, 0.074, 0.011, 0.011, 0.021, 0.021, 0.096, 0.021, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.963, 0.013, 0.013, 0.013]),\n     \"Launch_Site\": categorical([0.079, 0.010, 0.010, 0.030, 0.149, 0.010, 0.010, 0.010, 0.020, 0.010, 0.030, 0.228, 0.059, 0.020, 0.020, 0.010, 0.030, 0.030, 0.010, 0.010, 0.040, 0.109, 0.010, 0.040, 0.020])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(685.777, 49.011),\n     \"Apogee_km\": gaussian(777.117, 8.362),\n     \"Perigee_km\": gaussian(773.625, 11.304),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.361, 0.148),\n     \"Inclination_radians\": gaussian(1.508, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2198.418, 1746.638),\n     \"Apogee_km\": gaussian(64135.454, 76182.932),\n     \"Perigee_km\": gaussian(12836.328, 14896.968),\n     \"Type_of_Orbit\": categorical([0.037, 0.370, 0.037, 0.037, 0.444, 0.037, 0.037]),\n     \"Purpose\": categorical([0.061, 0.010, 0.010, 0.162, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.040, 0.010, 0.030, 0.010, 0.010, 0.010, 0.131, 0.010, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.010, 0.051, 0.010, 0.030, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.061, 0.010]),\n     \"Period_minutes\": gaussian(1177.541, 1116.377),\n     \"Inclination_radians\": gaussian(0.764, 0.542),\n     \"Users\": categorical([0.014, 0.056, 0.366, 0.014, 0.014, 0.014, 0.014, 0.225, 0.127, 0.014, 0.014, 0.014, 0.014, 0.042, 0.014, 0.014, 0.014, 0.014]),\n     \"Class_of_Orbit\": categorical([0.035, 0.246, 0.614, 0.105]),\n     \"Launch_Site\": categorical([0.141, 0.013, 0.013, 0.051, 0.013, 0.026, 0.115, 0.013, 0.026, 0.013, 0.013, 0.013, 0.026, 0.013, 0.013, 0.013, 0.013, 0.013, 0.077, 0.026, 0.205, 0.090, 0.013, 0.026, 0.026])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(47.611, 15.143),\n     \"Apogee_km\": gaussian(794.747, 22.947),\n     \"Perigee_km\": gaussian(777.395, 18.102),\n     \"Type_of_Orbit\": categorical([0.132, 0.026, 0.026, 0.737, 0.026, 0.026, 0.026]),\n     \"Purpose\": categorical([0.013, 0.013, 0.026, 0.351, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.065, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013]),\n     \"Period_minutes\": gaussian(100.624, 0.225),\n     \"Inclination_radians\": gaussian(0.900, 0.283),\n     \"Users\": categorical([0.020, 0.102, 0.020, 0.020, 0.020, 0.020, 0.020, 0.041, 0.551, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Class_of_Orbit\": categorical([0.914, 0.029, 0.029, 0.029]),\n     \"Launch_Site\": categorical([0.018, 0.018, 0.018, 0.107, 0.018, 0.036, 0.018, 0.018, 0.018, 0.018, 0.018, 0.464, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018])\n    };\n  } else if (cluster_id == 11) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3765.617, 5131.809),\n     \"Apogee_km\": gaussian(965.727, 267.895),\n     \"Perigee_km\": gaussian(787.827, 291.746),\n     \"Type_of_Orbit\": categorical([0.370, 0.014, 0.041, 0.521, 0.014, 0.027, 0.014]),\n     \"Purpose\": categorical([0.007, 0.007, 0.007, 0.043, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.028, 0.007, 0.128, 0.014, 0.078, 0.113, 0.092, 0.007, 0.007, 0.078, 0.014, 0.035, 0.007, 0.050, 0.007, 0.014, 0.007, 0.007, 0.028, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.021, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.021]),\n     \"Period_minutes\": gaussian(102.434, 4.955),\n     \"Inclination_radians\": gaussian(1.220, 0.499),\n     \"Users\": categorical([0.009, 0.044, 0.469, 0.009, 0.009, 0.018, 0.009, 0.212, 0.044, 0.009, 0.009, 0.018, 0.035, 0.071, 0.009, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.939, 0.010, 0.040, 0.010]),\n     \"Launch_Site\": categorical([0.083, 0.100, 0.017, 0.242, 0.058, 0.017, 0.033, 0.008, 0.042, 0.008, 0.017, 0.008, 0.017, 0.008, 0.008, 0.017, 0.008, 0.008, 0.008, 0.025, 0.125, 0.108, 0.008, 0.008, 0.017])\n    };\n  } else if (cluster_id == 12) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2335.636, 3626.592),\n     \"Apogee_km\": gaussian(226287.328, 389752.110),\n     \"Perigee_km\": gaussian(14845.123, 32310.672),\n     \"Type_of_Orbit\": categorical([0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.250]),\n     \"Purpose\": categorical([0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.042, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021]),\n     \"Period_minutes\": gaussian(8266.850, 17949.468),\n     \"Inclination_radians\": gaussian(10.760, 18.134),\n     \"Users\": categorical([0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.100, 0.100, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050, 0.050]),\n     \"Class_of_Orbit\": categorical([0.167, 0.333, 0.333, 0.167]),\n     \"Launch_Site\": categorical([0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.074, 0.037, 0.037, 0.037, 0.037])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.911, 0.057, 0.029, 0.003]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.023)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.710, 0.179)\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Eccentricity\": gaussian(0.241, 0.330)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.371, 0.053, 0.146, 0.062, 0.003, 0.180, 0.076, 0.042, 0.063, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3771.730, 1504.893),\n     \"Apogee_km\": gaussian(35803.735, 1205.485),\n     \"Perigee_km\": gaussian(35759.440, 1185.661),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1436.697, 46.334),\n     \"Inclination_radians\": gaussian(0.017, 0.068),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(35.958, 32.169),\n     \"Apogee_km\": gaussian(806.038, 58.605),\n     \"Perigee_km\": gaussian(664.932, 151.216),\n     \"Type_of_Orbit\": categorical([0.224, 0.020, 0.020, 0.673, 0.020, 0.020, 0.020]),\n     \"Purpose\": categorical([0.009, 0.009, 0.019, 0.278, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.046, 0.009, 0.167, 0.009, 0.009, 0.056, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.019, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.028]),\n     \"Period_minutes\": gaussian(99.510, 1.471),\n     \"Inclination_radians\": gaussian(1.183, 0.577),\n     \"Users\": categorical([0.013, 0.075, 0.100, 0.013, 0.013, 0.050, 0.013, 0.100, 0.425, 0.013, 0.013, 0.013, 0.013, 0.100, 0.013, 0.013, 0.013, 0.013]),\n     \"Class_of_Orbit\": categorical([0.955, 0.015, 0.015, 0.015]),\n     \"Launch_Site\": categorical([0.046, 0.011, 0.011, 0.310, 0.011, 0.046, 0.011, 0.011, 0.046, 0.011, 0.011, 0.299, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.034, 0.011, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(570.935, 205.822),\n     \"Apogee_km\": gaussian(1141.408, 337.801),\n     \"Perigee_km\": gaussian(1096.269, 332.754),\n     \"Type_of_Orbit\": categorical([0.017, 0.006, 0.424, 0.535, 0.006, 0.006, 0.006]),\n     \"Purpose\": categorical([0.005, 0.005, 0.005, 0.718, 0.005, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.005, 0.005, 0.005, 0.014, 0.005, 0.051, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.009, 0.005, 0.005, 0.009, 0.005, 0.005, 0.005, 0.005, 0.005]),\n     \"Period_minutes\": gaussian(108.076, 7.068),\n     \"Inclination_radians\": gaussian(1.321, 0.278),\n     \"Users\": categorical([0.011, 0.005, 0.197, 0.005, 0.005, 0.005, 0.005, 0.011, 0.261, 0.005, 0.005, 0.005, 0.383, 0.032, 0.005, 0.005, 0.048, 0.005]),\n     \"Class_of_Orbit\": categorical([0.977, 0.006, 0.006, 0.011]),\n     \"Launch_Site\": categorical([0.292, 0.005, 0.005, 0.256, 0.056, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.005, 0.041, 0.251, 0.005, 0.005, 0.005])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1721.973, 572.807),\n     \"Apogee_km\": gaussian(19887.269, 1995.247),\n     \"Perigee_km\": gaussian(19821.147, 1974.990),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(706.918, 66.400),\n     \"Inclination_radians\": gaussian(1.039, 0.101),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.922, 0.694),\n     \"Apogee_km\": gaussian(694.706, 8.595),\n     \"Perigee_km\": gaussian(675.558, 2.448),\n     \"Type_of_Orbit\": categorical([0.091, 0.091, 0.455, 0.091, 0.091, 0.091, 0.091]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.100, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.489, 0.565),\n     \"Inclination_radians\": gaussian(1.711, 0.061),\n     \"Users\": categorical([0.045, 0.045, 0.227, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045, 0.045]),\n     \"Class_of_Orbit\": categorical([0.625, 0.125, 0.125, 0.125]),\n     \"Launch_Site\": categorical([0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.172, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034, 0.034])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(680.367, 1044.175),\n     \"Apogee_km\": gaussian(711.308, 77.311),\n     \"Perigee_km\": gaussian(672.031, 83.433),\n     \"Type_of_Orbit\": categorical([0.927, 0.005, 0.047, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.004, 0.043, 0.004, 0.039, 0.004, 0.027, 0.016, 0.004, 0.008, 0.004, 0.008, 0.008, 0.023, 0.004, 0.203, 0.004, 0.004, 0.090, 0.004, 0.023, 0.035, 0.027, 0.004, 0.008, 0.004, 0.160, 0.016, 0.023, 0.008, 0.008, 0.004, 0.008, 0.004, 0.004, 0.012, 0.004, 0.012, 0.063, 0.004, 0.008, 0.020, 0.020, 0.004, 0.012, 0.004, 0.004]),\n     \"Period_minutes\": gaussian(98.568, 1.639),\n     \"Inclination_radians\": gaussian(1.712, 0.010),\n     \"Users\": categorical([0.004, 0.022, 0.083, 0.009, 0.004, 0.004, 0.009, 0.465, 0.145, 0.004, 0.009, 0.009, 0.013, 0.184, 0.004, 0.004, 0.009, 0.018]),\n     \"Class_of_Orbit\": categorical([0.986, 0.005, 0.005, 0.005]),\n     \"Launch_Site\": categorical([0.128, 0.098, 0.004, 0.145, 0.106, 0.004, 0.051, 0.004, 0.102, 0.004, 0.004, 0.004, 0.043, 0.153, 0.004, 0.004, 0.004, 0.004, 0.009, 0.004, 0.004, 0.051, 0.004, 0.051, 0.009])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(688.464, 699.507),\n     \"Apogee_km\": gaussian(511.925, 46.077),\n     \"Perigee_km\": gaussian(496.471, 47.750),\n     \"Type_of_Orbit\": categorical([0.762, 0.016, 0.095, 0.079, 0.016, 0.016, 0.016]),\n     \"Purpose\": categorical([0.007, 0.007, 0.007, 0.007, 0.007, 0.015, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.274, 0.015, 0.007, 0.111, 0.007, 0.015, 0.007, 0.081, 0.030, 0.037, 0.007, 0.044, 0.007, 0.007, 0.007, 0.007, 0.052, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.052, 0.015, 0.007, 0.007, 0.007, 0.015, 0.007, 0.007, 0.007]),\n     \"Period_minutes\": gaussian(94.712, 0.961),\n     \"Inclination_radians\": gaussian(1.299, 0.525),\n     \"Users\": categorical([0.009, 0.056, 0.299, 0.019, 0.009, 0.009, 0.028, 0.262, 0.075, 0.009, 0.009, 0.028, 0.028, 0.112, 0.019, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.968, 0.011, 0.011, 0.011]),\n     \"Launch_Site\": categorical([0.096, 0.018, 0.009, 0.035, 0.140, 0.009, 0.009, 0.009, 0.026, 0.009, 0.026, 0.202, 0.061, 0.018, 0.026, 0.009, 0.026, 0.035, 0.009, 0.009, 0.053, 0.105, 0.009, 0.035, 0.018])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2122.798, 1754.275),\n     \"Apogee_km\": gaussian(49647.375, 39086.619),\n     \"Perigee_km\": gaussian(12202.731, 14272.620),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.011, 0.011, 0.158, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.042, 0.011, 0.032, 0.011, 0.011, 0.011, 0.126, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.021, 0.011, 0.011, 0.011, 0.011, 0.053, 0.011, 0.032, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.063, 0.011]),\n     \"Period_minutes\": gaussian(1215.411, 1156.518),\n     \"Inclination_radians\": gaussian(0.774, 0.542),\n     \"Users\": categorical([0.015, 0.060, 0.388, 0.015, 0.015, 0.015, 0.015, 0.209, 0.119, 0.015, 0.015, 0.015, 0.015, 0.030, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.038, 0.245, 0.623, 0.094]),\n     \"Launch_Site\": categorical([0.122, 0.014, 0.014, 0.054, 0.014, 0.027, 0.108, 0.014, 0.027, 0.014, 0.014, 0.014, 0.027, 0.014, 0.014, 0.014, 0.014, 0.014, 0.081, 0.014, 0.216, 0.095, 0.014, 0.027, 0.027])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(5359.513, 5671.284),\n     \"Apogee_km\": gaussian(964.160, 293.761),\n     \"Perigee_km\": gaussian(759.251, 331.282),\n     \"Type_of_Orbit\": categorical([0.500, 0.019, 0.019, 0.389, 0.019, 0.037, 0.019]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.134, 0.017, 0.008, 0.134, 0.109, 0.017, 0.008, 0.092, 0.017, 0.025, 0.008, 0.059, 0.008, 0.017, 0.008, 0.008, 0.034, 0.008, 0.017, 0.008, 0.008, 0.008, 0.008, 0.025, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.017, 0.008]),\n     \"Period_minutes\": gaussian(102.524, 5.429),\n     \"Inclination_radians\": gaussian(1.242, 0.481),\n     \"Users\": categorical([0.011, 0.022, 0.462, 0.011, 0.011, 0.022, 0.022, 0.242, 0.011, 0.011, 0.011, 0.033, 0.033, 0.055, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.922, 0.013, 0.052, 0.013]),\n     \"Launch_Site\": categorical([0.082, 0.133, 0.020, 0.276, 0.051, 0.020, 0.041, 0.010, 0.020, 0.010, 0.020, 0.010, 0.020, 0.010, 0.010, 0.020, 0.010, 0.010, 0.010, 0.031, 0.112, 0.031, 0.010, 0.010, 0.020])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2609.804, 2507.260),\n     \"Apogee_km\": gaussian(270727.486, 218320.134),\n     \"Perigee_km\": gaussian(13068.992, 20115.907),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(4173.378, 10127.396),\n     \"Inclination_radians\": gaussian(5.241, 11.577),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.909, 0.060, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.028, 0.024)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.700, 0.184)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([0.999, 0.001]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Country_of_Operator\": categorical([0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.025, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013, 0.013])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n",
    "/* Views */\n\nfunction view_1() {\n  let cluster_id = categorical([0.214, 0.085, 0.371, 0.060, 0.062, 0.004, 0.043, 0.070, 0.087, 0.004]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Launch_Mass_kg\": gaussian(768.992, 953.917),\n     \"Apogee_km\": gaussian(673.947, 109.662),\n     \"Perigee_km\": gaussian(648.123, 101.121),\n     \"Type_of_Orbit\": categorical([0.945, 0.005, 0.032, 0.005, 0.005, 0.005, 0.005]),\n     \"Purpose\": categorical([0.003, 0.030, 0.003, 0.034, 0.003, 0.027, 0.014, 0.003, 0.007, 0.003, 0.007, 0.007, 0.020, 0.003, 0.203, 0.003, 0.003, 0.125, 0.003, 0.020, 0.030, 0.047, 0.007, 0.007, 0.003, 0.159, 0.014, 0.020, 0.007, 0.007, 0.024, 0.007, 0.003, 0.003, 0.010, 0.003, 0.010, 0.054, 0.003, 0.007, 0.014, 0.017, 0.007, 0.007, 0.003, 0.003]),\n     \"Period_minutes\": gaussian(97.868, 2.113),\n     \"Inclination_radians\": gaussian(1.710, 0.010),\n     \"Users\": categorical([0.004, 0.011, 0.119, 0.007, 0.004, 0.004, 0.019, 0.463, 0.131, 0.004, 0.007, 0.019, 0.019, 0.160, 0.004, 0.004, 0.007, 0.015]),\n     \"Class_of_Orbit\": categorical([0.988, 0.004, 0.004, 0.004]),\n     \"Launch_Site\": categorical([0.116, 0.087, 0.004, 0.145, 0.145, 0.004, 0.044, 0.004, 0.091, 0.004, 0.004, 0.004, 0.058, 0.131, 0.007, 0.004, 0.004, 0.015, 0.007, 0.004, 0.004, 0.058, 0.004, 0.047, 0.007])\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Launch_Mass_kg\": gaussian(37.469, 42.319),\n     \"Apogee_km\": gaussian(728.222, 165.552),\n     \"Perigee_km\": gaussian(607.352, 156.271),\n     \"Type_of_Orbit\": categorical([0.461, 0.013, 0.013, 0.474, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.007, 0.007, 0.014, 0.214, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.034, 0.007, 0.317, 0.021, 0.007, 0.055, 0.007, 0.028, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.014, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007, 0.021]),\n     \"Period_minutes\": gaussian(98.050, 2.645),\n     \"Inclination_radians\": gaussian(1.049, 0.501),\n     \"Users\": categorical([0.009, 0.068, 0.179, 0.017, 0.009, 0.034, 0.009, 0.111, 0.325, 0.009, 0.009, 0.017, 0.009, 0.154, 0.017, 0.009, 0.009, 0.009]),\n     \"Class_of_Orbit\": categorical([0.971, 0.010, 0.010, 0.010]),\n     \"Launch_Site\": categorical([0.097, 0.008, 0.008, 0.210, 0.008, 0.040, 0.024, 0.008, 0.032, 0.008, 0.008, 0.371, 0.008, 0.008, 0.008, 0.008, 0.024, 0.008, 0.008, 0.016, 0.040, 0.016, 0.008, 0.016, 0.008])\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3744.093, 1496.112),\n     \"Apogee_km\": gaussian(35737.646, 1182.110),\n     \"Perigee_km\": gaussian(35739.956, 1234.135),\n     \"Type_of_Orbit\": categorical([0.250, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]),\n     \"Purpose\": categorical([0.013, 0.017, 0.002, 0.816, 0.004, 0.002, 0.002, 0.004, 0.002, 0.002, 0.002, 0.002, 0.002, 0.004, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.006, 0.002, 0.006, 0.004, 0.002, 0.004, 0.002, 0.015, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.013, 0.002]),\n     \"Period_minutes\": gaussian(1433.384, 46.062),\n     \"Inclination_radians\": gaussian(0.016, 0.073),\n     \"Users\": categorical([0.002, 0.011, 0.169, 0.002, 0.007, 0.002, 0.024, 0.122, 0.616, 0.004, 0.002, 0.004, 0.009, 0.004, 0.002, 0.002, 0.009, 0.007]),\n     \"Class_of_Orbit\": categorical([0.002, 0.993, 0.002, 0.002]),\n     \"Launch_Site\": categorical([0.231, 0.002, 0.002, 0.002, 0.002, 0.002, 0.345, 0.011, 0.009, 0.004, 0.002, 0.002, 0.013, 0.002, 0.002, 0.002, 0.002, 0.002, 0.081, 0.002, 0.207, 0.002, 0.059, 0.007, 0.002])\n    };\n  } else if (cluster_id == 4) {\n    return {\n     \"Launch_Mass_kg\": gaussian(684.643, 48.731),\n     \"Apogee_km\": gaussian(776.810, 8.576),\n     \"Perigee_km\": gaussian(773.413, 11.273),\n     \"Type_of_Orbit\": categorical([0.013, 0.013, 0.922, 0.013, 0.013, 0.013, 0.013]),\n     \"Purpose\": categorical([0.009, 0.009, 0.009, 0.612, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009]),\n     \"Period_minutes\": gaussian(100.360, 0.155),\n     \"Inclination_radians\": gaussian(1.510, 0.021),\n     \"Users\": categorical([0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.807, 0.011, 0.011, 0.011, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.959, 0.014, 0.014, 0.014]),\n     \"Launch_Site\": categorical([0.158, 0.011, 0.011, 0.495, 0.095, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.032, 0.011, 0.011, 0.011])\n    };\n  } else if (cluster_id == 5) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1755.758, 575.128),\n     \"Apogee_km\": gaussian(19802.467, 1891.587),\n     \"Perigee_km\": gaussian(19703.201, 1892.479),\n     \"Type_of_Orbit\": categorical([0.143, 0.143, 0.143, 0.143, 0.143, 0.143, 0.143]),\n     \"Purpose\": categorical([0.619, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(707.250, 66.979),\n     \"Inclination_radians\": gaussian(1.036, 0.102),\n     \"Users\": categorical([0.011, 0.011, 0.067, 0.011, 0.011, 0.011, 0.711, 0.011, 0.044, 0.011, 0.011, 0.011, 0.011, 0.011, 0.011, 0.022, 0.011, 0.011]),\n     \"Class_of_Orbit\": categorical([0.013, 0.013, 0.013, 0.961]),\n     \"Launch_Site\": categorical([0.289, 0.010, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.062, 0.010, 0.340, 0.052, 0.010, 0.010, 0.010])\n    };\n  } else if (cluster_id == 6) {\n    return {\n     \"Launch_Mass_kg\": gaussian(119.937, 0.478),\n     \"Apogee_km\": gaussian(695.685, 8.896),\n     \"Perigee_km\": gaussian(676.799, 2.955),\n     \"Type_of_Orbit\": categorical([0.167, 0.083, 0.417, 0.083, 0.083, 0.083, 0.083]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.098, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(98.643, 0.749),\n     \"Inclination_radians\": gaussian(1.712, 0.056),\n     \"Users\": categorical([0.043, 0.043, 0.217, 0.043, 0.043, 0.043, 0.043, 0.087, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.667, 0.111, 0.111, 0.111]),\n     \"Launch_Site\": categorical([0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.167, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.033, 0.033, 0.033])\n    };\n  } else if (cluster_id == 7) {\n    return {\n     \"Launch_Mass_kg\": gaussian(1995.244, 1718.884),\n     \"Apogee_km\": gaussian(47990.551, 39904.715),\n     \"Perigee_km\": gaussian(12109.277, 14386.213),\n     \"Type_of_Orbit\": categorical([0.038, 0.346, 0.038, 0.038, 0.462, 0.038, 0.038]),\n     \"Purpose\": categorical([0.063, 0.010, 0.010, 0.156, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.021, 0.010, 0.042, 0.010, 0.031, 0.010, 0.010, 0.010, 0.125, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.021, 0.010, 0.010, 0.010, 0.010, 0.052, 0.010, 0.031, 0.010, 0.010, 0.010, 0.010, 0.010, 0.010, 0.063, 0.010]),\n     \"Period_minutes\": gaussian(1122.947, 1137.759),\n     \"Inclination_radians\": gaussian(0.766, 0.529),\n     \"Users\": categorical([0.015, 0.059, 0.382, 0.015, 0.015, 0.015, 0.015, 0.206, 0.118, 0.015, 0.015, 0.015, 0.015, 0.044, 0.015, 0.015, 0.015, 0.015]),\n     \"Class_of_Orbit\": categorical([0.037, 0.241, 0.611, 0.111]),\n     \"Launch_Site\": categorical([0.133, 0.013, 0.013, 0.053, 0.013, 0.027, 0.107, 0.013, 0.027, 0.013, 0.013, 0.013, 0.027, 0.013, 0.013, 0.013, 0.013, 0.013, 0.080, 0.013, 0.213, 0.093, 0.013, 0.027, 0.027])\n    };\n  } else if (cluster_id == 8) {\n    return {\n     \"Launch_Mass_kg\": gaussian(412.330, 205.355),\n     \"Apogee_km\": gaussian(1448.457, 83.123),\n     \"Perigee_km\": gaussian(1431.614, 71.918),\n     \"Type_of_Orbit\": categorical([0.024, 0.012, 0.012, 0.918, 0.012, 0.012, 0.012]),\n     \"Purpose\": categorical([0.008, 0.008, 0.008, 0.617, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.016, 0.008, 0.008, 0.016, 0.008, 0.008, 0.008, 0.008, 0.008]),\n     \"Period_minutes\": gaussian(114.683, 1.442),\n     \"Inclination_radians\": gaussian(1.159, 0.296),\n     \"Users\": categorical([0.020, 0.010, 0.260, 0.010, 0.010, 0.010, 0.010, 0.020, 0.450, 0.010, 0.010, 0.010, 0.010, 0.040, 0.010, 0.010, 0.090, 0.010]),\n     \"Class_of_Orbit\": categorical([0.965, 0.012, 0.012, 0.012]),\n     \"Launch_Site\": categorical([0.355, 0.009, 0.009, 0.028, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.009, 0.075, 0.346, 0.009, 0.009, 0.009])\n    };\n  } else if (cluster_id == 9) {\n    return {\n     \"Launch_Mass_kg\": gaussian(3655.566, 4853.356),\n     \"Apogee_km\": gaussian(924.796, 316.868),\n     \"Perigee_km\": gaussian(742.581, 314.016),\n     \"Type_of_Orbit\": categorical([0.311, 0.014, 0.135, 0.486, 0.014, 0.027, 0.014]),\n     \"Purpose\": categorical([0.007, 0.020, 0.007, 0.041, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.020, 0.007, 0.116, 0.007, 0.075, 0.095, 0.088, 0.014, 0.007, 0.095, 0.027, 0.048, 0.007, 0.041, 0.007, 0.014, 0.007, 0.007, 0.027, 0.007, 0.014, 0.007, 0.007, 0.007, 0.007, 0.054, 0.007, 0.007, 0.007, 0.007, 0.007, 0.007, 0.014, 0.007]),\n     \"Period_minutes\": gaussian(101.590, 5.783),\n     \"Inclination_radians\": gaussian(1.269, 0.484),\n     \"Users\": categorical([0.008, 0.059, 0.487, 0.008, 0.008, 0.017, 0.008, 0.210, 0.050, 0.008, 0.008, 0.008, 0.034, 0.050, 0.008, 0.008, 0.008, 0.008]),\n     \"Class_of_Orbit\": categorical([0.943, 0.010, 0.038, 0.010]),\n     \"Launch_Site\": categorical([0.095, 0.103, 0.016, 0.206, 0.056, 0.008, 0.016, 0.008, 0.024, 0.008, 0.032, 0.024, 0.016, 0.016, 0.016, 0.016, 0.008, 0.008, 0.008, 0.016, 0.111, 0.143, 0.008, 0.016, 0.024])\n    };\n  } else if (cluster_id == 10) {\n    return {\n     \"Launch_Mass_kg\": gaussian(2575.186, 2293.161),\n     \"Apogee_km\": gaussian(274731.788, 204166.610),\n     \"Perigee_km\": gaussian(14701.666, 21641.778),\n     \"Type_of_Orbit\": categorical([0.111, 0.222, 0.111, 0.111, 0.111, 0.111, 0.222]),\n     \"Purpose\": categorical([0.020, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.039, 0.020, 0.020, 0.059, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020, 0.020]),\n     \"Period_minutes\": gaussian(4268.046, 8877.202),\n     \"Inclination_radians\": gaussian(4.863, 10.986),\n     \"Users\": categorical([0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.174, 0.130, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043, 0.043]),\n     \"Class_of_Orbit\": categorical([0.111, 0.333, 0.444, 0.111]),\n     \"Launch_Site\": categorical([0.067, 0.033, 0.033, 0.033, 0.033, 0.033, 0.100, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.033, 0.067, 0.067, 0.033, 0.033, 0.033, 0.033])\n    };\n  }\n}\n\nfunction view_2() {\n  let cluster_id = categorical([0.915, 0.054, 0.031]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Eccentricity\": gaussian(0.001, 0.004)\n    };\n  } else if (cluster_id == 2) {\n    return {\n     \"Eccentricity\": gaussian(0.031, 0.025)\n    };\n  } else if (cluster_id == 3) {\n    return {\n     \"Eccentricity\": gaussian(0.697, 0.182)\n    };\n  }\n}\n\nfunction view_3() {\n  let cluster_id = categorical([1.000]);\n\n  if (cluster_id == 1) {\n    return {\n     \"Country_of_Operator\": categorical([0.002, 0.003, 0.002, 0.005, 0.006, 0.002, 0.002, 0.015, 0.002, 0.002, 0.021, 0.002, 0.002, 0.002, 0.005, 0.002, 0.002, 0.008, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.018, 0.002, 0.006, 0.045, 0.005, 0.002, 0.002, 0.002, 0.004, 0.035, 0.003, 0.005, 0.002, 0.002, 0.002, 0.095, 0.010, 0.010, 0.002, 0.002, 0.002, 0.095, 0.004, 0.002, 0.007, 0.002, 0.002, 0.003, 0.003, 0.002, 0.014, 0.002, 0.011, 0.004, 0.011, 0.018, 0.004, 0.391, 0.002, 0.004, 0.002, 0.002, 0.004, 0.002, 0.026, 0.002, 0.002, 0.002, 0.002, 0.002, 0.006, 0.009, 0.009])\n    };\n  }\n}\n\n/* Model */\n\nfunction model() {\n  let row = {...view_1(), ...view_2(), ...view_3()};\n\n  /*\n   * map_categorical() maps integer values in categorical columns\n   * to actual category values for each categorical column.\n   */\n  return map_categorical(row);\n}\n"
  ]
];