// Compiled by ClojureScript 1.10.866 {:static-fns true, :optimize-constants true, :target :nodejs, :nodejs-rt false, :optimizations :advanced}
goog.provide('inferenceql.viz.panels.override.db');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.spec.alpha');
inferenceql.viz.panels.override.db.default_db = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$override_DASH_panel,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$column_DASH_overrides,null,cljs.core.cst$kw$column_DASH_override_DASH_fns,null], null)], null);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_override_DASH_panel,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_overrides,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_override_DASH_fns], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_overrides,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_override_DASH_fns], null),null,null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__27142){
return cljs.core.map_QMARK_(G__27142);
}),(function (G__27142){
return cljs.core.contains_QMARK_(G__27142,cljs.core.cst$kw$column_DASH_overrides);
}),(function (G__27142){
return cljs.core.contains_QMARK_(G__27142,cljs.core.cst$kw$column_DASH_override_DASH_fns);
})], null),(function (G__27142){
return ((cljs.core.map_QMARK_(G__27142)) && (((cljs.core.contains_QMARK_(G__27142,cljs.core.cst$kw$column_DASH_overrides)) && (cljs.core.contains_QMARK_(G__27142,cljs.core.cst$kw$column_DASH_override_DASH_fns)))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_overrides,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_override_DASH_fns], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$column_DASH_overrides,cljs.core.cst$kw$column_DASH_override_DASH_fns], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$column_DASH_overrides)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$column_DASH_override_DASH_fns))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj,cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_,cljs.core.fn_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_overrides,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__27143){
return cljs.core.map_QMARK_(G__27143);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__480__auto__,v__481__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__481__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_text)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_override_DASH_fns,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__27144){
return cljs.core.map_QMARK_(G__27144);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__480__auto__,v__481__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__481__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_column_DASH_name,cljs.core.cst$kw$inferenceql$viz$panels$override$db_SLASH_function_DASH_obj)], null),null),null));
