// Compiled by ClojureScript 1.10.866 {:static-fns true, :optimize-constants true, :target :nodejs, :nodejs-rt false, :optimizations :advanced}
goog.provide('inferenceql.viz.panels.control.db');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.spec.alpha');
inferenceql.viz.panels.control.db.default_db = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$control_DASH_panel,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$confidence_DASH_threshold,0.9,cljs.core.cst$kw$reagent_DASH_forms,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$confidence_DASH_mode,cljs.core.cst$kw$none], null),cljs.core.cst$kw$query_DASH_string,"",cljs.core.cst$kw$selection_DASH_color,cljs.core.cst$kw$blue], null)], null);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_control_DASH_panel,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_threshold,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_reagent_DASH_forms,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_query_DASH_string,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_selection_DASH_color], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_threshold,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_reagent_DASH_forms,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_query_DASH_string,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_selection_DASH_color], null),null,null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__27147){
return cljs.core.map_QMARK_(G__27147);
}),(function (G__27147){
return cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$confidence_DASH_threshold);
}),(function (G__27147){
return cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$reagent_DASH_forms);
}),(function (G__27147){
return cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$query_DASH_string);
}),(function (G__27147){
return cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$selection_DASH_color);
})], null),(function (G__27147){
return ((cljs.core.map_QMARK_(G__27147)) && (((cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$confidence_DASH_threshold)) && (((cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$reagent_DASH_forms)) && (((cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$query_DASH_string)) && (cljs.core.contains_QMARK_(G__27147,cljs.core.cst$kw$selection_DASH_color)))))))));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_threshold,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_reagent_DASH_forms,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_query_DASH_string,cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_selection_DASH_color], null),null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$confidence_DASH_threshold,cljs.core.cst$kw$reagent_DASH_forms,cljs.core.cst$kw$query_DASH_string,cljs.core.cst$kw$selection_DASH_color], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$confidence_DASH_threshold)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$reagent_DASH_forms)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$query_DASH_string)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$selection_DASH_color))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_threshold,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_reagent_DASH_forms,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$req_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_mode], null)),cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_mode], null),null,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__27148){
return cljs.core.map_QMARK_(G__27148);
}),(function (G__27148){
return cljs.core.contains_QMARK_(G__27148,cljs.core.cst$kw$confidence_DASH_mode);
})], null),(function (G__27148){
return ((cljs.core.map_QMARK_(G__27148)) && (cljs.core.contains_QMARK_(G__27148,cljs.core.cst$kw$confidence_DASH_mode)));
}),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_mode], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$confidence_DASH_mode], null),cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_)),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.cst$sym$_PERCENT_,cljs.core.cst$kw$confidence_DASH_mode))], null),null])));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_confidence_DASH_mode,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.keyword_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_selection_DASH_color,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.keyword_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$inferenceql$viz$panels$control$db_SLASH_query_DASH_string,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
inferenceql.viz.panels.control.db.selection_color = (function inferenceql$viz$panels$control$db$selection_color(db){
return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(db,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$control_DASH_panel,cljs.core.cst$kw$selection_DASH_color], null));
});
