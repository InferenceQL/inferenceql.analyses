["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Window",["^ ","~$prototype",["^ ","~$setTimeout",["^ "]]]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.viz.panels.table.views-simple","~:imports",null,"~:requires",["^ ","~$reagent","~$reagent.core","~$cljs-bean.core","^?","~$inferenceql.viz.panels.table.util","^@","^>","^>","~$yarn-handsontable","~$handsontable$default","~$inferenceql.viz.panels.table.views-base","^C","^B","^B","~$inferenceql.viz.panels.table.handsontable","^D","~$medley.core","^E"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$->clj","^?","~$default-hot-settings","^D","~$column-settings","^@","~$handsontable-base","^C","~$filter-kv","^E"],"~:defs",["^ ","~$handsontable-reagent",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","~:line",11,"~:column",7,"~:end-line",11,"~:end-column",27,"~:arglists",["~#list",["~$quote",["^W",[["~$attributes","~$props"]]]]],"~:doc","A Reagent component for Handsontable that uses an atom as a datastore for the Handsontable\n  instance."],"^9","~$inferenceql.viz.panels.table.views-simple/handsontable-reagent","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^U",27,"~:method-params",["^W",[["^Y","^Z"]]],"~:protocol-impl",null,"~:arglists-meta",["^W",[null,null]],"^S",1,"~:variadic?",false,"^R",11,"~:ret-tag","~$function","^T",11,"~:max-fixed-arity",2,"~:fn-var",true,"^V",["^W",["^X",["^W",[["^Y","^Z"]]]]],"^[","A Reagent component for Handsontable that uses an atom as a datastore for the Handsontable\n  instance."],"~$handsontable-reagent-observable",["^ ","^O",null,"^P",["^ ","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^R",20,"^S",7,"^T",20,"^U",38,"^V",["^W",["^X",["^W",[["^Y","^Z"]]]]],"^[","A Reagent component for Handsontable that includes fixes for glitches with scrolling\n  and refreshing when used in Observable notebooks. This uses an atom as a datastore for the\n  Handsontable instance."],"^9","~$inferenceql.viz.panels.table.views-simple/handsontable-reagent-observable","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^U",38,"^11",["^W",[["^Y","^Z"]]],"^12",null,"^13",["^W",[null,null]],"^S",1,"^14",false,"^R",20,"^15","^16","^T",20,"^17",2,"^18",true,"^V",["^W",["^X",["^W",[["^Y","^Z"]]]]],"^[","A Reagent component for Handsontable that includes fixes for glitches with scrolling\n  and refreshing when used in Observable notebooks. This uses an atom as a datastore for the\n  Handsontable instance."],"~$simple-hot-settings",["^ ","^9","~$inferenceql.viz.panels.table.views-simple/simple-hot-settings","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^R",42,"^S",1,"^T",42,"^U",25,"^P",["^ ","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^R",42,"^S",6,"^T",42,"^U",25],"~:tag",["^8",["~$clj","~$any"]]],"~$handsontable",["^ ","^O",null,"^P",["^ ","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^R",48,"^S",7,"^T",48,"^U",19,"^V",["^W",["^X",["^W",[["~$attributues","~$data","~$options","~$observable-fixes"]]]]],"^[","A reagent component that displays `data` in handsontable.\n  It properly transforms `data` and `options` and delivers them as `props` to the base\n  handsontable component.\n\n  `attributes` - DOM node attributes to apply\n  `data` - Data to display in the table.\n  `options` - A map which contains various options about how the table is displayed. All keys\n    are optional. Some keys simply map to the same setting in Handsontable library. See the official\n    Handsontable documentation for more details on those options.\n      cols - Which columns from `data` to display.\n        Default will show all columns (keys) from the first row of data.\n      height - Handsontable height setting. If not supplied, table while take on a minimum required\n        height to show all rows up to 15, after which it will take up a fixed height of 500px.\n      width - Handsontable width setting.\n      v-scroll - Set to false so the full table is drawn with no scrollbars.\n      cells - Handsontable cells setting. Can be used a variety of ways including cell highlighting.\n      col-widths - Handsontable colWidths setting.\n      on-click - Handsontable click handler.\n      current-row-class - CSS class to apply to currently selected row in Handsontable.\n  `observable-fixes` - (boolean) Enable certain settings and fixes for Observable notebooks."],"^9","~$inferenceql.viz.panels.table.views-simple/handsontable","^Q","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/panels/table/views_simple.cljs","^U",19,"^11",["^W",[["^1A","^1B","^1C","^1D"]]],"^12",null,"^13",["^W",[null,null]],"^S",1,"^14",false,"^R",48,"^15",["^8",["~$cljs.core/IVector","~$clj-nil"]],"^T",48,"^17",4,"^18",true,"^V",["^W",["^X",["^W",[["^1A","^1B","^1C","^1D"]]]]],"^[","A reagent component that displays `data` in handsontable.\n  It properly transforms `data` and `options` and delivers them as `props` to the base\n  handsontable component.\n\n  `attributes` - DOM node attributes to apply\n  `data` - Data to display in the table.\n  `options` - A map which contains various options about how the table is displayed. All keys\n    are optional. Some keys simply map to the same setting in Handsontable library. See the official\n    Handsontable documentation for more details on those options.\n      cols - Which columns from `data` to display.\n        Default will show all columns (keys) from the first row of data.\n      height - Handsontable height setting. If not supplied, table while take on a minimum required\n        height to show all rows up to 15, after which it will take up a fixed height of 500px.\n      width - Handsontable width setting.\n      v-scroll - Set to false so the full table is drawn with no scrollbars.\n      cells - Handsontable cells setting. Can be used a variety of ways including cell highlighting.\n      col-widths - Handsontable colWidths setting.\n      on-click - Handsontable click handler.\n      current-row-class - CSS class to apply to currently selected row in Handsontable.\n  `observable-fixes` - (boolean) Enable certain settings and fixes for Observable notebooks."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^=","^>","^>","^>"],"~:cljs.analyzer/constants",["^ ","~:seen",["^8",["~:current-row-class","~:else","~:filters","~:columns","~:hooks","~:afterSelection","~:component-did-mount","~:width","~:settings","~:col-widths","~:on-click","~:cols","~:reagent-render","~:dropdownMenu","~:afterRender","~:currentRowClassName","~:colWidths","~:cells","~:v-scroll","~:colHeaders","~:height","~:data"]],"~:order",["^1R","^1X","^1P","^1Z","^1T","^23","^1O","^1Y","^1N","^24","^1S","^1W","^22","^21","^1U","^1V","^1L","^1M","^25","^20","^1Q","^1["]],"^[","Reagent component for Handsontable that can be used independently from iql.viz app."]