["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$console","~$re-frame.loggers"],"~:excludes",["~#set",[]],"~:name","~$inferenceql.viz.events.interceptors","~:imports",null,"~:requires",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$re-frame.interceptor","^=","~$expound.alpha","^>","~$rf","~$re-frame.core","~$inferenceql.viz.config","^A","~$db","~$inferenceql.viz.db","~$config","^A","^4","^4","~$s","^<","~$expound","^>","^<","^<","^C","^C","^@","^@"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^3","^4","~$->interceptor","^=","~$get-coeffect","^="],"~:defs",["^ ","~$check-and-throw",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","~:line",10,"~:column",7,"~:end-line",10,"~:end-column",22,"~:arglists",["~#list",["~$quote",["^T",[["^B","~$a-spec","~$excep-str"]]]]],"~:doc","Throws an exception with `excep-str` if `db` doesn't match the Spec `a-spec`."],"^7","~$inferenceql.viz.events.interceptors/check-and-throw","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^R",22,"~:method-params",["^T",[["^B","^V","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^P",1,"~:variadic?",false,"^O",10,"~:ret-tag","~$clj-nil","^Q",10,"~:max-fixed-arity",3,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^B","^V","^W"]]]]],"^X","Throws an exception with `excep-str` if `db` doesn't match the Spec `a-spec`."],"~$check-spec",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^O",18,"^P",7,"^Q",18,"^R",17,"^S",["^T",["^U",["^T",[["~$spec"]]]]]],"^7","~$inferenceql.viz.events.interceptors/check-spec","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^R",17,"^Z",["^T",[["^17"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",18,"^12","~$cljs.core/IMap","^Q",18,"^14",1,"^15",true,"^S",["^T",["^U",["^T",[["^17"]]]]]],"~$log-name",["^ ","^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^O",22,"^P",6,"^Q",22,"^R",14],"^7","~$inferenceql.viz.events.interceptors/log-name","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^R",14,"^P",1,"^O",22,"^Q",22,"~:tag","^19","^X","An interceptor which logs an event handler's name to the console.\n  Output includes the event vector. "],"~$event-interceptors",["^ ","^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^O",35,"^P",6,"^Q",35,"^R",24],"^7","~$inferenceql.viz.events.interceptors/event-interceptors","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/events/interceptors.cljs","^R",24,"^P",1,"^O",35,"^Q",35,"^1<","~$cljs.core/IVector","^X","A default set of event interceptors to use within events across the app."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","~$s","^<","^<","^<","^;","^<"],"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:inferenceql.viz.db/db","~:event","~:after","~:log-name","~:id","~:enable-debug-interceptors","~:before","~:log"]],"~:order",["^1H","^1G","^1J","^1K","^1E","^1F","^1I","^1D"]],"^X",null]