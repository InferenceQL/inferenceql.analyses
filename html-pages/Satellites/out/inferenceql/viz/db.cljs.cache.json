["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.viz.db","~:imports",null,"~:requires",["^ ","~$clojure.spec.alpha","~$cljs.spec.alpha","~$modal-panel","~$inferenceql.viz.panels.modal.db","~$inferenceql.viz.components.store.db","^=","~$query-component","~$inferenceql.viz.components.query.db","~$inferenceql.viz.panels.viz.db","^@","~$inferenceql.viz.panels.more.db","^A","~$inferenceql.viz.panels.table.db","^B","^<","^<","~$inferenceql.viz.panels.override.db","^C","~$more-panel","^A","~$table-panel","^B","~$control-panel","~$inferenceql.viz.panels.control.db","~$override-panel","^C","~$s","^:","~$viz-panel","^@","^G","^G","~$store-component","^=","^?","^?","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$default-general-db",["^ ","~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/db.cljs","~:line",23,"~:column",6,"~:end-line",23,"~:end-column",24],"^5","~$inferenceql.viz.db/default-general-db","^P","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/db.cljs","^T",24,"^R",1,"^Q",23,"^S",23,"~:tag","~$cljs.core/IMap","~:doc","This db map is meant to contain keys and values not specific to\n  any application panel."],"~$default-db",["^ ","~:protocol-inline",null,"^O",["^ ","^P","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/db.cljs","^Q",28,"^R",7,"^S",28,"^T",17,"~:arglists",["~#list",["~$quote",["^10",[[]]]]],"^X","When the application starts, this will be the value put in `app-db`.\n  It consists of keys and values from the general db\n  and panel specific dbs all merged together."],"^5","~$inferenceql.viz.db/default-db","^P","/home/ulli/.gitlibs/libs/probcomp/inferenceql.viz/b9432be71a76e6fb8f4b77d93859278936734320/src/inferenceql/viz/db.cljs","^T",17,"~:method-params",["^10",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^R",1,"~:variadic?",false,"^Q",28,"~:ret-tag","~$any","^S",28,"~:max-fixed-arity",0,"~:fn-var",true,"^[",["^10",["^11",["^10",[[]]]]],"^X","When the application starts, this will be the value put in `app-db`.\n  It consists of keys and values from the general db\n  and panel specific dbs all merged together."]],"~:cljs.spec/registry-ref",[["~:inferenceql.viz.db/db",["^10",["~$cljs.spec.alpha/keys","~:req-un",["~:inferenceql.viz.panels.control.db/control-panel","~:inferenceql.viz.panels.override.db/override-panel","~:inferenceql.viz.panels.table.db/table-panel","~:inferenceql.viz.panels.viz.db/viz-panel","~:inferenceql.viz.panels.more.db/more-panel","~:inferenceql.viz.panels.modal.db/modal-panel","~:inferenceql.viz.components.query.db/query-component","~:inferenceql.viz.components.store.db/store-component"]]]]],"~:require-macros",["^ ","~$s","^:","^:","^:","^9","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^1>","~:opt-un","~:gfn","^1F","~:pred-exprs","~:keys-pred","~:opt-keys","~:more-panel","~:control-panel","~:table-panel","^1@","~:req-specs","^1<","~:override-panel","~$cljs.core/contains?","~$cljs.core/map?","~$%","~:viz-panel","~:store-component","^1=","~:req","^1B","~:req-keys","~$cljs.core/fn","^1?","~:opt-specs","~:pred-forms","^1D","^1A","~:modal-panel","~:query-component","^1E","~:opt","^1C"]],"~:order",["^1<","^1=","^1>","^1?","^1@","^1A","^1B","^1C","^1D","^1E","^1F","^1J","^1K","^1L","^1M","^1N","^1R","^1X","^1Y","^1[","^20","^23","^1P","^1S","^1Q","^1V","^1O","^21","^22","^1W","^1Z","~$%","^1U","^1T"]],"^X",null]