["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.inference.gpm.compositional","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","^:","^:","~$dpm","~$inferenceql.inference.dpm","^<","^<","~$proto","~$inferenceql.inference.gpm.proto","^>","^>","~$dist","~$metaprob.distributions","^@","^@"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$monte-carlo-integration",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","~:line",7,"~:column",17,"~:end-line",7,"~:end-column",40,"~:private",true,"~:arglists",["~#list",["~$quote",["^N",[["~$n","^;","~$gpm","~$targets","~$conditions"]]]]]],"^L",true,"^5","~$inferenceql.inference.gpm.compositional/monte-carlo-integration","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",40,"~:method-params",["^N",[["~$n","^;","^P","^Q","^R"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^I",1,"~:variadic?",false,"^H",7,"~:ret-tag","~$number","^J",7,"~:max-fixed-arity",5,"~:fn-var",true,"^M",["^N",["^O",["^N",[["~$n","^;","^P","^Q","^R"]]]]]],"~$Compositional",["^ ","~:num-fields",3,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$inferenceql.inference.gpm.proto/Variables","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$inferenceql.inference.gpm.proto/GPM","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^5","~$inferenceql.inference.gpm.compositional/Compositional","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",25,"~:type",true,"^I",12,"~:internal-ctor",true,"^H",14,"~:record",true,"^J",14,"~:tag","~$function","~:skip-protocol-flag",["^4",["^13","^14","^15","^16","^17","^18","^1:","^1;","^1<","^1>","^1?","^1@","^1A","^1B","^1C"]]],"~$->Compositional",["^ ","^E",null,"^F",["^ ","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",25,"^I",12,"^1F",true,"~:factory","~:positional","^H",14,"^J",14,"^M",["^N",["^O",["^N",[["^;","^P","~$n"]]]]],"~:doc","Positional factory function for inferenceql.inference.gpm.compositional/Compositional."],"^5","~$inferenceql.inference.gpm.compositional/->Compositional","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",25,"^T",["^N",[["^;","^P","~$n"]]],"^U",null,"^V",["^N",[null,null]],"^I",1,"^1F",true,"^W",false,"^1L","^1M","^H",14,"^X","^1D","^J",14,"^Z",3,"^[",true,"^M",["^N",["^O",["^N",[["^;","^P","~$n"]]]]],"^1N","Positional factory function for inferenceql.inference.gpm.compositional/Compositional."],"~$map->Compositional",["^ ","^E",null,"^F",["^ ","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",25,"^I",12,"^1F",true,"^1L","~:map","^H",14,"^J",14,"^M",["^N",["^O",["^N",[["~$G__3788"]]]]],"^1N","Factory function for inferenceql.inference.gpm.compositional/Compositional, taking a map of keywords to field values."],"^5","~$inferenceql.inference.gpm.compositional/map->Compositional","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",25,"^T",["^N",[["^1R"]]],"^U",null,"^V",["^N",[null,null]],"^I",1,"^1F",true,"^W",false,"^1L","^1Q","^H",14,"^X","^1D","^J",14,"^Z",1,"^[",true,"^M",["^N",["^O",["^N",[["^1R"]]]]],"^1N","Factory function for inferenceql.inference.gpm.compositional/Compositional, taking a map of keywords to field values."],"~$compose",["^ ","^E",null,"^F",["^ ","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^H",42,"^I",7,"^J",42,"^K",14,"^M",["^N",["^O",["^N",[["~$n","^;","^P"]]]]],"^1N","Composes the provided DPM and GPM in such a way that the GPM models the\n  distribution on independent variables for the DPM. Conditioning for\n  simulations is delegated to the GPM and the DPM. Monte Carlo integration is\n  used to condition the independent variables using `n` samples."],"^5","~$inferenceql.inference.gpm.compositional/compose","^G","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/compositional.cljc","^K",14,"^T",["^N",[["~$n","^;","^P"]]],"^U",null,"^V",["^N",[null,null]],"^I",1,"^W",false,"^H",42,"^X","^1D","^J",42,"^Z",3,"^[",true,"^M",["^N",["^O",["^N",[["~$n","^;","^P"]]]]],"^1N","Composes the provided DPM and GPM in such a way that the GPM models the\n  distribution on independent variables for the DPM. Conditioning for\n  simulations is delegated to the GPM and the DPM. Monte Carlo integration is\n  used to condition the independent variables using `n` samples."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:n","~:gpm","~:dpm","~:dependent-targets","~$n","^P","^;","~:independent-targets"]],"~:order",["^1[","^1Z","~:n","^20","^21","^;","^P","~$n"]],"^1N",null]