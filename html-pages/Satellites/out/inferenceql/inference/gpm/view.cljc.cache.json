["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.inference.gpm.view","~:imports",null,"~:requires",["^ ","~$inferenceql.inference.gpm.column","^9","~$conditioned","~$inferenceql.inference.gpm.conditioned","~$gpm.proto","~$inferenceql.inference.gpm.proto","~$gpm.utils","~$inferenceql.inference.gpm.utils","~$inferenceql.inference.primitives","^@","~$inferenceql.inference.gpm.constrained","^A","^;","^;","~$clojure.set","^B","^=","^=","~$constrained","^A","~$column","^9","~$primitives","^@","~$utils","~$inferenceql.inference.utils","^?","^?","^G","^G"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$get-data",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","~:line",42,"~:column",7,"~:end-line",42,"~:end-column",15,"~:arglists",["~#list",["~$quote",["^T",[["~$view","~$row-id"]]]]],"~:doc","Grabs data from view by row-id."],"^5","~$inferenceql.inference.gpm.view/get-data","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",15,"~:method-params",["^T",[["^V","^W"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^P",1,"~:variadic?",false,"^O",42,"~:ret-tag",["^4",[null,"~$any"]],"^Q",42,"~:max-fixed-arity",2,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V","^W"]]]]],"^X","Grabs data from view by row-id."],"~$construct-view-from-latents",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",378,"^P",7,"^Q",378,"^R",34,"^S",["^T",["^U",["^T",[["~$spec","~$latents","~$types","~$data"],["^17","^18","^19","^1:",["^ ","~:keys",["~$options","~$crosscat"]]]]]]],"^X","Constructor for a View GPM, given a spec for the View, latent\n  assignments of data to their respective categories, statistical types of the columns,\n  and data. Used in CrossCat inference.\n\n  spec: a View specification, defined as map of {var-name var-hypers}.\n  types: the statistical types of the variables contained in the columns (e.g. :bernoulli).\n  latents: a map of the below structure, used to keep track of row-category assignments,\n           as well as category sufficient statistics:\n             {:alpha  number                     The concentration parameter for the Column's CRP\n              :counts {category-name count}      Maps category name to size of the category. Updated\n                                                 incrementally instead of being calculated on the fly.\n              :y {row-identifier category-name}  Maps rows to their current category assignment.\n  data: the data belonging to the Column. Must be a map of {row-id {var-name value}},\n        including nil values.\n  options (optional): Information needed in the column; e.g. For a :categorical Column,\n                      `options` would contain a list of possible values the variable could take.\n  crosscat (optional): Flag to indicate use in a CrossCat model. This affects how data is handled\n                       internally, as CrossCat inference relies on unique row identifiers for\n                       efficient inference.","~:top-fn",["^ ","^11",false,"~:fixed-arity",5,"^14",5,"^Z",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]],"^S",["^T",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]]],"^10",["^T",[null,null]]]],"^5","~$inferenceql.inference.gpm.view/construct-view-from-latents","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",34,"^1>",["^ ","^11",false,"^1?",5,"^14",5,"^Z",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]],"^S",["^T",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]]],"^10",["^T",[null,null]]],"^Z",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]],"^[",null,"^1?",5,"^10",["^T",[null,null]],"^P",1,"^11",false,"~:methods",[["^ ","^1?",4,"^11",false,"~:tag","^13"],["^ ","^1?",5,"^11",false,"^1B","~$inferenceql.inference.gpm.view/View"]],"^O",378,"^Q",378,"^14",5,"^15",true,"^S",["^T",[["^17","^18","^19","^1:"],["^17","^18","^19","^1:",["^ ","^1;",["^1<","^1="]]]]],"^X","Constructor for a View GPM, given a spec for the View, latent\n  assignments of data to their respective categories, statistical types of the columns,\n  and data. Used in CrossCat inference.\n\n  spec: a View specification, defined as map of {var-name var-hypers}.\n  types: the statistical types of the variables contained in the columns (e.g. :bernoulli).\n  latents: a map of the below structure, used to keep track of row-category assignments,\n           as well as category sufficient statistics:\n             {:alpha  number                     The concentration parameter for the Column's CRP\n              :counts {category-name count}      Maps category name to size of the category. Updated\n                                                 incrementally instead of being calculated on the fly.\n              :y {row-identifier category-name}  Maps rows to their current category assignment.\n  data: the data belonging to the Column. Must be a map of {row-id {var-name value}},\n        including nil values.\n  options (optional): Information needed in the column; e.g. For a :categorical Column,\n                      `options` would contain a list of possible values the variable could take.\n  crosscat (optional): Flag to indicate use in a CrossCat model. This affects how data is handled\n                       internally, as CrossCat inference relies on unique row identifiers for\n                       efficient inference."],"~$add-aux-categories",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",26,"^P",7,"^Q",26,"^R",25,"^S",["^T",["^U",["^T",[["^V","~$m"]]]]],"^X","Add m auxiliary categories to the given view."],"^5","~$inferenceql.inference.gpm.view/add-aux-categories","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",25,"^Z",["^T",[["^V","~$m"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",26,"^12",["^4",[null,"^13"]],"^Q",26,"^14",2,"^15",true,"^S",["^T",["^U",["^T",[["^V","~$m"]]]]],"^X","Add m auxiliary categories to the given view."],"~$construct-view-from-hypers",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",433,"^P",7,"^Q",433,"^R",33,"^S",["^T",["^U",["^T",[["^17","^19"]]]]],"^X","Constructor of a View GPM, given a specification for variable hyperparameters, as well\n  as variable statistical types."],"^5","~$inferenceql.inference.gpm.view/construct-view-from-hypers","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",33,"^Z",["^T",[["^17","^19"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",433,"^12","^1C","^Q",433,"^14",2,"^15",true,"^S",["^T",["^U",["^T",[["^17","^19"]]]]],"^X","Constructor of a View GPM, given a specification for variable hyperparameters, as well\n  as variable statistical types."],"~$infer-row-category-view",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",220,"^P",7,"^Q",220,"^R",30,"^S",["^T",["^U",["^T",[["^V","~$m"],["^V","~$m","~$supplied-rowids"]]]]],"^X","Given a view and list of row-ids, infers the assignment of each row with both the\n  current categories in the view, as well as `m` specified auxiliary ones.\n  This is Algorithm 8 from http://www.stat.columbia.edu/npbayes/papers/neal_sampling.pdf","^1>",["^ ","^11",false,"^1?",3,"^14",3,"^Z",[["^V","~$m"],["^V","~$m","^1I"]],"^S",["^T",[["^V","~$m"],["^V","~$m","^1I"]]],"^10",["^T",[null,null]]]],"^5","~$inferenceql.inference.gpm.view/infer-row-category-view","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",30,"^1>",["^ ","^11",false,"^1?",3,"^14",3,"^Z",[["^V","~$m"],["^V","~$m","^1I"]],"^S",["^T",[["^V","~$m"],["^V","~$m","^1I"]]],"^10",["^T",[null,null]]],"^Z",[["^V","~$m"],["^V","~$m","^1I"]],"^[",null,"^1?",3,"^10",["^T",[null,null]],"^P",1,"^11",false,"^1A",[["^ ","^1?",2,"^11",false,"^1B","^13"],["^ ","^1?",3,"^11",false,"^1B",["^4",[null,"^13"]]]],"^O",220,"^Q",220,"^14",3,"^15",true,"^S",["^T",[["^V","~$m"],["^V","~$m","^1I"]]],"^X","Given a view and list of row-ids, infers the assignment of each row with both the\n  current categories in the view, as well as `m` specified auxiliary ones.\n  This is Algorithm 8 from http://www.stat.columbia.edu/npbayes/papers/neal_sampling.pdf"],"~$View",["^ ","~:num-fields",3,"~:protocols",["^4",["~$cljs.core/IRecord","~$inferenceql.inference.gpm.proto/Insert","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$inferenceql.inference.gpm.proto/Incorporate","~$cljs.core/ICounted","~$inferenceql.inference.gpm.proto/Constrain","~$inferenceql.inference.gpm.proto/Variables","~$inferenceql.inference.gpm.proto/Condition","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$inferenceql.inference.gpm.proto/GPM","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup","~$inferenceql.inference.gpm.proto/Score"]],"^5","^1C","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",16,"~:type",true,"^P",12,"~:internal-ctor",true,"^O",266,"~:record",true,"^Q",266,"^1B","~$function","~:skip-protocol-flag",["^4",["^1N","^1P","^1Q","^1R","^1S","^1U","^1Y","^1Z","^1[","^21","^22","^23","^24","^25","^26"]]],"~$incorporate-by-rowid",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",131,"^P",7,"^Q",131,"^R",27,"^S",["^T",["^U",["^T",[["~$gpm","~$values","^W"]]]]]],"^5","~$inferenceql.inference.gpm.view/incorporate-by-rowid","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",27,"^Z",["^T",[["^2>","^2?","^W"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",131,"^12",["^4",["~$clj","^13"]],"^Q",131,"^14",3,"^15",true,"^S",["^T",["^U",["^T",[["^2>","^2?","^W"]]]]]],"~$incorporate-column",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",146,"^P",7,"^Q",146,"^R",25,"^S",["^T",["^U",["^T",[["^V","^D"]]]]],"^X","Given a View, a variable name, and a Column GPM, incorporates the Column into the View."],"^5","~$inferenceql.inference.gpm.view/incorporate-column","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",25,"^Z",["^T",[["^V","^D"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",146,"^12",["^4",["^2A","^13"]],"^Q",146,"^14",2,"^15",true,"^S",["^T",["^U",["^T",[["^V","^D"]]]]],"^X","Given a View, a variable name, and a Column GPM, incorporates the Column into the View."],"~$unincorporate-from-category",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",94,"^P",7,"^Q",94,"^R",34,"^S",["^T",["^U",["^T",[["^V","^2?","~$category-remove"],["^V","^2?","^2E","~$row-id-remove"]]]]],"^X","Unincorporate method for CrossCat inference machinery.\n  Unincorporates `values` associated with from the category\n  specified by `category-remove`.","^1>",["^ ","^11",false,"^1?",4,"^14",4,"^Z",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]],"^S",["^T",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]]],"^10",["^T",[null,null]]]],"^5","~$inferenceql.inference.gpm.view/unincorporate-from-category","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",34,"^1>",["^ ","^11",false,"^1?",4,"^14",4,"^Z",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]],"^S",["^T",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]]],"^10",["^T",[null,null]]],"^Z",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]],"^[",null,"^1?",4,"^10",["^T",[null,null]],"^P",1,"^11",false,"^1A",[["^ ","^1?",3,"^11",false,"^1B","^13"],["^ ","^1?",4,"^11",false,"^1B",["^4",["^2A","^13"]]]],"^O",94,"^Q",94,"^14",4,"^15",true,"^S",["^T",[["^V","^2?","^2E"],["^V","^2?","^2E","^2F"]]],"^X","Unincorporate method for CrossCat inference machinery.\n  Unincorporates `values` associated with from the category\n  specified by `category-remove`."],"~$view?",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",455,"^P",7,"^Q",455,"^R",12,"^S",["^T",["^U",["^T",[["~$stattype"]]]]],"^X","Checks if the given GPM is a View."],"^5","~$inferenceql.inference.gpm.view/view?","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",12,"^Z",["^T",[["^2I"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",455,"^12","~$boolean","^Q",455,"^14",1,"^15",true,"^S",["^T",["^U",["^T",[["^2I"]]]]],"^X","Checks if the given GPM is a View."],"~$update-hyper-grids",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",137,"^P",7,"^Q",137,"^R",25,"^S",["^T",["^U",["^T",[["^V"]]]]],"^X","doc-string"],"^5","~$inferenceql.inference.gpm.view/update-hyper-grids","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",25,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",137,"^12",["^4",["^2A","^13"]],"^Q",137,"^14",1,"^15",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^X","doc-string"],"~$incorporate-into-category",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",67,"^P",7,"^Q",67,"^R",32,"^S",["^T",["^U",["^T",[["^V","^2?","~$category-key"],["^V","^2?","^2O","^W"]]]]],"^X","Incorporate method for CrossCat inference machinery.\n  Incorporates `values` into the category specified by `category-key`.","^1>",["^ ","^11",false,"^1?",4,"^14",4,"^Z",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]],"^S",["^T",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]]],"^10",["^T",[null,null]]]],"^5","~$inferenceql.inference.gpm.view/incorporate-into-category","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",32,"^1>",["^ ","^11",false,"^1?",4,"^14",4,"^Z",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]],"^S",["^T",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]]],"^10",["^T",[null,null]]],"^Z",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]],"^[",null,"^1?",4,"^10",["^T",[null,null]],"^P",1,"^11",false,"^1A",[["^ ","^1?",3,"^11",false,"^1B","^13"],["^ ","^1?",4,"^11",false,"^1B",["^4",["^2A","^13"]]]],"^O",67,"^Q",67,"^14",4,"^15",true,"^S",["^T",[["^V","^2?","^2O"],["^V","^2?","^2O","^W"]]],"^X","Incorporate method for CrossCat inference machinery.\n  Incorporates `values` into the category specified by `category-key`."],"~$construct-view-from-types",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",442,"^P",7,"^Q",442,"^R",32,"^S",["^T",["^U",["^T",[["^19","^1<"]]]]],"^X","Constructor of a View GPM, given a specification for variable types."],"^5","~$inferenceql.inference.gpm.view/construct-view-from-types","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",32,"^Z",["^T",[["^19","^1<"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",442,"^12","^1C","^Q",442,"^14",2,"^15",true,"^S",["^T",["^U",["^T",[["^19","^1<"]]]]],"^X","Constructor of a View GPM, given a specification for variable types."],"~$unincorporate-column",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",200,"^P",7,"^Q",200,"^R",27,"^S",["^T",["^U",["^T",[["^V","~$var-name"]]]]],"^X","Given a View and a variable name unincorporates the Column from the View."],"^5","~$inferenceql.inference.gpm.view/unincorporate-column","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",27,"^Z",["^T",[["^V","^2T"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",200,"^12",["^4",["^2A","^13"]],"^Q",200,"^14",2,"^15",true,"^S",["^T",["^U",["^T",[["^V","^2T"]]]]],"^X","Given a View and a variable name unincorporates the Column from the View."],"~$filter-empty-categories",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",50,"^P",7,"^Q",50,"^R",30,"^S",["^T",["^U",["^T",[["^V"]]]]],"^X","Filters empty categories from the given view."],"^5","~$inferenceql.inference.gpm.view/filter-empty-categories","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",30,"^Z",["^T",[["^V"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^11",false,"^O",50,"^12",["^4",[null,"^13"]],"^Q",50,"^14",1,"^15",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^X","Filters empty categories from the given view."],"~$map->View",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",16,"^P",12,"^29",true,"~:factory","~:map","^O",266,"^Q",266,"^S",["^T",["^U",["^T",[["~$G__3855"]]]]],"^X","Factory function for inferenceql.inference.gpm.view/View, taking a map of keywords to field values."],"^5","~$inferenceql.inference.gpm.view/map->View","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",16,"^Z",["^T",[["^2["]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^29",true,"^11",false,"^2Y","^2Z","^O",266,"^12","^1C","^Q",266,"^14",1,"^15",true,"^S",["^T",["^U",["^T",[["^2["]]]]],"^X","Factory function for inferenceql.inference.gpm.view/View, taking a map of keywords to field values."],"~$column-logpdfs",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^O",16,"^P",7,"^Q",16,"^R",21,"^S",["^T",["^U",["^T",[["~$columns","~$targets"],["^32","^33",["^ ","^1;",["~$add-aux"]]]]]]],"^X","Given a map of columns, and targets, returns a map of category probabilities of the targets.","^1>",["^ ","^11",false,"^1?",3,"^14",3,"^Z",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]],"^S",["^T",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]]],"^10",["^T",[null,null]]]],"^5","~$inferenceql.inference.gpm.view/column-logpdfs","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",21,"^1>",["^ ","^11",false,"^1?",3,"^14",3,"^Z",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]],"^S",["^T",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]]],"^10",["^T",[null,null]]],"^Z",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]],"^[",null,"^1?",3,"^10",["^T",[null,null]],"^P",1,"^11",false,"^1A",[["^ ","^1?",2,"^11",false,"^1B","^13"],["^ ","^1?",3,"^11",false,"^1B","^13"]],"^O",16,"^Q",16,"^14",3,"^15",true,"^S",["^T",[["^32","^33"],["^32","^33",["^ ","^1;",["^34"]]]]],"^X","Given a map of columns, and targets, returns a map of category probabilities of the targets."],"~$->View",["^ ","^L",null,"^M",["^ ","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",16,"^P",12,"^29",true,"^2Y","~:positional","^O",266,"^Q",266,"^S",["^T",["^U",["^T",[["^32","^18","~$assignments"]]]]],"^X","Positional factory function for inferenceql.inference.gpm.view/View."],"^5","~$inferenceql.inference.gpm.view/->View","^N","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/view.cljc","^R",16,"^Z",["^T",[["^32","^18","^38"]]],"^[",null,"^10",["^T",[null,null]],"^P",1,"^29",true,"^11",false,"^2Y","^37","^O",266,"^12","^1C","^Q",266,"^14",3,"^15",true,"^S",["^T",["^U",["^T",[["^32","^18","^38"]]]]],"^X","Positional factory function for inferenceql.inference.gpm.view/View."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:y","~:aux","~:add-aux","~:assignments","~:r","~:latents","~:row-ids","~:counts","~:beta","~:log-categorical","^38","~:columns","~:m","^18","~:s","^32","~:nu","~:categories","~:alpha","~:var-name","~:options","~:hypers","~:crosscat","~:p","~:data"]],"~:order",["^3?","^3A","^3C","^3F","^3N","^3H","~:y","^3@","^3B","^3I","^3J","~:p","^3E","^3>","^32","^18","^38","^3K","^3M","^3L","^3D","~:m","~:r","~:s","^3G"]],"^X","Implementation of a GPM that represents a population of data of potentially\n  different primitive types, but the same row categorizations. For a tabular dataset,\n  this GPM abstracts a subset of columns of that dataset, the rows of which are clustered\n  together in categories. This can also be considered as Dirichlet Process Mixture Model (DPMM).\n  See `inferenceql.inference.gpm/view` for details."]