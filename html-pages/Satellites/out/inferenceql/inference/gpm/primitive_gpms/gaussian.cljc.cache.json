["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.inference.gpm.primitive-gpms.gaussian","~:imports",null,"~:requires",["^ ","~$gpm.proto","~$inferenceql.inference.gpm.proto","^:","^:","~$utils","~$inferenceql.inference.utils","^<","^<","~$primitives","~$inferenceql.inference.primitives","^>","^>"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$posterior-hypers",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^K",[["~$n","~$sum-x","~$sum-x-sq","~$hyperparameters"]]]]],"~:doc","Given sufficient statistics and the current hyperparameters,\n  returns the hyperparameters of the posterior distribution."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/posterior-hypers","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",23,"~:method-params",["^K",[["~$n","^M","^N","^O"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^G",1,"~:variadic?",false,"^F",6,"~:ret-tag","~$cljs.core/IVector","^H",6,"~:max-fixed-arity",4,"~:fn-var",true,"^J",["^K",["^L",["^K",[["~$n","^M","^N","^O"]]]]],"^P","Given sufficient statistics and the current hyperparameters,\n  returns the hyperparameters of the posterior distribution."],"~$gaussian?",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^F",113,"^G",7,"^H",113,"^I",16,"^J",["^K",["^L",["^K",[["~$stattype"]]]]],"^P","Checks if the given pGPM is Gaussian."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/gaussian?","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",16,"^R",["^K",[["^["]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^U",false,"^F",113,"^V","~$boolean","^H",113,"^X",1,"^Y",true,"^J",["^K",["^L",["^K",[["^["]]]]],"^P","Checks if the given pGPM is Gaussian."],"~$spec->gaussian",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^F",133,"^G",7,"^H",133,"^I",21,"^J",["^K",["^L",["^K",[["~$var-name","~$&",["^ ","~:keys",["^O","~$suff-stats"]]]]]]],"^P","Casts a CrossCat category spec to a Gaussian pGPM.\n  Requires a variable name, optionally takes by key\n  sufficient statistics and hyperparameters.","~:top-fn",["^ ","^U",true,"~:fixed-arity",1,"^X",1,"^R",[["^K",["^13",["^ ","^14",["^O","^15"]]]]],"^J",["^K",[["^13","~$&",["^ ","^14",["^O","^15"]]]]],"^T",["^K",[null]]]],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/spec->gaussian","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",21,"^16",["^ ","^U",true,"^17",1,"^X",1,"^R",[["^K",["^13",["^ ","^14",["^O","^15"]]]]],"^J",["^K",[["^13","~$&",["^ ","^14",["^O","^15"]]]]],"^T",["^K",[null]]],"^R",[["^K",["^13",["^ ","^14",["^O","^15"]]]]],"^S",null,"^17",1,"^T",["^K",[null]],"^G",1,"^U",true,"~:methods",[["^ ","^17",1,"^U",true,"~:tag","~$inferenceql.inference.gpm.primitive-gpms.gaussian/Gaussian"]],"^F",133,"^V","~$any","^H",133,"^X",1,"^Y",true,"^J",["^K",[["^13","~$&",["^ ","^14",["^O","^15"]]]]],"^P","Casts a CrossCat category spec to a Gaussian pGPM.\n  Requires a variable name, optionally takes by key\n  sufficient statistics and hyperparameters."],"~$Gaussian",["^ ","~:num-fields",3,"~:protocols",["^4",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$inferenceql.inference.gpm.proto/Incorporate","~$cljs.core/ICounted","~$inferenceql.inference.gpm.proto/Variables","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$inferenceql.inference.gpm.proto/GPM","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup","~$inferenceql.inference.gpm.proto/Score"]],"^5","^1;","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",20,"~:type",true,"^G",12,"~:internal-ctor",true,"^F",41,"~:record",true,"^H",41,"^1:","~$function","~:skip-protocol-flag",["^4",["^1@","^1A","^1B","^1C","^1D","^1F","^1H","^1I","^1J","^1L","^1M","^1N","^1O","^1P","^1Q"]]],"~$->Gaussian",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",20,"^G",12,"^1T",true,"~:factory","~:positional","^F",41,"^H",41,"^J",["^K",["^L",["^K",[["^13","^15","^O"]]]]],"^P","Positional factory function for inferenceql.inference.gpm.primitive-gpms.gaussian/Gaussian."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/->Gaussian","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",20,"^R",["^K",[["^13","^15","^O"]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^1T",true,"^U",false,"^1Y","^1Z","^F",41,"^V","^1;","^H",41,"^X",3,"^Y",true,"^J",["^K",["^L",["^K",[["^13","^15","^O"]]]]],"^P","Positional factory function for inferenceql.inference.gpm.primitive-gpms.gaussian/Gaussian."],"~$calc-z",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^F",25,"^G",7,"^H",25,"^I",13,"^J",["^K",["^L",["^K",[["~$r","~$s","~$nu"]]]]],"^P","Given the hyperparameters r, s, and nu, calculates the normalizing\n  constant Z of a Normal-Inverse-Gamma distribution."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/calc-z","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",13,"^R",["^K",[["~$r","~$s","^21"]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^U",false,"^F",25,"^V","~$number","^H",25,"^X",3,"^Y",true,"^J",["^K",["^L",["^K",[["~$r","~$s","^21"]]]]],"^P","Given the hyperparameters r, s, and nu, calculates the normalizing\n  constant Z of a Normal-Inverse-Gamma distribution."],"~$export",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^F",142,"^G",7,"^H",142,"^I",13,"^J",["^K",["^L",["^K",[["~$gaussian"]]]]],"^P","Exports a Gaussian pGPM to a Multimixture spec."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/export","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",13,"^R",["^K",[["^25"]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^U",false,"^F",142,"^V","^1P","^H",142,"^X",1,"^Y",true,"^J",["^K",["^L",["^K",[["^25"]]]]],"^P","Exports a Gaussian pGPM to a Multimixture spec."],"~$map->Gaussian",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",20,"^G",12,"^1T",true,"^1Y","~:map","^F",41,"^H",41,"^J",["^K",["^L",["^K",[["~$G__3485"]]]]],"^P","Factory function for inferenceql.inference.gpm.primitive-gpms.gaussian/Gaussian, taking a map of keywords to field values."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/map->Gaussian","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",20,"^R",["^K",[["^29"]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^1T",true,"^U",false,"^1Y","^28","^F",41,"^V","^1;","^H",41,"^X",1,"^Y",true,"^J",["^K",["^L",["^K",[["^29"]]]]],"^P","Factory function for inferenceql.inference.gpm.primitive-gpms.gaussian/Gaussian, taking a map of keywords to field values."],"~$hyper-grid",["^ ","^C",null,"^D",["^ ","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^F",119,"^G",7,"^H",119,"^I",17,"^J",["^K",["^L",["^K",[["~$data","~$n-grid"]]]]],"^P","Hyperparameter grid for the Gaussian variable, used in column hyperparameter inference\n  for Column GPMs.\n  This mirrors the implementation in `cgpm` library for a `normal` variable."],"^5","~$inferenceql.inference.gpm.primitive-gpms.gaussian/hyper-grid","^E","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/gpm/primitive_gpms/gaussian.cljc","^I",17,"^R",["^K",[["^2<","^2="]]],"^S",null,"^T",["^K",[null,null]],"^G",1,"^U",false,"^F",119,"^V","^1P","^H",119,"^X",2,"^Y",true,"^J",["^K",["^L",["^K",[["^2<","^2="]]]]],"^P","Hyperparameter grid for the Gaussian variable, used in column hyperparameter inference\n  for Column GPMs.\n  This mirrors the implementation in `cgpm` library for a `normal` variable."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:r","~:else","~:n","~:m","~:hyperparameters","~:sigma","~:gaussian","~:theta","~:s","~:k","^O","~:nu","~:sum-x","~:suff-stats","~:gamma","~:var-name","~:mu","^15","~:sum-x-sq","^13"]],"~:order",["~:m","~:r","~:s","^2H","^2L","^2C","~:n","^2I","^2N","^2K","~:k","^2G","^2F","^2M","^2E","^2J","^2D","^13","^15","^O"]],"^P",null]