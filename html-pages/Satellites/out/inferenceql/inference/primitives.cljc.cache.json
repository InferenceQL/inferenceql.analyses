["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.inference.primitives","~:imports",null,"~:requires",["^ ","~$utils","~$inferenceql.inference.utils","^:","^:","~$dist","~$inferenceql.inference.distributions","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$categorical-logpdf",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","~:line",154,"~:column",7,"~:end-line",154,"~:end-column",25,"~:arglists",["~#list",["~$quote",["^I",[["~$x",["^ ","~:keys",["~$p"]]]]]]],"~:doc","Log PDF for categorical distribution."],"^5","~$inferenceql.inference.primitives/categorical-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",25,"~:method-params",["^I",[["~$x","~$p__3393"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"~:variadic?",false,"^D",154,"~:ret-tag",["^4",["~$any","~$number"]],"^F",154,"~:max-fixed-arity",2,"~:fn-var",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$p"]]]]]]],"^L","Log PDF for categorical distribution."],"~$gammaln",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",7,"^E",7,"^F",7,"^G",14,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^L","Returns the log of `x` under a gamma function."],"^5","~$inferenceql.inference.primitives/gammaln","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",14,"^N",["^I",[["~$x"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",7,"^S","^U","^F",7,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^L","Returns the log of `x` under a gamma function."],"~$logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",277,"^E",7,"^F",277,"^G",13,"^H",["^I",["^J",["^I",[["~$x","~$primitive","~$parameters"],["^[","^10"]]]]],"^L","Given a primitive, its parameters, returns the log probability of\n  `x` under said primitive.","~:top-fn",["^ ","^R",false,"~:fixed-arity",3,"^V",3,"^N",[["~$x","^[","^10"],["^[","^10"]],"^H",["^I",[["~$x","^[","^10"],["^[","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",13,"^11",["^ ","^R",false,"^12",3,"^V",3,"^N",[["~$x","^[","^10"],["^[","^10"]],"^H",["^I",[["~$x","^[","^10"],["^[","^10"]]],"^Q",["^I",[null,null]]],"^N",[["~$x","^[","^10"],["^[","^10"]],"^P",null,"^12",3,"^Q",["^I",[null,null]],"^E",1,"^R",false,"~:methods",[["^ ","^12",3,"^R",false],["^ ","^12",2,"^R",false,"~:tag","~$function"]],"^D",277,"^F",277,"^V",3,"^W",true,"^H",["^I",[["~$x","^[","^10"],["^[","^10"]]],"^L","Given a primitive, its parameters, returns the log probability of\n  `x` under said primitive."],"~$crp-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",207,"^E",7,"^F",207,"^G",17,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$alpha"]]]]]]],"^L","Returns log probability of table counts `x` under a Chinese Restaurant Process\n  parameterized by a number `alpha`."],"^5","~$inferenceql.inference.primitives/crp-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",17,"^N",["^I",[["~$x","~$p__3427"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",207,"^S","^U","^F",207,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^18"]]]]]]],"^L","Returns log probability of table counts `x` under a Chinese Restaurant Process\n  parameterized by a number `alpha`."],"~$crp-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",220,"^E",7,"^F",220,"^G",19,"^H",["^I",["^J",["^I",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]]]]],"^L","Simulates n customers of a Chinese Restaurant Process parameterized by\n  the concentration parameter `alpha`.\n  Returns a vector of [table-counts customer-assignments].","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]],"^H",["^I",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/crp-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",19,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]],"^H",["^I",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15","^T"],["^ ","^12",2,"^R",false,"^15",["^4",[null,"^T"]]]],"^D",220,"^F",220,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["^18"]]],["~$n",["^ ","^K",["^18"]]]]],"^L","Simulates n customers of a Chinese Restaurant Process parameterized by\n  the concentration parameter `alpha`.\n  Returns a vector of [table-counts customer-assignments]."],"~$gamma-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",121,"^E",7,"^F",121,"^G",21,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$k","~$theta"],"~:or",["^ ","^1>",1]]],["~$n","~$params"]]]]],"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]],"^H",["^I",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/gamma-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",21,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]],"^H",["^I",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15",["^4",["^U","~$js/Number"]]],["^ ","^12",2,"^R",false,"^15","~$cljs.core/LazySeq"]],"^D",121,"^F",121,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["~$k","^1>"],"^1?",["^ ","^1>",1]]],["~$n","^1@"]]]],"~$dirichlet-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",251,"^E",7,"^F",251,"^G",23,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^18"]]]]]]],"^L","Returns log probability of `x` under a dirichlet distribution parameterized by\n  a vector `alpha`."],"^5","~$inferenceql.inference.primitives/dirichlet-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",23,"^N",["^I",[["~$x","~$p__3443"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",251,"^S","^U","^F",251,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^18"]]]]]]],"^L","Returns log probability of `x` under a dirichlet distribution parameterized by\n  a vector `alpha`."],"~$beta-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",128,"^E",7,"^F",128,"^G",18,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^18","~$beta"]]]]]]],"^L","Returns log probability of `x` under a beta distribution parameterized by\n  `alpha` and `beta`."],"^5","~$inferenceql.inference.primitives/beta-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",18,"^N",["^I",[["~$x","~$p__3385"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",128,"^S","^U","^F",128,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^18","^1H"]]]]]]],"^L","Returns log probability of `x` under a beta distribution parameterized by\n  `alpha` and `beta`."],"~$categorical-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",162,"^E",7,"^F",162,"^G",27,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$p"]]],["~$n","^10"]]]]],"^L","Generates a sample from a categorical distribution with vector parameters `p`.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/categorical-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",27,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["~$p"]]],["~$n","^10"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15",["^4",["^T","~$clj-nil"]]],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",162,"^F",162,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","^10"]]],"^L","Generates a sample from a categorical distribution with vector parameters `p`.\n  Generates `n` samples, if specified."],"~$bernoulli-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",31,"^E",7,"^F",31,"^G",25,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]]]],"^L","Generates a sample from a bernoulli distribution with parameter `p`.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/bernoulli-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",25,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15","~$boolean"],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",31,"^F",31,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^L","Generates a sample from a bernoulli distribution with parameter `p`.\n  Generates `n` samples, if specified."],"~$gamma-simulate-webppl",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",76,"^E",7,"^F",76,"^G",28,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$k","^1>"]]]]]]],"^L","An implementation of Marsaglia & Tang, 2000: A Simple Method for Generating Gamma Variables.\n  Based on the javascript implementation found in WebPPL.\n\n  This function works in CLJ as well as CLJS for testing purposes--although it is intened that\n  we only use it in CLJS in practice."],"^5","~$inferenceql.inference.primitives/gamma-simulate-webppl","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",28,"^N",["^I",[["~$p__3370"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",76,"^S",["^4",["^U","^1B"]],"^F",76,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$k","^1>"]]]]]]],"^L","An implementation of Marsaglia & Tang, 2000: A Simple Method for Generating Gamma Variables.\n  Based on the javascript implementation found in WebPPL.\n\n  This function works in CLJ as well as CLJS for testing purposes--although it is intened that\n  we only use it in CLJS in practice."],"~$betaln",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",15,"^E",7,"^F",15,"^G",13,"^H",["^I",["^J",["^I",[["~$x","~$y"]]]]],"^L","Computes the natural log of the beta function.\n  Assumes both arguments are greater than zero."],"^5","~$inferenceql.inference.primitives/betaln","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",13,"^N",["^I",[["~$x","~$y"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",15,"^S","^U","^F",15,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x","~$y"]]]]],"^L","Computes the natural log of the beta function.\n  Assumes both arguments are greater than zero."],"~$gamma-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",65,"^E",7,"^F",65,"^G",19,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$k","^1>"]]]]]]],"^L","Returns log probability of `x` under a gamma distribution parameterized\n  by shape parameter `k`, with optional scale parameter `theta`."],"^5","~$inferenceql.inference.primitives/gamma-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",19,"^N",["^I",[["~$x","~$p__3368"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",65,"^S","^U","^F",65,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$k","^1>"]]]]]]],"^L","Returns log probability of `x` under a gamma distribution parameterized\n  by shape parameter `k`, with optional scale parameter `theta`."],"~$beta-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",142,"^E",7,"^F",142,"^G",20,"^H",["^I",["^J",["^I",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]]]]],"^L","Generates a sample from a beta distribution with parameters `alpha` and `beta`.\n  Based on the method specified in Section I, of 'Generating Gamma and Beta Random Variables\n  with Non-Integral Shape Parameters' by J Whittaker, at https://www.jstor.org/stable/pdf/2347003.pdf?seq=1 .\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/beta-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",20,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15","^U"],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",142,"^F",142,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["^18","^1H"]]],["~$n","^10"]]],"^L","Generates a sample from a beta distribution with parameters `alpha` and `beta`.\n  Based on the method specified in Section I, of 'Generating Gamma and Beta Random Variables\n  with Non-Integral Shape Parameters' by J Whittaker, at https://www.jstor.org/stable/pdf/2347003.pdf?seq=1 .\n  Generates `n` samples, if specified."],"~$log-categorical-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",188,"^E",7,"^F",188,"^G",31,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]]]],"^L","Generates a sample from a categorical distribution with parameters `ps`,\n  which are log probabilities.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/log-categorical-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",31,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["~$p"]]],["~$n","~$p"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15",["^4",["^T","^1M"]]],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",188,"^F",188,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["~$p"]]],["~$n","~$p"]]],"^L","Generates a sample from a categorical distribution with parameters `ps`,\n  which are log probabilities.\n  Generates `n` samples, if specified."],"~$gaussian-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",52,"^E",7,"^F",52,"^G",24,"^H",["^I",["^J",["^I",[[["^ ","^K",["~$mu","~$sigma"]]],["~$n","^10"]]]]],"^L","Generates a sample from a dirichlet distribution with vector parameter `alpha`.\n  Based on a Box-Muller transform.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/gaussian-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",24,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15","^U"],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",52,"^F",52,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["^22","^23"]]],["~$n","^10"]]],"^L","Generates a sample from a dirichlet distribution with vector parameter `alpha`.\n  Based on a Box-Muller transform.\n  Generates `n` samples, if specified."],"~$crp-simulate-counts",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",239,"^E",7,"^F",239,"^G",26,"^H",["^I",["^J",["^I",[[["^ ","^K",["^18","~$counts"]]]]]]],"^L","Simulates a table assignment from a CRP with the given concentration parameter\n  `alpha`. `counts` must be a coll of integers."],"^5","~$inferenceql.inference.primitives/crp-simulate-counts","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",26,"^N",["^I",[["~$p__3441"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",239,"^S",["^4",["^T","^1M"]],"^F",239,"^V",1,"^W",true,"^H",["^I",["^J",["^I",[[["^ ","^K",["^18","^26"]]]]]]],"^L","Simulates a table assignment from a CRP with the given concentration parameter\n  `alpha`. `counts` must be a coll of integers."],"~$dirichlet-simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",267,"^E",7,"^F",267,"^G",25,"^H",["^I",["^J",["^I",[[["^ ","^K",["^18"]]],["~$n","^10"]]]]],"^L","Generates a sample from a dirichlet distribution with vector parameter `alpha`.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^18"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/dirichlet-simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",25,"^11",["^ ","^R",false,"^12",2,"^V",2,"^N",[[["^ ","^K",["^18"]]],["~$n","^10"]],"^H",["^I",[[["^ ","^K",["^18"]]],["~$n","^10"]]],"^Q",["^I",[null,null]]],"^N",[[["^ ","^K",["^18"]]],["~$n","^10"]],"^P",null,"^12",2,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",1,"^R",false,"^15","~$clj"],["^ ","^12",2,"^R",false,"^15","^1C"]],"^D",267,"^F",267,"^V",2,"^W",true,"^H",["^I",[[["^ ","^K",["^18"]]],["~$n","^10"]]],"^L","Generates a sample from a dirichlet distribution with vector parameter `alpha`.\n  Generates `n` samples, if specified."],"~$log-categorical-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",180,"^E",7,"^F",180,"^G",29,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$p"]]]]]]],"^L","Log PDF for categorical distribution parameterized by log probabilities."],"^5","~$inferenceql.inference.primitives/log-categorical-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",29,"^N",["^I",[["~$x","~$p__3409"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",180,"^S",["^4",["^T","^U","^1M"]],"^F",180,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~$p"]]]]]]],"^L","Log PDF for categorical distribution parameterized by log probabilities."],"~$simulate",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",294,"^E",7,"^F",294,"^G",15,"^H",["^I",["^J",["^I",[["^[","^10"],["~$n","^[","^10"]]]]],"^L","Given a primitive and its parameters, generates a sample from the primitive.\n  Generates `n` samples, if specified.","^11",["^ ","^R",false,"^12",3,"^V",3,"^N",[["^[","^10"],["~$n","^[","^10"]],"^H",["^I",[["^[","^10"],["~$n","^[","^10"]]],"^Q",["^I",[null,null]]]],"^5","~$inferenceql.inference.primitives/simulate","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",15,"^11",["^ ","^R",false,"^12",3,"^V",3,"^N",[["^[","^10"],["~$n","^[","^10"]],"^H",["^I",[["^[","^10"],["~$n","^[","^10"]]],"^Q",["^I",[null,null]]],"^N",[["^[","^10"],["~$n","^[","^10"]],"^P",null,"^12",3,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^14",[["^ ","^12",2,"^R",false],["^ ","^12",3,"^R",false,"^15","^1C"]],"^D",294,"^F",294,"^V",3,"^W",true,"^H",["^I",[["^[","^10"],["~$n","^[","^10"]]],"^L","Given a primitive and its parameters, generates a sample from the primitive.\n  Generates `n` samples, if specified."],"~$bernoulli-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",23,"^E",7,"^F",23,"^G",23,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~:p"]]]]]]],"^L","Returns log probability of `x` under a bernoulli distribution parameterized\n  by `p`."],"^5","~$inferenceql.inference.primitives/bernoulli-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",23,"^N",["^I",[["~$x","~$p__3349"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",23,"^S","^T","^F",23,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["~:p"]]]]]]],"^L","Returns log probability of `x` under a bernoulli distribution parameterized\n  by `p`."],"~$gaussian-logpdf",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^D",40,"^E",7,"^F",40,"^G",22,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^22","^23"]]]]]]],"^L","Returns log probability of `x` under a gaussian distribution parameterized\n  by shape parameter `mu`, with optional scale parameter `sigma`."],"^5","~$inferenceql.inference.primitives/gaussian-logpdf","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.inference/fd40816ceb283880db2b87b3ce5a52dcce7263ad/src/inferenceql/inference/primitives.cljc","^G",22,"^N",["^I",[["~$x","~$p__3357"]]],"^P",null,"^Q",["^I",[null,null]],"^E",1,"^R",false,"^D",40,"^S","^U","^F",40,"^V",2,"^W",true,"^H",["^I",["^J",["^I",[["~$x",["^ ","^K",["^22","^23"]]]]]]],"^L","Returns log probability of `x` under a gaussian distribution parameterized\n  by shape parameter `mu`, with optional scale parameter `sigma`."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:counts","~:beta","~:sigma","~:theta","~:k","~:primitive","~:alpha","~:mu","~:p"]],"~:order",["~:p","^2Q","^2M","~:k","^2N","^2P","^2L","^2K","^2O"]],"^L",null]