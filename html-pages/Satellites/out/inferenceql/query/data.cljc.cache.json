["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$inferenceql.query.data","~:imports",null,"~:requires",["^ ","~$edn","~$clojure.edn","^:","^:","~$string","~$clojure.string","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$value-coercer",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/ulli/.gitlibs/libs/probcomp/inferenceql.query/0241ee57e059f618ae55b2ae8822986d778b0d68/src/inferenceql/query/data.cljc","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",20,"~:arglists",["~#list",["~$quote",["^I",[["~$stattype"]]]]],"~:doc","Returns a function that will attempt to coerce a value to a data type\n  compatible with the given statistical type."],"^5","~$inferenceql.query.data/value-coercer","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.query/0241ee57e059f618ae55b2ae8822986d778b0d68/src/inferenceql/query/data.cljc","^G",20,"~:method-params",["^I",[["^K"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"~:variadic?",false,"^D",6,"~:ret-tag","~$function","^F",6,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K"]]]]],"^L","Returns a function that will attempt to coerce a value to a data type\n  compatible with the given statistical type."],"~$row-coercer",["^ ","^A",null,"^B",["^ ","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.query/0241ee57e059f618ae55b2ae8822986d778b0d68/src/inferenceql/query/data.cljc","^D",18,"^E",7,"^F",18,"^G",18,"^H",["^I",["^J",["^I",[["~$variable->stattype"]]]]],"^L","Returns a function that will attempt to coerce the values in a map to values\n  that match on the statistical types provided."],"^5","~$inferenceql.query.data/row-coercer","^C","/home/ulli/.gitlibs/libs/probcomp/inferenceql.query/0241ee57e059f618ae55b2ae8822986d778b0d68/src/inferenceql/query/data.cljc","^G",18,"^N",["^I",[["^W"]]],"^O",null,"^P",["^I",[null,null]],"^E",1,"^Q",false,"^D",18,"^R","^S","^F",18,"^T",1,"^U",true,"^H",["^I",["^J",["^I",[["^W"]]]]],"^L","Returns a function that will attempt to coerce the values in a map to values\n  that match on the statistical types provided."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^L","Functions for manipulating InferenceQL datasets."]